/* Generated by JSIL v0.7.9 build 16496. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm0A = JSIL.DeclareAssembly("System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Deployment");
JSIL.DeclareNamespace("System.Deployment.Application");
/* class System.Deployment.Application.ApplicationActivator */ 

(function ApplicationActivator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ApplicationActivator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "Activate", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateApplicationExtension", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateDeployment", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateDeploymentEx", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ActivateDeploymentWorker", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "ActivateUI", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckActivationInProgress", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckDeploymentProviderValidity", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ActivationDescription"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConsumeUpdatedDeployment", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), $asm0A.TypeRef("System.Deployment.Application.ActivationDescription")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisplayActivationFailureReason", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Exception"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DisplayPlatformDetectionFailureUI", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DependentPlatformMissingException"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DownloadApplication", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.ActivationDescription"), 
          $.Int64, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempDirectory")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInnerMostException", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InstallApplication", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), $asm0A.TypeRef("System.Deployment.Application.ActivationDescription")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsWebExceptionInExceptionStack", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformDeploymentActivation", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Uri"), $.Boolean, 
          $.String, $.String, 
          $asm0A.TypeRef("System.Deployment.Application.ApplicationActivator+BrowserSettings"), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PerformDeploymentUpdate", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), $jsilcore.TypeRef("JSIL.Reference", [$.String])])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessOrFollowExtension", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ActivationDescription"), [
          $asm07.TypeRef("System.Uri"), $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessOrFollowShortcut", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ActivationDescription"), [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveActivationInProgressEntry", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetMarkOfTheWebIfNeeded", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SkipUpdate", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.Field({Static:true , Public:false}, "_activationsInProgress", $asm06.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_remActivationInProgressEntry", $.Boolean); 
    $.Field({Static:false, Public:false}, "_subStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")); 
    $.Field({Static:false, Public:false}, "_ui", $asm0A.TypeRef("System.Deployment.Application.UserInterface")); 
    $.Field({Static:false, Public:false}, "_fullTrust", $.Boolean); 
    $.Field({Static:true , Public:false}, "_liveActivationLimitUIStatus", $.Int32, 0); 
    $.Constant({Static:true , Public:false}, "_liveActivationLimitUINotVisible", 0); 
    $.Constant({Static:true , Public:false}, "_liveActivationLimitUIVisible", 1); 
    $.Constant({Static:true , Public:false}, "ActivateArgumentCount", 5); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ApplicationActivator+BrowserSettings */ 

(function BrowserSettings$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ApplicationActivator+BrowserSettings", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "GetManagedFlagValue", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ApplicationActivator+BrowserSettings+ManagedFlags"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "Validate", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:true }, "ManagedSignedFlag", $asm0A.TypeRef("System.Deployment.Application.ApplicationActivator+BrowserSettings+ManagedFlags")); 
    $.Field({Static:false, Public:true }, "ManagedUnSignedFlag", $asm0A.TypeRef("System.Deployment.Application.ApplicationActivator+BrowserSettings+ManagedFlags")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.ApplicationActivator+BrowserSettings+ManagedFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ApplicationActivator+BrowserSettings+ManagedFlags", false, {
    URLPOLICY_ALLOW: 0, 
    URLPOLICY_QUERY: 1, 
    URLPOLICY_DISALLOW: 3
  }, false
);

/* enum System.Deployment.Application.ActivationType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ActivationType", false, {
    None: 0, 
    InstallViaDotApplication: 1, 
    InstallViaShortcut: 2, 
    InstallViaFileAssociation: 3, 
    UpdateViaShortcutOrFA: 4
  }, false
);

/* class System.Deployment.Application.CommitApplicationParams */ 

(function CommitApplicationParams$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.CommitApplicationParams", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EffectiveCertificatePublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EffectiveDescription", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.Description"))
    );

    $.Field({Static:false, Public:true }, "AppId", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:true }, "CommitApp", $.Boolean); 
    $.Field({Static:false, Public:true }, "AppManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:true }, "AppSourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "AppManifestPath", $.String); 
    $.Field({Static:false, Public:true }, "AppPayloadPath", $.String); 
    $.Field({Static:false, Public:true }, "AppGroup", $.String); 
    $.Field({Static:false, Public:true }, "CommitDeploy", $.Boolean); 
    $.Field({Static:false, Public:true }, "DeployManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:true }, "DeploySourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "DeployManifestPath", $.String); 
    $.Field({Static:false, Public:true }, "TimeStamp", $asm06.TypeRef("System.DateTime")); 
    $.Field({Static:false, Public:true }, "IsConfirmed", $.Boolean); 
    $.Field({Static:false, Public:true }, "IsUpdate", $.Boolean); 
    $.Field({Static:false, Public:true }, "IsRequiredUpdate", $.Boolean); 
    $.Field({Static:false, Public:true }, "IsUpdateInPKTGroup", $.Boolean); 
    $.Field({Static:false, Public:true }, "IsFullTrustRequested", $.Boolean); 
    $.Field({Static:false, Public:true }, "appType", $asm0A.TypeRef("System.Deployment.Application.AppType")); 
    $.Field({Static:false, Public:true }, "Trust", $asm06.TypeRef("System.Security.Policy.ApplicationTrust")); 
    $.Property({Static:false, Public:true }, "EffectiveDescription", $asm0A.TypeRef("System.Deployment.Application.Manifest.Description"));

    $.Property({Static:false, Public:true }, "EffectiveCertificatePublicKeyToken", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ActivationDescription */ 

(function ActivationDescription$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams"), 
      Name: "System.Deployment.Application.ActivationDescription", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ActType", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ActivationType"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ActType", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ActivationType"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "SetApplicationManifest", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm07.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetDeploymentManifest", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm07.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ToActivationContext", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ActivationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ToAppCodebase", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "activationType", $asm0A.TypeRef("System.Deployment.Application.ActivationType")); 
    $.Property({Static:false, Public:true }, "ActType", $asm0A.TypeRef("System.Deployment.Application.ActivationType"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ApplicationDeployment */ 

(function ApplicationDeployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ApplicationDeployment", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "add_CheckForUpdateCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.CheckForUpdateCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_CheckForUpdateProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadFileGroupCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DownloadFileGroupCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadFileGroupProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_UpdateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.ComponentModel.AsyncCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_UpdateProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForDetailedUpdate", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.UpdateCheckInfo"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "CheckForDetailedUpdate", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.UpdateCheckInfo"), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForUpdate", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "CheckForUpdate", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForUpdateAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForUpdateAsyncCancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForUpdateBindCompletedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForUpdateProgressChangedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateDeploymentManager", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DeploymentManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DemandPermission", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DetermineUpdateCheckResult", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.UpdateCheckInfo"), [$asm0A.TypeRef("System.Deployment.Application.ActivationDescription")])
    );

    $.ExternalMethod({Static:false, Public:true }, "DownloadFileGroup", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "DownloadFileGroupAsync", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "DownloadFileGroupAsync", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "DownloadFileGroupAsyncCancel", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "DownloadFileGroupProgressChangedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "EndUpdateAsync", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DeploymentManager"), $asm06.TypeRef("System.Exception"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivationUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CurrentDeployment", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DataDirectory", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Events", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.ComponentModel.EventHandlerList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsFirstRun", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsNetworkDeployed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SyncGroupDeploymentManager", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DeploymentManager"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TimeOfLastUpdateCheck", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdatedApplicationFullName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdatedVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateLocation", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "IsFileGroupDownloaded", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ProcessUpdateCheckResult", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.UpdateCheckInfo"), $asm0A.TypeRef("System.Deployment.Application.ActivationDescription")])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_CheckForUpdateCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.CheckForUpdateCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_CheckForUpdateProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadFileGroupCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DownloadFileGroupCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadFileGroupProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_UpdateCompleted", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.ComponentModel.AsyncCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_UpdateProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeGroupCompletedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeNullCompletedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Update", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "UpdateAsyncCancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateBindCompletedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateProgressChangedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventArgs")])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "checkForUpdateCompletedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "updateCompletedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "downloadFileGroupCompletedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "checkForUpdateProgressChangedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "updateProgressChangedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "downloadFileGroupProgressChangedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "lockObject", $.Object); 
    $.Field({Static:true , Public:false}, "_currentDeployment", $.Type, null); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "asyncOperation", $asm07.TypeRef("System.ComponentModel.AsyncOperation")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "accessPermission", $asm06.TypeRef("System.Security.CodeAccessPermission")); 
    $.Field({Static:false, Public:false}, "_guard", $.Int32); 
    $.Field({Static:false, Public:false}, "_cancellationPending", $.Boolean); 
    $.Field({Static:false, Public:false}, "_subStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")); 
    $.Field({Static:false, Public:false}, "_events", $asm07.TypeRef("System.ComponentModel.EventHandlerList")); 
    $.Field({Static:false, Public:false}, "_fullAppId", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:false}, "_currentVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false}, "_subState", $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")); 
    $.Field({Static:false, Public:false}, "_syncGroupDeploymentManager", $.Object); 
    $.Constant({Static:true , Public:false}, "guardInitial", 0); 
    $.Constant({Static:true , Public:false}, "guardAsync", 1); 
    $.Constant({Static:true , Public:false}, "guardSync", 2); 
    $.Property({Static:true , Public:true }, "CurrentDeployment", $.Type);

    $.Property({Static:true , Public:true }, "IsNetworkDeployed", $.Boolean);

    $.Property({Static:false, Public:true }, "CurrentVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "UpdatedVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "UpdatedApplicationFullName", $.String);

    $.Property({Static:false, Public:true }, "TimeOfLastUpdateCheck", $asm06.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "UpdateLocation", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "ActivationUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "DataDirectory", $.String);

    $.Property({Static:false, Public:true }, "IsFirstRun", $.Boolean);

    $.Property({Static:false, Public:false}, "Events", $asm07.TypeRef("System.ComponentModel.EventHandlerList"));

    $.Property({Static:false, Public:false}, "SyncGroupDeploymentManager", $asm0A.TypeRef("System.Deployment.Application.DeploymentManager"));

    $.Event({Static:false, Public:true }, "CheckForUpdateProgressChanged", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"));

    $.Event({Static:false, Public:true }, "CheckForUpdateCompleted", $asm0A.TypeRef("System.Deployment.Application.CheckForUpdateCompletedEventHandler"));

    $.Event({Static:false, Public:true }, "UpdateProgressChanged", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"));

    $.Event({Static:false, Public:true }, "UpdateCompleted", $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventHandler"));

    $.Event({Static:false, Public:true }, "DownloadFileGroupProgressChanged", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"));

    $.Event({Static:false, Public:true }, "DownloadFileGroupCompleted", $asm0A.TypeRef("System.Deployment.Application.DownloadFileGroupCompletedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.UpdateCheckInfo */ 

(function UpdateCheckInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.UpdateCheckInfo", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $asm06.TypeRef("System.Version"), 
          $.Boolean, $asm06.TypeRef("System.Version"), 
          $.Int64
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AvailableVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsUpdateRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MinimumRequiredVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateAvailable", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateSizeBytes", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseExceptionIfUpdateNotAvailable", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_updateAvailable", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_availableVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_isUpdateRequired", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_minimumRequiredVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_updateSize", $.Int64); 
    $.Property({Static:false, Public:true }, "UpdateAvailable", $.Boolean);

    $.Property({Static:false, Public:true }, "AvailableVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "IsUpdateRequired", $.Boolean);

    $.Property({Static:false, Public:true }, "MinimumRequiredVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "UpdateSizeBytes", $.Int64);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.CheckForUpdateCompletedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.CheckForUpdateCompletedEventHandler", true, []);

/* class System.Deployment.Application.CheckForUpdateCompletedEventArgs */ 

(function CheckForUpdateCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.CheckForUpdateCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 8, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Exception"), $.Boolean, 
          $.Object, $.Boolean, 
          $asm06.TypeRef("System.Version"), $.Boolean, 
          $asm06.TypeRef("System.Version"), $.Int64
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AvailableVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsUpdateRequired", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MinimumRequiredVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateAvailable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateSizeBytes", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:false}, "RaiseExceptionIfUpdateNotAvailable", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_updateAvailable", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_availableVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_isUpdateRequired", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_minimumRequiredVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_updateSize", $.Int64); 
    $.Property({Static:false, Public:true }, "UpdateAvailable", $.Boolean);

    $.Property({Static:false, Public:true }, "AvailableVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "IsUpdateRequired", $.Boolean);

    $.Property({Static:false, Public:true }, "MinimumRequiredVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "UpdateSizeBytes", $.Int64);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.DownloadFileGroupCompletedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.DownloadFileGroupCompletedEventHandler", true, []);

/* class System.Deployment.Application.DownloadFileGroupCompletedEventArgs */ 

(function DownloadFileGroupCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.DownloadFileGroupCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Exception"), $.Boolean, 
          $.Object, $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_groupName", $.String); 
    $.Property({Static:false, Public:true }, "Group", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DefinitionAppId */ 

(function DefinitionAppId$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DefinitionAppId", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; })
      .Parameter(0, "idPath", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])])
    )
      .Parameter(1, "idPath", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationIdentity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Codebase", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ComPointer", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DeploymentIdentity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Hash", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "PathComponent", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [$.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true }, "ToApplicationIdentity", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ApplicationIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ToDeploymentAppId", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_idComPtr", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Property({Static:false, Public:true }, "Hash", $.UInt64);

    $.Property({Static:false, Public:true }, "ComPointer", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"));

    $.Property({Static:false, Public:true }, "Codebase", $.String);

    $.Property({Static:false, Public:true }, "DeploymentIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "ApplicationIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ApplicationTrust */ 

(function ApplicationTrust$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.ApplicationTrust", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "PersistTrustWithoutEvaluation", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Policy.ApplicationTrust"), [$asm06.TypeRef("System.ActivationContext")])
    );

    $.ExternalMethod({Static:true , Public:true }, "RemoveCachedTrust", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"))
    );

    $.ExternalMethod({Static:true , Public:true }, "RequestTrust", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Policy.ApplicationTrust"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $.Boolean, 
          $.Boolean, $asm06.TypeRef("System.ActivationContext")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "RequestTrust", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Policy.ApplicationTrust"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $.Boolean, 
          $.Boolean, $asm06.TypeRef("System.ActivationContext"), 
          $asm06.TypeRef("System.Security.Policy.TrustManagerContext")
        ])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.AssemblyIdentityItems */ 

(function AssemblyIdentityItems$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.AssemblyIdentityItems", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:true }, "Name", "name"); 
    $.Constant({Static:true , Public:true }, "PublicKeyToken", "publicKeyToken"); 
    $.Constant({Static:true , Public:true }, "Version", "version"); 
    $.Constant({Static:true , Public:true }, "ProcessorArchitecture", "processorArchitecture"); 
    $.Constant({Static:true , Public:true }, "Culture", "culture"); 
    $.Constant({Static:true , Public:true }, "Type", "type"); 
    $.Constant({Static:true , Public:true }, "Language", "language"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DefinitionIdentity */ 

(function DefinitionIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DefinitionIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Reflection.AssemblyName"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ComPointer", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Hash", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_KeyForm", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ProcessorArchitecture", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_PublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "Matches", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ToPKTGroupId", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "ToSubscriptionId", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.Field({Static:false, Public:false}, "_idComPtr", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Property({Static:false, Public:true }, "Item", $.String);

    $.Property({Static:false, Public:true }, "Item", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Version", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "PublicKeyToken", $.String);

    $.Property({Static:false, Public:true }, "ProcessorArchitecture", $.String);

    $.Property({Static:false, Public:true }, "Hash", $.UInt64);

    $.Property({Static:false, Public:true }, "KeyForm", $.String);

    $.Property({Static:false, Public:true }, "Attributes", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")]));

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "ComPointer", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.ICloneable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Deployment.Application.ReferenceIdentity */ 

(function ReferenceIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ReferenceIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Clone", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Attributes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ComPointer", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Culture", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Hash", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ProcessorArchitecture", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_PublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ProcessorArchitecture", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_idComPtr", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Property({Static:false, Public:true }, "Item", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Culture", $.String);

    $.Property({Static:false, Public:true }, "Version", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "PublicKeyToken", $.String);

    $.Property({Static:false, Public:true }, "ProcessorArchitecture", $.String);

    $.Property({Static:false, Public:true }, "Hash", $.UInt64);

    $.Property({Static:false, Public:true }, "Attributes", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")]));

    $.Property({Static:false, Public:true }, "ComPointer", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.ICloneable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Deployment.Application.CompatibleFramework */ 

(function CompatibleFramework$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.CompatibleFramework", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Profile", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportedRuntime", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_TargetVersion", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_supportedRuntime", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_profile", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_targetVersion", $.String); 
    $.Property({Static:false, Public:true }, "SupportedRuntime", $.String);

    $.Property({Static:false, Public:true }, "Profile", $.String);

    $.Property({Static:false, Public:true }, "TargetVersion", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.CompatibleFrameworks */ 

(function CompatibleFrameworks$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.CompatibleFrameworks", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.CompatibleFramework")])])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Frameworks", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm0A.TypeRef("System.Deployment.Application.CompatibleFramework")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUrl", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_supportUrl", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_frameworks", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.CompatibleFramework")])); 
    $.Property({Static:false, Public:true }, "SupportUrl", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "Frameworks", $asm06.TypeRef("System.Collections.Generic.IList`1", [$asm0A.TypeRef("System.Deployment.Application.CompatibleFramework")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Deployment.Application.Manifest");
/* enum System.Deployment.Application.Manifest.timeUnitType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Manifest.timeUnitType", false, {
    hours: 1, 
    days: 2, 
    weeks: 3
  }, false
);

/* enum System.Deployment.Application.Manifest.hashAlgorithmType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Manifest.hashAlgorithmType", false, {
    sha1: 1, 
    sha256: 2, 
    sha384: 3, 
    sha512: 4
  }, false
);

/* class System.Deployment.Application.Manifest.Description */ 

(function Description$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.Description", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorReportUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorReportUrl", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FilteredProduct", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FilteredPublisher", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FilteredSuiteName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IconFile", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IconFileFS", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Product", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Publisher", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUrl", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_publisher", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_product", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_suiteName", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_supportUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_errorReportUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_iconFile", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_iconFileFS", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_filteredPublisher", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_filteredProduct", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_filteredSuiteName", $.String); 
    $.Property({Static:false, Public:true }, "Publisher", $.String);

    $.Property({Static:false, Public:true }, "Product", $.String);

    $.Property({Static:false, Public:true }, "SupportUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "SupportUrl", $.String);

    $.Property({Static:false, Public:true }, "IconFile", $.String);

    $.Property({Static:false, Public:true }, "IconFileFS", $.String);

    $.Property({Static:false, Public:true }, "ErrorReportUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "ErrorReportUrl", $.String);

    $.Property({Static:false, Public:true }, "FilteredPublisher", $.String);

    $.Property({Static:false, Public:true }, "FilteredProduct", $.String);

    $.Property({Static:false, Public:true }, "FilteredSuiteName", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.EntryPoint */ 

(function EntryPoint$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.EntryPoint", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.EntryPointEntry"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Assembly", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CommandFile", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CommandParameters", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CustomHostSpecified", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CustomUX", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_HostInBrowser", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_name", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_commandLineFile", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_commandLineParamater", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_dependentAssembly", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_hostInBrowser", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_customHostSpecified", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_customUX", $.Boolean); 
    $.Property({Static:false, Public:true }, "Assembly", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"));

    $.Property({Static:false, Public:true }, "CommandFile", $.String);

    $.Property({Static:false, Public:true }, "HostInBrowser", $.Boolean);

    $.Property({Static:false, Public:true }, "CustomHostSpecified", $.Boolean);

    $.Property({Static:false, Public:true }, "CustomUX", $.Boolean);

    $.Property({Static:false, Public:true }, "CommandParameters", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.DependentOS */ 

(function DependentOS$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.DependentOS", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BuildNumber", 
      JSIL.MethodSignature.Return($.UInt16)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MajorVersion", 
      JSIL.MethodSignature.Return($.UInt16)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MinorVersion", 
      JSIL.MethodSignature.Return($.UInt16)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ServicePackMajor", 
      JSIL.MethodSignature.Return($.Byte)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ServicePackMinor", 
      JSIL.MethodSignature.Return($.Byte)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUrl", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_majorVersion", $.UInt16); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_minorVersion", $.UInt16); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_buildNumber", $.UInt16); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_servicePackMajor", $.Byte); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_servicePackMinor", $.Byte); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_supportUrl", $asm07.TypeRef("System.Uri")); 
    $.Property({Static:false, Public:true }, "MajorVersion", $.UInt16);

    $.Property({Static:false, Public:true }, "MinorVersion", $.UInt16);

    $.Property({Static:false, Public:true }, "BuildNumber", $.UInt16);

    $.Property({Static:false, Public:true }, "ServicePackMajor", $.Byte);

    $.Property({Static:false, Public:true }, "ServicePackMinor", $.Byte);

    $.Property({Static:false, Public:true }, "SupportUrl", $asm07.TypeRef("System.Uri"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.Deployment */ 

(function Deployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.Deployment", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CreateDesktopShortcut", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DeploymentUpdate", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.DeploymentUpdate"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DisallowUrlActivation", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Install", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsInstalledAndNoDeploymentProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsUpdateSectionPresent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MapFileExtensions", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MinimumRequiredVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ProviderCodebaseUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_TrustURLParameters", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_codebaseUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_update", $asm0A.TypeRef("System.Deployment.Application.Manifest.DeploymentUpdate")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_minimumRequiredVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_disallowUrlActivation", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_install", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_trustURLParameters", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_mapFileExtensions", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_createDesktopShortcut", $.Boolean); 
    $.Property({Static:false, Public:true }, "ProviderCodebaseUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "DeploymentUpdate", $asm0A.TypeRef("System.Deployment.Application.Manifest.DeploymentUpdate"));

    $.Property({Static:false, Public:true }, "MinimumRequiredVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "DisallowUrlActivation", $.Boolean);

    $.Property({Static:false, Public:true }, "Install", $.Boolean);

    $.Property({Static:false, Public:true }, "TrustURLParameters", $.Boolean);

    $.Property({Static:false, Public:true }, "MapFileExtensions", $.Boolean);

    $.Property({Static:false, Public:true }, "CreateDesktopShortcut", $.Boolean);

    $.Property({Static:false, Public:true }, "IsUpdateSectionPresent", $.Boolean);

    $.Property({Static:false, Public:true }, "IsInstalledAndNoDeploymentProvider", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.DeploymentUpdate */ 

(function DeploymentUpdate$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.DeploymentUpdate", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BeforeApplicationStartup", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumAgeAllowed", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.TimeSpan"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MaximumAgeSpecified", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetTimeSpanFromItem", 
      new JSIL.MethodSignature($asm06.TypeRef("System.TimeSpan"), [
          $.UInt16, $.Byte, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.Manifest.timeUnitType")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_beforeApplicationStartup", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_maximumAgeSpecified", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_maximumAgeAllowed", $asm06.TypeRef("System.TimeSpan")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_maximumAgeCount", $.UInt32); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_maximumAgeUnit", $asm0A.TypeRef("System.Deployment.Application.Manifest.timeUnitType")); 
    $.Property({Static:false, Public:true }, "BeforeApplicationStartup", $.Boolean);

    $.Property({Static:false, Public:true }, "MaximumAgeSpecified", $.Boolean);

    $.Property({Static:false, Public:true }, "MaximumAgeAllowed", $asm06.TypeRef("System.TimeSpan"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.DependentAssembly */ 

(function DependentAssembly$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.DependentAssembly", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Codebase", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CodebaseFS", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_HashCollection", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.HashCollection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Identity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsPreRequisite", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ResourceFallbackCulture", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.UInt64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUrl", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_size", $.UInt64); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_codebase", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_identity", $asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_group", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_codebaseFS", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_description", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_supportUrl", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_resourceFallbackCulture", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_resourceFallbackCultureInternal", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_optional", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_visible", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_preRequisite", $.Boolean); 
    $.Field({Static:false, Public:false}, "_hashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection")); 
    $.Property({Static:false, Public:true }, "Identity", $asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"));

    $.Property({Static:false, Public:true }, "Codebase", $.String);

    $.Property({Static:false, Public:true }, "Size", $.UInt64);

    $.Property({Static:false, Public:true }, "Group", $.String);

    $.Property({Static:false, Public:true }, "CodebaseFS", $.String);

    $.Property({Static:false, Public:true }, "Description", $.String);

    $.Property({Static:false, Public:true }, "SupportUrl", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "ResourceFallbackCulture", $.String);

    $.Property({Static:false, Public:true }, "IsPreRequisite", $.Boolean);

    $.Property({Static:false, Public:true }, "IsOptional", $.Boolean);

    $.Property({Static:false, Public:true }, "HashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.FileAssociation */ 

(function FileAssociation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.FileAssociation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DefaultIcon", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Extension", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Parameter", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ProgID", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_extension", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_description", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_progId", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_defaultIcon", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_parameter", $.String); 
    $.Property({Static:false, Public:true }, "Extension", $.String);

    $.Property({Static:false, Public:true }, "Description", $.String);

    $.Property({Static:false, Public:true }, "ProgID", $.String);

    $.Property({Static:false, Public:true }, "DefaultIcon", $.String);

    $.Property({Static:false, Public:true }, "Parameter", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.File */ 

(function File$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.File", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.UInt64])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.UInt64
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.FileEntry"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_HashCollection", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.HashCollection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsData", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsOptional", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_NameFS", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.UInt64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_name", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_loadFrom", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_size", $.UInt64); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_group", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_optional", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_isData", $.Boolean); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_nameFS", $.String); 
    $.Field({Static:false, Public:false}, "_hashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection")); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Size", $.UInt64);

    $.Property({Static:false, Public:true }, "Group", $.String);

    $.Property({Static:false, Public:true }, "IsOptional", $.Boolean);

    $.Property({Static:false, Public:true }, "IsData", $.Boolean);

    $.Property({Static:false, Public:true }, "NameFS", $.String);

    $.Property({Static:false, Public:true }, "HashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Manifest.ManifestSourceFormat */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Manifest.ManifestSourceFormat", false, {
    XmlFile: 0, 
    CompLib: 1, 
    ID_1: 2, 
    Stream: 3, 
    Unknown: 4
  }, false
);

/* class System.Deployment.Application.Manifest.AssemblyManifest */ 

(function AssemblyManifest$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.AssemblyManifest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.FileStream"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICMS"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AnalyzeManifestCertificate", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+CertificateStatus"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateDependenciesSize", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:true , Public:false}, "ExtractIdentityFromCompLibAssembly", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Application", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CLRDependentAssembly", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompatibleFrameworks", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ComplibIdentity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DependentAssemblies", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DependentOS", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentOS"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Deployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.Deployment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.Description"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EntryPoints", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.EntryPoint")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FileAssociations", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Files", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.File")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id1Identity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Id1ManifestPresent", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Id1RequestedExecutionLevel", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Identity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MainDependentAssembly", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ManifestFlags", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ManifestSourceFormat", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.ManifestSourceFormat"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_RawXmlBytes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_RawXmlFilePath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_RequestedExecutionLevel", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RequestedExecutionLevelUIAccess", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RequiredHashMissing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Signed", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SizeInBytes", 
      JSIL.MethodSignature.Return($.UInt64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_UseManifestForTrust", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetDependentAssemblyByIdentity", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFileFromName", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.File"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFilesInGroup", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.File")]), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPrivateAssembliesInGroup", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")]), [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsInvalidHash", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.HashCollection")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsResourceReference", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadCMSFromStream", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromCompLibAssembly", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromInternalManifestFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromPEResources", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromRawXmlFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "LoadFromUnknownFormatFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "ManifestLoadExceptionHelper", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Exception"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReValidateManifestSignatures", 
      new JSIL.MethodSignature(null, [$.Type, $.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "UriFromMetadataEntry", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Uri"), [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateApplicationDependency", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateAssemblyIdentity", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateAssemblyIdentity", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateComponentDependency", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateFile", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.File"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ValidateSemantics", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestType"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateSemanticsForApplicationRole", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateSemanticsForDeploymentRole", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ValidateSignature", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.Stream"))
    );

    $.Field({Static:false, Public:false}, "_rawXmlFilePath", $.String); 
    $.Field({Static:false, Public:false}, "_rawXmlBytes", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "_cms", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICMS")); 
    $.Field({Static:false, Public:false}, "_identity", $.Object); 
    $.Field({Static:false, Public:false}, "_description", $.Object); 
    $.Field({Static:false, Public:false}, "_entryPoints", $.Object); 
    $.Field({Static:false, Public:false}, "_dependentAssemblies", $.Object); 
    $.Field({Static:false, Public:false}, "_files", $.Object); 
    $.Field({Static:false, Public:false}, "_fileAssociations", $.Object); 
    $.Field({Static:false, Public:false}, "_deployment", $.Object); 
    $.Field({Static:false, Public:false}, "_dependentOS", $.Object); 
    $.Field({Static:false, Public:false}, "_manifestFlags", $.Object); 
    $.Field({Static:false, Public:false}, "_requestedExecutionLevel", $.Object); 
    $.Field({Static:false, Public:false}, "_requestedExecutionLevelUIAccess", $.Object); 
    $.Field({Static:false, Public:false}, "_compatibleFrameworks", $.Object); 
    $.Field({Static:false, Public:false}, "_manifestSourceFormat", $asm0A.TypeRef("System.Deployment.Application.Manifest.ManifestSourceFormat")); 
    $.Field({Static:false, Public:false}, "_id1Identity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_complibIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_id1ManifestPresent", $.Boolean); 
    $.Field({Static:false, Public:false}, "_id1RequestedExecutionLevel", $.String); 
    $.Field({Static:false, Public:false}, "_sizeInBytes", $.UInt64); 
    $.Field({Static:false, Public:false}, "_unhashedFilePresent", $.Boolean); 
    $.Field({Static:false, Public:false}, "_unhashedDependencyPresent", $.Boolean); 
    $.Field({Static:false, Public:false}, "_signed", $.Boolean); 
    $.Field({Static:false, Public:false}, "_clrDependentAssemblyChecked", $.Boolean); 
    $.Field({Static:false, Public:false}, "_clrDependentAssembly", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")); 
    $.Field({Static:true , Public:false}, "SpecificInvalidIdentityChars", $jsilcore.TypeRef("System.Array", [$.Char])); 
    $.Property({Static:false, Public:true }, "RawXmlFilePath", $.String);

    $.Property({Static:false, Public:true }, "RawXmlBytes", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "Identity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "SizeInBytes", $.UInt64);

    $.Property({Static:false, Public:true }, "Id1Identity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "ComplibIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "Id1ManifestPresent", $.Boolean);

    $.Property({Static:false, Public:true }, "Id1RequestedExecutionLevel", $.String);

    $.Property({Static:false, Public:true }, "ManifestFlags", $.UInt32);

    $.Property({Static:false, Public:true }, "RequestedExecutionLevel", $.String);

    $.Property({Static:false, Public:true }, "RequestedExecutionLevelUIAccess", $.Boolean);

    $.Property({Static:false, Public:true }, "Application", $.Boolean);

    $.Property({Static:false, Public:true }, "UseManifestForTrust", $.Boolean);

    $.Property({Static:false, Public:true }, "Description", $asm0A.TypeRef("System.Deployment.Application.Manifest.Description"));

    $.Property({Static:false, Public:true }, "Deployment", $asm0A.TypeRef("System.Deployment.Application.Manifest.Deployment"));

    $.Property({Static:false, Public:true }, "DependentOS", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentOS"));

    $.Property({Static:false, Public:true }, "DependentAssemblies", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")]));

    $.Property({Static:false, Public:true }, "FileAssociations", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation")]));

    $.Property({Static:false, Public:true }, "Files", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.File")]));

    $.Property({Static:false, Public:true }, "CompatibleFrameworks", $asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks"));

    $.Property({Static:false, Public:true }, "EntryPoints", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.EntryPoint")]));

    $.Property({Static:false, Public:true }, "MainDependentAssembly", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"));

    $.Property({Static:false, Public:true }, "CLRDependentAssembly", $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"));

    $.Property({Static:false, Public:true }, "RequiredHashMissing", $.Boolean);

    $.Property({Static:false, Public:true }, "Signed", $.Boolean);

    $.Property({Static:false, Public:true }, "ManifestSourceFormat", $asm0A.TypeRef("System.Deployment.Application.Manifest.ManifestSourceFormat"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Manifest.AssemblyManifest+ManifestType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Manifest.AssemblyManifest+ManifestType", false, {
    Application: 0, 
    Deployment: 1
  }, false
);

/* class System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors */ 

(function ManifestParseErrors$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ParseErrorEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnError", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $.UInt32, $.Int32, 
          $.String, $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_parsingErrors", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.Deployment.Internal.Isolation.IManifestParseErrorCallback"), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ManifestParseError */ 

(function ManifestParseError$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ManifestParseError", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "StartLine", $.UInt32); 
    $.Field({Static:false, Public:true }, "nStartColumn", $.UInt32); 
    $.Field({Static:false, Public:true }, "cCharacterCount", $.UInt32); 
    $.Field({Static:false, Public:true }, "hr", $.Int32); 
    $.Field({Static:false, Public:true }, "ErrorStatusHostFile", $.String); 
    $.Field({Static:false, Public:true }, "ParameterCount", $.UInt32); 
    $.Field({Static:false, Public:true }, "Parameters", $jsilcore.TypeRef("System.Array", [$.String])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ParseErrorEnumerator */ 

(function ParseErrorEnumerator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ParseErrorEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ManifestParseError"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_index", $.Int32); 
    $.Field({Static:false, Public:false}, "_manifestParseErrors", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors")); 
    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestParseErrors+ManifestParseError"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Manifest.AssemblyManifest+CertificateStatus */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Manifest.AssemblyManifest+CertificateStatus", false, {
    TrustedPublisher: 0, 
    AuthenticodedNotInTrustedList: 1, 
    NoCertificate: 2, 
    DistrustedPublisher: 3, 
    RevokedCertificate: 4, 
    UnknownCertificateStatus: 5
  }, false
);

JSIL.DeclareNamespace("System.Deployment.Internal");
JSIL.DeclareNamespace("System.Deployment.Internal.Isolation");
/* interface System.Deployment.Internal.Isolation.IManifestParseErrorCallback */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IManifestParseErrorCallback", false, [], function ($) {
    $.Method({}, "OnError", new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $.UInt32, $.Int32, 
          $.String, $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$.String])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["ace1b703-1aac-4956-ab87-90cac8b93ce6"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Application.ComponentStore */ 

(function ComponentStore$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentStore", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStoreType"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateApplication", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CalculateDeploymentsUnderQuota", 
      new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]), 
          $.UInt64, $jsilcore.TypeRef("JSIL.Reference", [$.UInt64]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckGroupInstalled", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckGroupInstalled", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanOnlineAppCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectCrossGroupApplications", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.ArrayList"), [
          $asm07.TypeRef("System.Uri"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), $jsilcore.TypeRef("JSIL.Reference", [$.Boolean]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CommitApplication", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")])
    );

    $.ExternalMethod({Static:true , Public:false}, "DeployAppIdsToComPtrs", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]), [$asm06.TypeRef("System.Collections.ArrayList")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FinalizeSubscriptionState", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InstallReference", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAssemblyManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetHostTypeFromMetadata", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ComponentStore+HostType"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOnlineAppQuotaInBytes", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrivateAndSharedSizes", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Collections.ArrayList"), $jsilcore.TypeRef("JSIL.Reference", [$.UInt64]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrivateSize", 
      new JSIL.MethodSignature($.UInt64, [$asm06.TypeRef("System.Collections.ArrayList")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyAppType", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.AppType"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyBoolean", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyDateTime", 
      new JSIL.MethodSignature($asm06.TypeRef("System.DateTime"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyDefinitionAppId", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyDefinitionIdentity", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyString", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyUri", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Uri"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPropertyVersion", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Version"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSharedSize", 
      new JSIL.MethodSignature($.UInt64, [$asm06.TypeRef("System.Collections.ArrayList")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetStore", 
      new JSIL.MethodSignature($.Type, [$asm0A.TypeRef("System.Deployment.Application.ComponentStoreType"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubscriptionStateInternal", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"), [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubscriptionStateInternal", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsAssemblyInstalled", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsSubscriptionInstalled", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "LockApplicationPath", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:true }, "LockAssemblyPath", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareCommitApplication", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareCommitDeploymentState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"), [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareFinalizeSubscription", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareFinalizeSubscriptionState", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareInstallFile", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.Manifest.File"), 
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareInstallPrivateAssembly", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly"), 
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareInstallUninstallDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PreparePinUnpinDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareRemoveDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareRemoveOrphanedDeployments", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareRemoveSubscription", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareRollbackSubscription", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareSetDeploymentProperties", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareSetPendingDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareSetSubscriptionProperties", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareSetSubscriptionState", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareStageAppComponent", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareStageDeploymentComponent", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "PrepareUpdateSkipTime", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), 
          $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "RefreshStorePointer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "RemoveApplicationInstance", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ResetUpdateSkippedState", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RollbackSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPendingDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUpdateSkipTime", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SubmitStoreTransaction", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:false}, "SubmitStoreTransactionCheckQuota", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+StoreTransactionContext"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToPropertyString", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.Field({Static:true , Public:false}, "_installReference", $.Object); 
    $.Field({Static:false, Public:false}, "_storeType", $asm0A.TypeRef("System.Deployment.Application.ComponentStoreType")); 
    $.Field({Static:false, Public:false}, "_store", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store")); 
    $.Field({Static:false, Public:false}, "_stateMgr", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStateManager")); 
    $.Field({Static:false, Public:false}, "_subStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")); 
    $.Field({Static:false, Public:false}, "_firstRefresh", $.Boolean); 
    $.Constant({Static:true , Public:false}, "DateTimeFormatString", "yyyy/MM/dd HH:mm:ss"); 
    $.Property({Static:false, Public:false}, "InstallReference", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentStore+CrossGroupApplicationData */ 

(function CrossGroupApplicationData$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentStore+CrossGroupApplicationData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.ComponentStore+CrossGroupApplicationData+GroupType")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "SubState", $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")); 
    $.Field({Static:false, Public:true }, "CrossGroupType", $asm0A.TypeRef("System.Deployment.Application.ComponentStore+CrossGroupApplicationData+GroupType")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.ComponentStore+CrossGroupApplicationData+GroupType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ComponentStore+CrossGroupApplicationData+GroupType", false, {
    UndefinedGroup: 0, 
    LocationGroup: 1, 
    IdentityGroup: 2
  }, false
);

/* enum System.Deployment.Application.ComponentStore+HostType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ComponentStore+HostType", false, {
    Default: 0, 
    AppLaunch: 1, 
    CorFlag: 2
  }, false
);

/* class System.Deployment.Internal.Isolation.StoreTransaction */ 

(function StoreTransaction$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreTransaction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationPinDeployment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationStageComponent"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationScavenge"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateStoreOpsList", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]))
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_Operations", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_list", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_storeOps", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")])); 
    $.Property({Static:false, Public:true }, "Operations", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentStore+StoreTransactionContext */ 

(function StoreTransactionContext$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransaction"), 
      Name: "System.Deployment.Application.ComponentStore+StoreTransactionContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ComponentStore"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ScavengeContext", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ComponentStore+ScavengeContext"))
    );

    $.Field({Static:false, Public:false}, "_scavengeContext", $.Object); 
    $.Field({Static:false, Public:false}, "_compStore", $asm0A.TypeRef("System.Deployment.Application.ComponentStore")); 
    $.Property({Static:false, Public:true }, "ScavengeContext", $asm0A.TypeRef("System.Deployment.Application.ComponentStore+ScavengeContext"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentStore+ScavengeContext */ 

(function ScavengeContext$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentStore+ScavengeContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ComponentStore"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AddDeploymentToList", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.ArrayList")]), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddDeploymentToUnpin", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddOnlineAppToCommit", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateSizesPostTransact", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CalculateSizesPreTransact", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckQuotaAndScavenge", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanOnlineAppCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectOnlineApps", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+ScavengeContext+SubInstance")]), [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "CollectOnlineAppsMRU", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+ScavengeContext+SubInstance")]), [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")])])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOnlineAppQuotaUsageEstimate", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:true , Public:false}, "PersistOnlineAppQuotaUsageEstimate", 
      JSIL.MethodSignature.Action($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:false}, "ScavengeAppsOverQuota", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.ComponentStore+ScavengeContext+SubInstance")]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.Field({Static:false, Public:false}, "_compStore", $asm0A.TypeRef("System.Deployment.Application.ComponentStore")); 
    $.Field({Static:false, Public:false}, "_onlineDeploysToPin", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_onlineDeploysToPinAlreadyPinned", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_shellVisbleDeploysToUnpin", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_addinDeploysToUnpin", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_onlineDeploysToUnpin", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_onlineToPinPrivateSizePreTransact", $.UInt64); 
    $.Field({Static:false, Public:false}, "_onlineToPinPrivateSizePostTransact", $.UInt64); 
    $.Field({Static:false, Public:false}, "_shellVisibleToUnpinSharedSize", $.UInt64); 
    $.Field({Static:false, Public:false}, "_onlineToUnpinPrivateSize", $.UInt64); 
    $.Field({Static:false, Public:false}, "_addinToUnpinSharedSize", $.UInt64); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentStore+ScavengeContext+SubInstance */ 

(function SubInstance$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentStore+ScavengeContext+SubInstance", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CompareTo", 
      new JSIL.MethodSignature($.Int32, [$.Object])
    );

    $.Field({Static:false, Public:true }, "SubState", $asm0A.TypeRef("System.Deployment.Application.SubscriptionState")); 
    $.Field({Static:false, Public:true }, "LastAccessTime", $asm06.TypeRef("System.DateTime")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IComparable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SubscriptionStateInternal */ 

(function SubscriptionStateInternal$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SubscriptionStateInternal", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:true }, "IsInstalled", $.Boolean); 
    $.Field({Static:false, Public:true }, "IsShellVisible", $.Boolean); 
    $.Field({Static:false, Public:true }, "CurrentBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:true }, "PreviousBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:true }, "PendingBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:true }, "PendingDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "ExcludedDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "DeploymentProviderUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "MinimumRequiredVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:true }, "LastCheckTime", $asm06.TypeRef("System.DateTime")); 
    $.Field({Static:false, Public:true }, "UpdateSkipTime", $asm06.TypeRef("System.DateTime")); 
    $.Field({Static:false, Public:true }, "UpdateSkippedDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "appType", $asm0A.TypeRef("System.Deployment.Application.AppType")); 
    $.Field({Static:false, Public:true }, "CurrentDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "RollbackDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "CurrentDeploymentManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:true }, "CurrentDeploymentSourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "CurrentApplication", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "CurrentApplicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:true }, "CurrentApplicationSourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "PreviousApplication", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "PreviousApplicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SubscriptionStateVariable */ 

(function SubscriptionStateVariable$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SubscriptionStateVariable", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Object
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsUnchanged", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:true }, "PropertyName", $.String); 
    $.Field({Static:false, Public:true }, "NewValue", $.Object); 
    $.Field({Static:false, Public:true }, "OldValue", $.Object); 
    $.Property({Static:false, Public:true }, "IsUnchanged", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.ComponentStoreType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ComponentStoreType", false, {
    UserStore: 0, 
    SystemStore: 1
  }, false
);

/* class System.Deployment.Application.Hash */ 

(function Hash$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Hash", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CompositString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DigestMethod", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_DigestMethodCodeString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DigestValue", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_TranformCodeString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Transform", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "ToCodedString", 
      new JSIL.MethodSignature($.String, [$.UInt32])
    );

    $.Field({Static:false, Public:false}, "_digestValue", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "_digestMethod", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD")); 
    $.Field({Static:false, Public:false}, "_transform", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")); 
    $.Property({Static:false, Public:true }, "DigestValue", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:true }, "DigestMethod", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD"));

    $.Property({Static:false, Public:true }, "Transform", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM"));

    $.Property({Static:false, Public:true }, "CompositString", $.String);

    $.Property({Static:false, Public:false}, "TranformCodeString", $.String);

    $.Property({Static:false, Public:false}, "DigestMethodCodeString", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.HashCollection */ 

(function HashCollection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.HashCollection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddHash", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.HashCollection+HashEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_hashes", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.HashCollection+HashEnumerator */ 

(function HashEnumerator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.HashCollection+HashEnumerator", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.HashCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Hash"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_index", $.Int32); 
    $.Field({Static:false, Public:false}, "_hashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection")); 
    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Application.Hash"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentVerifier */ 

(function ComponentVerifier$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentVerifier", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFileForVerification", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.HashCollection")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddSimplyNamedAssemblyForVerification", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddStrongNameAssemblyForVerification", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GenerateDigestValue", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [
          $.String, $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_VerifiableDigestMethods", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD")]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "get_VerifiableTransformTypes", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "GetHashAlgorithm", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Cryptography.HashAlgorithm"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetTransformedStream", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.Stream"), [$.String, $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVerifiableHash", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.Hash")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsVerifiableHashCollection", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.HashCollection")])
    );

    $.ExternalMethod({Static:false, Public:true }, "VerifyComponents", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyFileHash", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.HashCollection")])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyFileHash", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Hash")])
    );

    $.ExternalMethod({Static:true , Public:false}, "VerifyManifestComponentFiles", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifySimplyNamedAssembly", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyStrongNameAssembly", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.Field({Static:false, Public:false}, "_verificationComponents", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:true , Public:false}, "_supportedDigestMethods", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD")])); 
    $.Field({Static:true , Public:false}, "_supportedTransforms", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")])); 
    $.Property({Static:true , Public:true }, "VerifiableTransformTypes", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM")]));

    $.Property({Static:true , Public:true }, "VerifiableDigestMethods", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentVerifier+VerificationComponent */ 

(function VerificationComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ComponentVerifier+VerificationComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Verify", 
      JSIL.MethodSignature.Void
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentVerifier+FileComponent */ 

(function FileComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ComponentVerifier+VerificationComponent"), 
      Name: "System.Deployment.Application.ComponentVerifier+FileComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.HashCollection")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Verify", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_filePath", $.String); 
    $.Field({Static:false, Public:false}, "_hashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentVerifier+SimplyNamedAssemblyComponent */ 

(function SimplyNamedAssemblyComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ComponentVerifier+VerificationComponent"), 
      Name: "System.Deployment.Application.ComponentVerifier+SimplyNamedAssemblyComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Verify", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_filePath", $.String); 
    $.Field({Static:false, Public:false}, "_assemblyManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ComponentVerifier+StrongNameAssemblyComponent */ 

(function StrongNameAssemblyComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ComponentVerifier+VerificationComponent"), 
      Name: "System.Deployment.Application.ComponentVerifier+StrongNameAssemblyComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Verify", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_filePath", $.String); 
    $.Field({Static:false, Public:false}, "_assemblyManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Constants */ 

(function Constants$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.Constants", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:true }, "ShimDll", "dfshim.dll"); 
    $.Constant({Static:true , Public:true }, "DfDll", "dfdll.dll"); 
    $.Constant({Static:true , Public:true }, "DeploymentFolder", "Deployment"); 
    $.Constant({Static:true , Public:true }, "Dfsvc", "dfsvc.exe"); 
    $.Constant({Static:true , Public:true }, "SystemDeploymentDll", "system.deployment.dll"); 
    $.Constant({Static:true , Public:true }, "Kernel32Dll", "kernel32.dll"); 
    $.Constant({Static:true , Public:true }, "MscoreeDll", "mscoree.dll"); 
    $.Constant({Static:true , Public:true }, "WininetDll", "wininet.dll"); 
    $.Constant({Static:true , Public:true }, "ClrDll", "clr.dll"); 
    $.Constant({Static:true , Public:true }, "SrClientDll", "srclient.dll"); 
    $.Constant({Static:true , Public:true }, "WinInetDll", "wininet.dll"); 
    $.Constant({Static:true , Public:true }, "Shell32Dll", "shell32.dll"); 
    $.Constant({Static:true , Public:true }, "ShellAppShortcutExtension", ".appref-ms"); 
    $.Constant({Static:true , Public:true }, "ShellSupportShortcutExtension", ".url"); 
    $.Constant({Static:true , Public:true }, "SupportIconIndex", 0); 
    $.Constant({Static:true , Public:true }, "ShortCutRemovalRetryTimes", 2); 
    $.Constant({Static:true , Public:true }, "ShortCutRemovalRetryInternal", 1000); 
    $.Constant({Static:true , Public:true }, "UninstallSubkeyName", "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall"); 
    $.Constant({Static:true , Public:true }, "DeploymentSubkeyName", "SOFTWARE\\Classes\\Software\\Microsoft\\Windows\\CurrentVersion\\Deployment"); 
    $.Constant({Static:true , Public:true }, "LUAPolicyKeyName", "Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\System"); 
    $.Constant({Static:true , Public:true }, "OnlineAppQuotaInKBValueName", "OnlineAppQuotaInKB"); 
    $.Constant({Static:true , Public:true }, "OnlineAppQuotaUsageEstimateValueName", "OnlineAppQuotaUsageEstimate"); 
    $.Constant({Static:true , Public:true }, "LUAPolicyValueName", "EnableLUA"); 
    $.Constant({Static:true , Public:true }, "ClassesSubKeyName", "Software\\Classes"); 
    $.Constant({Static:true , Public:true }, "AppIdValueName", "AppId"); 
    $.Constant({Static:true , Public:true }, "DPUrlValueName", "DeploymentProviderUrl"); 
    $.Constant({Static:true , Public:true }, "IconFileValueName", "IconFile"); 
    $.Constant({Static:true , Public:true }, "ContentTypeValueName", "Content Type"); 
    $.Constant({Static:true , Public:true }, "ShellKeyName", "shell"); 
    $.Constant({Static:true , Public:true }, "OpenCommandKeyName", "open\\command"); 
    $.Constant({Static:true , Public:true }, "IconHandlerKeyName", "shellex\\IconHandler"); 
    $.Constant({Static:true , Public:true }, "CLSIDKeyName", "CLSID"); 
    $.Constant({Static:true , Public:true }, "InProcServerKeyName", "InProcServer32"); 
    $.Constant({Static:true , Public:true }, "GuidValueName", "Guid"); 
    $.Constant({Static:true , Public:true }, "RootKeyName", "Software\\Microsoft\\.NETFramework\\DeploymentFramework"); 
    $.Constant({Static:true , Public:true }, "RequireSignedManifests", "RequireSignedManifests"); 
    $.Constant({Static:true , Public:true }, "RequireHashInManifests", "RequireHashInManifests"); 
    $.Constant({Static:true , Public:true }, "SkipSignatureValidationValueName", "SkipSignatureValidation"); 
    $.Constant({Static:true , Public:true }, "SkipDeploymentProviderValueName", "SkipDeploymentProvider"); 
    $.Constant({Static:true , Public:true }, "SkipSchemaValidationValueName", "SkipSchemaValidation"); 
    $.Constant({Static:true , Public:true }, "SkipSemanticValidationValueName", "SkipSemanticValidation"); 
    $.Constant({Static:true , Public:true }, "SkipApplicationDependencyHashCheckValueName", "SkipApplicationDependencyHashCheck"); 
    $.Constant({Static:true , Public:true }, "SuppressLimitOnNumberOfActivationsValueName", "SuppressLimitOnNumberOfActivations"); 
    $.Constant({Static:true , Public:true }, "DisableGenericExceptionHandler", "DisableGenericExceptionHandler"); 
    $.Constant({Static:true , Public:true }, "LogVerbosityLevel", "LogVerbosityLevel"); 
    $.Constant({Static:true , Public:true }, "DeploymentManifestSuffix", ".application"); 
    $.Constant({Static:true , Public:true }, "ManifestSuffix", ".manifest"); 
    $.Constant({Static:true , Public:true }, "DllSuffix", ".dll"); 
    $.Constant({Static:true , Public:true }, "ExeSuffix", ".exe"); 
    $.Constant({Static:true , Public:true }, "MapFileExtensionsSuffix", ".deploy"); 
    $.Constant({Static:true , Public:true }, "InstallReferenceIdentifier", "{3f471841-eef2-47d6-89c0-d028f03a4ad5}"); 
    $.Constant({Static:true , Public:true }, "SubscriptionStoreLock", "__SubscriptionStoreLock__"); 
    $.Constant({Static:true , Public:true }, "IsShellVisible", "IsShellVisible"); 
    $.Constant({Static:true , Public:true }, "CurrentBind", "CurrentBind"); 
    $.Constant({Static:true , Public:true }, "PreviousBind", "PreviousBind"); 
    $.Constant({Static:true , Public:true }, "PendingBind", "PendingBind"); 
    $.Constant({Static:true , Public:true }, "ExcludedDeployment", "ExcludedDeployment"); 
    $.Constant({Static:true , Public:true }, "PendingDeployment", "PendingDeployment"); 
    $.Constant({Static:true , Public:true }, "DeploymentProviderUri", "DeploymentProviderUri"); 
    $.Constant({Static:true , Public:true }, "MinimumRequiredVersion", "MinimumRequiredVersion"); 
    $.Constant({Static:true , Public:true }, "LastCheckTime", "LastCheckTime"); 
    $.Constant({Static:true , Public:true }, "UpdateSkipTime", "UpdateSkipTime"); 
    $.Constant({Static:true , Public:true }, "UpdateSkippedDeployment", "UpdateSkippedDeployment"); 
    $.Constant({Static:true , Public:true }, "AppType", "AppType"); 
    $.Constant({Static:true , Public:true }, "UseApplicationManifestDescription", "UseApplicationManifestDescription"); 
    $.Constant({Static:true , Public:true }, "DeploymentSourceUri", "DeploymentSourceUri"); 
    $.Constant({Static:true , Public:true }, "ApplicationSourceUri", "ApplicationSourceUri"); 
    $.Constant({Static:true , Public:true }, "IsFullTrust", "IsFullTrust"); 
    $.Constant({Static:true , Public:true }, "CLRCoreComp", "Microsoft-Windows-CLRCoreComp"); 
    $.Constant({Static:true , Public:true }, "CommonLanguageRuntime", "Microsoft.Windows.CommonLanguageRuntime"); 
    $.Constant({Static:true , Public:true }, "MinVersionCLRMajor", 2); 
    $.Constant({Static:true , Public:true }, "MSIL", "msil"); 
    $.Constant({Static:true , Public:true }, "X86", "x86"); 
    $.Constant({Static:true , Public:true }, "AMD64", "amd64"); 
    $.Constant({Static:true , Public:true }, "IA64", "ia64"); 
    $.Constant({Static:true , Public:true }, "AsmV1Namespace", "urn:schemas-microsoft-com:asm.v1"); 
    $.Constant({Static:true , Public:true }, "AsmV2Namespace", "urn:schemas-microsoft-com:asm.v2"); 
    $.Constant({Static:true , Public:true }, "XmlDSigNamespace", "http://www.w3.org/2000/09/xmldsig#"); 
    $.Constant({Static:true , Public:true }, "AdaptiveSchemaResourceName", "manifest.2.0.0.15-pre.adaptive.xsd"); 
    $.Constant({Static:true , Public:true }, "PublicIdForDTD4XMLSchemas", "-//W3C//DTD XMLSCHEMA 200102//EN"); 
    $.Constant({Static:true , Public:true }, "XMLSchemaDTDResourceName", "XMLSchema.dtd"); 
    $.Constant({Static:true , Public:true }, "PublicIdForDTD4DataTypes", "xs-datatypes"); 
    $.Constant({Static:true , Public:true }, "DataTypesDTDResourceName", "datatypes.dtd"); 
    $.Constant({Static:true , Public:true }, "UnsignedPublicKeyToken", "0000000000000000"); 
    $.Constant({Static:true , Public:true }, "RequireAdministrator", "requireAdministrator"); 
    $.Constant({Static:true , Public:true }, "HighestAvailable", "highestAvailable"); 
    $.Constant({Static:true , Public:true }, "MaxNumberOfFilesInApplication", 24576); 
    $.Constant({Static:true , Public:true }, "MaxNumberOfFileAssociationsInApplication", 8); 
    $.Constant({Static:true , Public:true }, "MaxNumberOfFileExtensionLength", 24); 
    $.Constant({Static:true , Public:true }, "MaxNumberOfAssembliesInApplication", 24576); 
    $.Constant({Static:true , Public:true }, "MaxNumberOfGroupsInApplication", 49152); 
    $.Constant({Static:true , Public:true }, "MaxUrlLength", 16384); 
    $.Constant({Static:true , Public:true }, "MaxLiveActivation", 8); 
    $.Constant({Static:true , Public:true }, "MaxIdentityLength", 2048); 
    $.Constant({Static:true , Public:true }, "MaxAppIdLength", 65536); 
    $.Constant({Static:true , Public:true }, "MaxShortcutFileSize", 65536); 
    $.Constant({Static:true , Public:true }, "MaxManifestFileSize", 16777216); 
    $.Constant({Static:true , Public:true }, "MaxValueForMaximumAge", 365); 
    $.Constant({Static:true , Public:true }, "MaxErrorUrlLength", 2048); 
    $.Constant({Static:true , Public:true }, "DefaultOnlineAppQuotaInKB", 256000); 
    $.Constant({Static:true , Public:true }, "LifetimeDefaultMinutes", 10); 
    $.Constant({Static:true , Public:true }, "LockRetryIntervalMs", 1); 
    $.Constant({Static:true , Public:true }, "MinProgressCallbackIntervalInMs", 100); 
    $.Constant({Static:true , Public:true }, "DefaultLogTextualId", "__DeploymentDefaultLogFile__"); 
    $.Constant({Static:true , Public:true }, "MAX_PATH", 260); 
    $.Constant({Static:true , Public:true }, "LogFileExtension", "log"); 
    $.Constant({Static:true , Public:true }, "LogFilePathRegistryString", "LogFilePath"); 
    $.Constant({Static:true , Public:true }, "WininetCacheLogUrlPrefix", "System_Deployment_Log_"); 
    $.Constant({Static:true , Public:true }, "GACDetectionTempManifestAsmIdText", "GACDetectionTempManifest, version=1.0.0.0, type=win32"); 
    $.Constant({Static:true , Public:true }, "DataDirectory", "DataDirectory"); 
    $.Constant({Static:true , Public:true }, "HRESULT_DiskFull", -2147024784); 
    $.Constant({Static:true , Public:true }, "MASK_NOTPINNABLE", 2147483648); 
    $.Constant({Static:true , Public:true }, "MASK_DONT_SHOW_INSTALL_DIALOG", 256); 
    $.Constant({Static:true , Public:true }, "Client35SP1SignatureAssembly", "Sentinel.v3.5Client, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,processorArchitecture=msil"); 
    $.Constant({Static:true , Public:true }, "Full35SP1SignatureAssembly", "System.Data.Entity, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089,processorArchitecture=msil"); 
    $.Constant({Static:true , Public:true }, "DotNetFX35SP1", ".NET Framework 3.5 SP1"); 
    $.Constant({Static:true , Public:true }, "SkipSKUDetectionKeyName", "SOFTWARE\\Microsoft\\Fusion"); 
    $.Constant({Static:true , Public:true }, "SkipSKUDetectionValueName", "NoClientChecks"); 
    $.Constant({Static:true , Public:true }, "SetupKeyCommonPath", "SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v"); 
    $.Constant({Static:true , Public:true }, "PreV4ClientSetupKeyCommonPath", "SOFTWARE\\Microsoft\\NET Framework Setup\\DotNetClient\\v"); 
    $.Constant({Static:true , Public:true }, "V30SetupKeyPath", "SOFTWARE\\Microsoft\\NET Framework Setup\\NDP\\v3.0\\Setup"); 
    $.Constant({Static:true , Public:true }, "NetFxKeyCommonPath", "SOFTWARE\\Microsoft\\.NETFramework\\v"); 
    $.Constant({Static:true , Public:true }, "TFMFormatNoProfile", ".NETFramework,Version=v{0}"); 
    $.Constant({Static:true , Public:true }, "TFMFormatWithProfile", ".NETFramework,Version=v{0},Profile={1}"); 
    $.Constant({Static:true , Public:true }, "FullProfileName", "Full"); 
    $.Constant({Static:true , Public:true }, "PreV4ClientProfileName", "Client"); 
    $.Constant({Static:true , Public:true }, "PreV4SetupValueName", "Version"); 
    $.Constant({Static:true , Public:true }, "V4SetupValueName", "TargetVersion"); 
    $.Constant({Static:true , Public:true }, "InstallValueName", "Install"); 
    $.Constant({Static:true , Public:true }, "V30InstallValueName", "InstallSuccess"); 
    $.Constant({Static:true , Public:true }, "FrameworkGroupName", "framework"); 
    $.Constant({Static:true , Public:true }, "CLSCTX_INPROC_SERVER", 1); 
    $.Field({Static:true , Public:true }, "DeploymentPropertySet", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "OnlineAppScavengingGracePeriod", $asm06.TypeRef("System.TimeSpan")); 
    $.Field({Static:true , Public:true }, "V2CLRVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:true , Public:true }, "V4CLRVersion", $asm06.TypeRef("System.Version")); 
    $.Field({Static:true , Public:true }, "LockTimeout", $asm06.TypeRef("System.TimeSpan")); 
    $.Field({Static:true , Public:true }, "AssertApplicationRequirementsTimeout", $asm06.TypeRef("System.TimeSpan")); 
    $.Field({Static:true , Public:true }, "CLSID_StartMenuPin", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IUnknown", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "uuid", $asm06.TypeRef("System.Guid")); 
    function Constants__cctor () {
      $thisType.DeploymentPropertySet = new $asm06.System.Guid();
      $thisType.OnlineAppScavengingGracePeriod = new $asm06.System.TimeSpan();
      $thisType.LockTimeout = new $asm06.System.TimeSpan();
      $thisType.AssertApplicationRequirementsTimeout = new $asm06.System.TimeSpan();
      $thisType.CLSID_StartMenuPin = new $asm06.System.Guid();
      $thisType.IID_IUnknown = new $asm06.System.Guid();
      $thisType.uuid = new $asm06.System.Guid();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Constants__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Application.IDownloadNotification */ 

JSIL.MakeInterface(
  "System.Deployment.Application.IDownloadNotification", false, [], function ($) {
    $.Method({}, "DownloadModified", new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")]));
    $.Method({}, "DownloadCompleted", new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")]));
  }, []);

/* class System.Deployment.Application.DeploymentManager */ 

(function DeploymentManager$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DeploymentManager", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Uri"), $.Boolean, 
          $.Boolean, $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), 
          $asm07.TypeRef("System.ComponentModel.AsyncOperation")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Boolean, 
          $.Boolean, $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), 
          $asm07.TypeRef("System.ComponentModel.AsyncOperation")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "add_BindCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.BindCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_ProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_SynchronizeCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AttachToGroup", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SyncGroupHelper"), [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Bind", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ActivationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BindAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "BindAsyncCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "BindAsyncWorker", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "BindCore", 
      new JSIL.MethodSignature($.Boolean, [
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempDirectory")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IO.FileStream")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindCoreWithAppId", 
      new JSIL.MethodSignature($.Boolean, [
          $.Boolean, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IO.FileStream")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckSizeLimit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ConstructActivationContext", 
      new JSIL.MethodSignature($asm06.TypeRef("System.ActivationContext"), [$asm0A.TypeRef("System.Deployment.Application.ActivationDescription")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ConstructActivationContextFromStore", 
      new JSIL.MethodSignature($asm06.TypeRef("System.ActivationContext"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DetachFromGroup", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SyncGroupHelper"))
    );

    $.ExternalMethod({Static:false, Public:true }, "DeterminePlatformRequirements", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DeterminePlatformRequirementsCore", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "DetermineTrust", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.TrustParams"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DetermineTrustCore", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean, $asm0A.TypeRef("System.Deployment.Application.TrustParams")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "ExecuteNewDomain", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Runtime.Remoting.ObjectHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ExecuteNewProcess", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ActivationDescription", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ActivationDescription"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Callertype", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DeploymentManager+CallerType"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CancellationPending", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Events", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.ComponentModel.EventHandlerList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LogFilePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LogId", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ShortcutAppId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "LogError", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PersistTrustWithoutEvaluation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ProgressReporter", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_BindCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.BindCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_ProgressChanged", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_SynchronizeCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Callertype", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DeploymentManager+CallerType"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Synchronize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Synchronize", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "SynchronizeAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SynchronizeAsync", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "SynchronizeAsync", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeAsyncCompleted", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeAsyncWorker", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeCore", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeGroupAsyncWorker", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:false}, "SynchronizeGroupCore", 
      new JSIL.MethodSignature($.Boolean, [$.Boolean, $asm0A.TypeRef("System.Deployment.Application.SyncGroupHelper")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Deployment.Application.IDownloadNotification.DownloadCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    )
      .Overrides($asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), "DownloadCompleted");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Deployment.Application.IDownloadNotification.DownloadModified", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    )
      .Overrides($asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), "DownloadModified");

    $.ExternalMethod({Static:false, Public:false}, "WaitForAssertApplicationRequirements", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "bindCompletedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "synchronizeCompletedKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "progressChangedKey", $.Object); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "bindWorker", $asm06.TypeRef("System.Threading.ThreadStart")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "synchronizeWorker", $asm06.TypeRef("System.Threading.ThreadStart")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "synchronizeGroupWorker", $asm06.TypeRef("System.Threading.WaitCallback")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "bindCompleted", $asm06.TypeRef("System.Threading.SendOrPostCallback")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "synchronizeCompleted", $asm06.TypeRef("System.Threading.SendOrPostCallback")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "progressReporter", $asm06.TypeRef("System.Threading.SendOrPostCallback")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "asyncOperation", $asm07.TypeRef("System.ComponentModel.AsyncOperation")); 
    $.Field({Static:false, Public:false}, "_bindGuard", $.Int32); 
    $.Field({Static:false, Public:false}, "_syncGuard", $.Int32); 
    $.Field({Static:false, Public:false}, "_cancellationPending", $.Boolean); 
    $.Field({Static:false, Public:false}, "_cached", $.Boolean); 
    $.Field({Static:false, Public:false}, "_trustNotGrantedEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_trustGrantedEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_platformRequirementsFailedEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_assertApplicationReqEvents", $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Threading.ManualResetEvent")])); 
    $.Field({Static:false, Public:false}, "_callerType", $asm0A.TypeRef("System.Deployment.Application.DeploymentManager+CallerType")); 
    $.Field({Static:false, Public:false}, "_deploySource", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_bindAppId", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")); 
    $.Field({Static:false, Public:false}, "_subStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")); 
    $.Field({Static:false, Public:false}, "_isupdate", $.Boolean); 
    $.Field({Static:false, Public:false}, "_isConfirmed", $.Boolean); 
    $.Field({Static:false, Public:false}, "_downloadOptions", $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")); 
    $.Field({Static:false, Public:false}, "_events", $asm07.TypeRef("System.ComponentModel.EventHandlerList")); 
    $.Field({Static:false, Public:false}, "_syncGroupMap", $asm06.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_actDesc", $asm0A.TypeRef("System.Deployment.Application.ActivationDescription")); 
    $.Field({Static:false, Public:false}, "_actCtx", $asm06.TypeRef("System.ActivationContext")); 
    $.Field({Static:false, Public:false}, "_state", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState")); 
    $.Field({Static:false, Public:false}, "_tempDeployment", $asm0A.TypeRef("System.Deployment.Application.TempFile")); 
    $.Field({Static:false, Public:false}, "_tempApplicationDirectory", $asm0A.TypeRef("System.Deployment.Application.TempDirectory")); 
    $.Field({Static:false, Public:false}, "_referenceTransaction", $asm06.TypeRef("System.IO.FileStream")); 
    $.Field({Static:false, Public:false}, "_log", $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")); 
    $.Field({Static:false, Public:false}, "_downloadedAppSize", $.Int64); 
    $.Property({Static:false, Public:true }, "Callertype", $asm0A.TypeRef("System.Deployment.Application.DeploymentManager+CallerType"));

    $.Property({Static:false, Public:true }, "LogId", $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"));

    $.Property({Static:false, Public:true }, "CancellationPending", $.Boolean);

    $.Property({Static:false, Public:true }, "ShortcutAppId", $.String);

    $.Property({Static:false, Public:true }, "LogFilePath", $.String);

    $.Property({Static:false, Public:false}, "ActivationDescription", $asm0A.TypeRef("System.Deployment.Application.ActivationDescription"));

    $.Property({Static:false, Public:false}, "Events", $asm07.TypeRef("System.ComponentModel.EventHandlerList"));

    $.Event({Static:false, Public:true }, "BindCompleted", $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventHandler"));

    $.Event({Static:false, Public:true }, "SynchronizeCompleted", $asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventHandler"));

    $.Event({Static:false, Public:true }, "ProgressChanged", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventHandler"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable"), 
      /* 1 */ $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.DeploymentManager+CallerType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.DeploymentManager+CallerType", false, {
    Other: 0, 
    ApplicationDeployment: 1, 
    InPlaceHostingManager: 2
  }, false
);

/* class System.Deployment.Application.TrustParams */ 

(function TrustParams$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.TrustParams", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_NoPrompt", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_NoPrompt", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "noPrompt", $.Boolean); 
    $.Property({Static:false, Public:true }, "NoPrompt", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.BindCompletedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.BindCompletedEventHandler", false, []);

/* class System.Deployment.Application.BindCompletedEventArgs */ 

(function BindCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.BindCompletedEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Exception"), $.Boolean, 
          $.Object, $asm06.TypeRef("System.ActivationContext"), 
          $.String, $.Boolean
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ActivationContext", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ActivationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FriendlyName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCached", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_actCtx", $asm06.TypeRef("System.ActivationContext")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_name", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_cached", $.Boolean); 
    $.Property({Static:false, Public:true }, "ActivationContext", $asm06.TypeRef("System.ActivationContext"));

    $.Property({Static:false, Public:true }, "FriendlyName", $.String);

    $.Property({Static:false, Public:true }, "IsCached", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.SynchronizeCompletedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.SynchronizeCompletedEventHandler", false, []);

/* class System.Deployment.Application.SynchronizeCompletedEventArgs */ 

(function SynchronizeCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.SynchronizeCompletedEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Exception"), $.Boolean, 
          $.Object, $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_groupName", $.String); 
    $.Property({Static:false, Public:true }, "Group", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.DeploymentProgressChangedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.DeploymentProgressChangedEventHandler", true, []);

/* class System.Deployment.Application.DeploymentProgressChangedEventArgs */ 

(function DeploymentProgressChangedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.ProgressChangedEventArgs"), 
      Name: "System.Deployment.Application.DeploymentProgressChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Object, 
          $.Int64, $.Int64, 
          $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState"), $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BytesCompleted", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BytesTotal", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_bytesCompleted", $.Int64); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_bytesTotal", $.Int64); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_state", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_groupName", $.String); 
    $.Property({Static:false, Public:true }, "BytesCompleted", $.Int64);

    $.Property({Static:false, Public:true }, "BytesTotal", $.Int64);

    $.Property({Static:false, Public:true }, "State", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState"));

    $.Property({Static:false, Public:true }, "Group", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.DeploymentProgressState */ 

JSIL.MakeEnum(
  "System.Deployment.Application.DeploymentProgressState", true, {
    DownloadingDeploymentInformation: 0, 
    DownloadingApplicationInformation: 1, 
    DownloadingApplicationFiles: 2
  }, false
);

/* class System.Deployment.Application.SyncGroupHelper */ 

(function SyncGroupHelper$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SyncGroupHelper", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm07.TypeRef("System.ComponentModel.AsyncOperation"), $asm06.TypeRef("System.Threading.SendOrPostCallback")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DownloadCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DownloadModified", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CancellationPending", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Group", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_UserState", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "SetComplete", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "groupName", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "userState", $.Object); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "asyncOperation", $asm07.TypeRef("System.ComponentModel.AsyncOperation")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "progressReporter", $asm06.TypeRef("System.Threading.SendOrPostCallback")); 
    $.Field({Static:false, Public:false}, "_cancellationPending", $.Boolean); 
    $.Property({Static:false, Public:true }, "CancellationPending", $.Boolean);

    $.Property({Static:false, Public:true }, "Group", $.String);

    $.Property({Static:false, Public:true }, "UserState", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DeploymentServiceCom */ 

(function DeploymentServiceCom$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DeploymentServiceCom", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateApplicationExtension", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateDeployment", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateDeploymentEx", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForDeploymentUpdate", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForDeploymentUpdateInternal", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanOnlineAppCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CleanOnlineAppCacheInternal", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndServiceRightNow", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetInnerMostException", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetShellVisibleSubscriptionState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSubscriptionState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "MaintainSubscription", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "MaintainSubscriptionInternal", 
      JSIL.MethodSignature.Action($.String)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.ComVisibleAttribute"), function () { return [true]; })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch]; })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["20FD4E26-8E0F-4F73-A0E0-F27B8C57BE6F"]; });

})();

/* class System.Deployment.Application.DisposableBase */ 

(function DisposableBase$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DisposableBase", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeManagedResources", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeUnmanagedResources", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_disposed", $.Boolean); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadManager */ 

(function DownloadManager$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.DownloadManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AddDependencies", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.FileDownloader"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm07.TypeRef("System.Uri"), 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddFileToDownloader", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.FileDownloader"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.Object, 
          $asm07.TypeRef("System.Uri"), $.String, 
          $.String, $asm0A.TypeRef("System.Deployment.Application.HashCollection")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DownloadApplicationManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.String, 
          $asm07.TypeRef("System.Uri"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "DownloadApplicationManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.String, 
          $asm07.TypeRef("System.Uri"), $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), 
          $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DownloadDependencies", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm07.TypeRef("System.Uri"), 
          $.String, $.String, 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DownloadDeploymentManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "DownloadDeploymentManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), 
          $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DownloadDeploymentManifestBypass", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DownloadDeploymentManifestDirect", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), 
          $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ServerInformation")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DownloadDeploymentManifestDirectBypass", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ServerInformation")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DownloadManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), $.String, 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestType"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ServerInformation")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "DownloadManifestAsRawFile", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), $.String, 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ServerInformation")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "FollowDeploymentProviderUri", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.TempFile")]), 
          $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"), $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "MapFileSourceUri", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Uri"), [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm07.TypeRef("System.Uri"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessDownloadedFile", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReorderFilesForIconFile", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.File")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "VerifyRequestedPrivilegesSupport", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "VerifyRequestedPrivilegesSupport", 
      JSIL.MethodSignature.Action($.String)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadManager+DependencyDownloadCookie */ 

(function DependencyDownloadCookie$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DownloadManager+DependencyDownloadCookie", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")
        ])
    );

    $.Field({Static:false, Public:true , ReadOnly:true }, "ManifestElement", $.Object); 
    $.Field({Static:false, Public:true , ReadOnly:true }, "DeployManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:true , ReadOnly:true }, "AppManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.FormPiece */ 

(function FormPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0D.TypeRef("System.Windows.Forms.Panel"), 
      Name: "System.Deployment.Application.FormPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ModalPiece */ 

(function ModalPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.FormPiece"), 
      Name: "System.Deployment.Application.ModalPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ModalResult", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.UserInterfaceModalResult"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "_modalEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_modalResult", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceModalResult")); 
    $.Property({Static:false, Public:true }, "ModalResult", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceModalResult"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ErrorPiece */ 

(function ErrorPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ModalPiece"), 
      Name: "System.Deployment.Application.ErrorPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $.String, 
          $.String, $.String, 
          $.String, $.String, 
          $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnOk_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnSupport_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "errorLink_LinkClicked", 
      new JSIL.MethodSignature(null, [$.Object, $asm0D.TypeRef("System.Windows.Forms.LinkLabelLinkClickedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "lblMessage", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "pictureIcon", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "btnOk", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "btnSupport", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "okDetailsTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "errorLink", $asm0D.TypeRef("System.Windows.Forms.LinkLabel")); 
    $.Field({Static:false, Public:false}, "_errorMessage", $.String); 
    $.Field({Static:false, Public:false}, "_logFileLocation", $.String); 
    $.Field({Static:false, Public:false}, "_linkUrl", $.String); 
    $.Field({Static:false, Public:false}, "_linkUrlMessage", $.String); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.ExceptionTypes */ 

JSIL.MakeEnum(
  "System.Deployment.Application.ExceptionTypes", false, {
    Unknown: 0, 
    Activation: 1, 
    ComponentStore: 2, 
    ActivationInProgress: 3, 
    InvalidShortcut: 4, 
    InvalidARPEntry: 5, 
    LockTimeout: 6, 
    Subscription: 7, 
    SubscriptionState: 8, 
    ActivationLimitExceeded: 9, 
    DiskIsFull: 10, 
    GroupMultipleMatch: 11, 
    InvalidManifest: 12, 
    Manifest: 13, 
    ManifestLoad: 14, 
    ManifestParse: 15, 
    ManifestSemanticValidation: 16, 
    ManifestComponentSemanticValidation: 17, 
    UnsupportedElevetaionRequest: 18, 
    SubscriptionSemanticValidation: 19, 
    UriSchemeNotSupported: 20, 
    Zone: 21, 
    DeploymentUriDifferent: 22, 
    SizeLimitForPartialTrustOnlineAppExceeded: 23, 
    Validation: 24, 
    HashValidation: 25, 
    SignatureValidation: 26, 
    RefDefValidation: 27, 
    ClrValidation: 28, 
    StronglyNamedAssemblyVerification: 29, 
    IdentityMatchValidationForMixedModeAssembly: 30, 
    AppFileLocationValidation: 31, 
    FileSizeValidation: 32, 
    TrustFailDependentPlatform: 33
  }, false
);

/* class System.Deployment.Application.DeploymentException */ 

(function DeploymentException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.SystemException"), 
      Name: "System.Deployment.Application.DeploymentException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SubType", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "_type", $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes")); 
    $.Property({Static:false, Public:false}, "SubType", $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.InvalidDeploymentException */ 

(function InvalidDeploymentException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DeploymentException"), 
      Name: "System.Deployment.Application.InvalidDeploymentException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DeploymentDownloadException */ 

(function DeploymentDownloadException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DeploymentException"), 
      Name: "System.Deployment.Application.DeploymentDownloadException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.TrustNotGrantedException */ 

(function TrustNotGrantedException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DeploymentException"), 
      Name: "System.Deployment.Application.TrustNotGrantedException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DependentPlatformMissingException */ 

(function DependentPlatformMissingException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DeploymentException"), 
      Name: "System.Deployment.Application.DependentPlatformMissingException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Uri")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.ExceptionTypes"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUrl", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "_supportUrl", $asm07.TypeRef("System.Uri")); 
    $.Property({Static:false, Public:true }, "SupportUrl", $asm07.TypeRef("System.Uri"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.CompatibleFrameworkMissingException */ 

(function CompatibleFrameworkMissingException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DependentPlatformMissingException"), 
      Name: "System.Deployment.Application.CompatibleFrameworkMissingException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Uri"), 
          $asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_CompatibleFrameworks", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "_compatibleFrameworks", $asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks")); 
    $.Property({Static:false, Public:true }, "CompatibleFrameworks", $asm0A.TypeRef("System.Deployment.Application.CompatibleFrameworks"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SupportedRuntimeMissingException */ 

(function SupportedRuntimeMissingException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DependentPlatformMissingException"), 
      Name: "System.Deployment.Application.SupportedRuntimeMissingException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm07.TypeRef("System.Uri"), 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportedRuntimeVersion", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetObjectData", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.Field({Static:false, Public:false}, "_supportedRuntimeVersion", $.String); 
    $.Property({Static:false, Public:true }, "SupportedRuntimeVersion", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadCancelledException */ 

(function DownloadCancelledException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DeploymentDownloadException"), 
      Name: "System.Deployment.Application.DownloadCancelledException", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ExceptionUtility */ 

(function ExceptionUtility$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ExceptionUtility", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "IsHardException", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Exception")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadEventArgs */ 

(function DownloadEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.EventArgs"), 
      Name: "System.Deployment.Application.DownloadEventArgs", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BytesCompleted", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BytesTotal", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Cookie", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_FileLocalPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FileResponseUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FileSourceUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Progress", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Cookie", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_FileLocalPath", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_progress", $.Int32); 
    $.Field({Static:false, Public:false}, "_filesCompleted", $.Int32); 
    $.Field({Static:false, Public:false}, "_filesTotal", $.Int32); 
    $.Field({Static:false, Public:false}, "_bytesCompleted", $.Int64); 
    $.Field({Static:false, Public:false}, "_bytesTotal", $.Int64); 
    $.Field({Static:false, Public:false}, "_fileSourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_fileResponseUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_fileLocalPath", $.String); 
    $.Field({Static:false, Public:false}, "_cookie", $.Object); 
    $.Property({Static:false, Public:true }, "Progress", $.Int32);

    $.Property({Static:false, Public:true }, "BytesCompleted", $.Int64);

    $.Property({Static:false, Public:true }, "BytesTotal", $.Int64);

    $.Property({Static:false, Public:true }, "FileSourceUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "FileResponseUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:false}, "FileLocalPath", $.String);

    $.Property({Static:false, Public:false}, "Cookie", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadOptions */ 

(function DownloadOptions$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DownloadOptions", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:true }, "Background", $.Boolean); 
    $.Field({Static:false, Public:true }, "EnforceSizeLimit", $.Boolean); 
    $.Field({Static:false, Public:true }, "SizeLimit", $.UInt64); 
    $.Field({Static:false, Public:true }, "Size", $.UInt64); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ServerInformation */ 

(function ServerInformation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ServerInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AspNetVersion", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_PoweredBy", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Server", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_AspNetVersion", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_PoweredBy", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_Server", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_server", $.String); 
    $.Field({Static:false, Public:false}, "_poweredBy", $.String); 
    $.Field({Static:false, Public:false}, "_aspNetVersion", $.String); 
    $.Property({Static:false, Public:true }, "Server", $.String);

    $.Property({Static:false, Public:true }, "PoweredBy", $.String);

    $.Property({Static:false, Public:true }, "AspNetVersion", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadResult */ 

(function DownloadResult$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.DownloadResult", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResponseUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ServerInformation", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ResponseUri", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_responseUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_serverInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation")); 
    $.Property({Static:false, Public:true }, "ResponseUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "ServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.FileDownloader */ 

(function FileDownloader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.FileDownloader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadModified", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AddFile", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Uri"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "AddFile", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Uri"), $.String, 
          $.Int32
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "AddFile", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Uri"), $.String, 
          $.Object, $asm0A.TypeRef("System.Deployment.Application.HashCollection")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "AddFile", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Uri"), $.String, 
          $.Object, $asm0A.TypeRef("System.Deployment.Application.HashCollection"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddFilesInHashtable", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Collections.Hashtable"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddNotification", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"))
    );

    $.ExternalMethod({Static:true , Public:false}, "AddSingleFileInHashtable", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Collections.Hashtable"), $asm0A.TypeRef("System.Deployment.Application.HashCollection"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Cancel", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckForSizeLimit", 
      new JSIL.MethodSignature(null, [$.UInt64, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:true }, "Download", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DownloadAllFiles", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FileHashVerified", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.HashCollection"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ComponentVerifier", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.ComponentVerifier"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DownloadResults", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.DownloadResult")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPatchSourceStream", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.FileStream"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPatchTargetStream", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.FileStream"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnCompleted", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnModified", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "OnModifiedWithThrottle", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int32]))
    );

    $.ExternalMethod({Static:false, Public:false}, "PatchFiles", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "PatchSingleFile", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadQueueItem"), $asm06.TypeRef("System.Collections.Hashtable")])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadCompleted", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadModified", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RemoveNotification", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.IDownloadNotification"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Options", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DownloadOptions"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "SetBytesTotal", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SetExpectedBytesTotal", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.Field({Static:false, Public:false}, "_fileQueue", $asm06.TypeRef("System.Collections.Queue")); 
    $.Field({Static:false, Public:false}, "_eventArgs", $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")); 
    $.Field({Static:false, Public:false}, "_options", $asm0A.TypeRef("System.Deployment.Application.DownloadOptions")); 
    $.Field({Static:false, Public:false}, "_downloadResults", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_accumulatedBytesTotal", $.Int64); 
    $.Field({Static:false, Public:false}, "_expectedBytesTotal", $.Int64); 
    $.Field({Static:false, Public:false}, "DownloadModified", $asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler")); 
    $.Field({Static:false, Public:false}, "DownloadCompleted", $asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler")); 
    $.Field({Static:false, Public:false}, "_componentVerifier", $asm0A.TypeRef("System.Deployment.Application.ComponentVerifier")); 
    $.Field({Static:false, Public:false}, "_fCancelPending", $.Boolean); 
    $.Field({Static:false, Public:false}, "_buffer", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Property({Static:false, Public:true }, "Options", $asm0A.TypeRef("System.Deployment.Application.DownloadOptions"));

    $.Property({Static:false, Public:true }, "ComponentVerifier", $asm0A.TypeRef("System.Deployment.Application.ComponentVerifier"));

    $.Property({Static:false, Public:true }, "DownloadResults", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.DownloadResult")]));

    $.Event({Static:false, Public:true }, "DownloadModified", $asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler"));

    $.Event({Static:false, Public:true }, "DownloadCompleted", $asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.FileDownloader+DownloadModifiedEventHandler", false, []);

/* delegate System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler */ 

JSIL.MakeDelegate("System.Deployment.Application.FileDownloader+DownloadCompletedEventHandler", false, []);

/* class System.Deployment.Application.FileDownloader+DownloadQueueItem */ 

(function DownloadQueueItem$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.FileDownloader+DownloadQueueItem", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Constant({Static:true , Public:true }, "FileOfAnySize", -1); 
    $.Field({Static:false, Public:true }, "_sourceUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:true }, "_targetPath", $.String); 
    $.Field({Static:false, Public:true }, "_cookie", $.Object); 
    $.Field({Static:false, Public:true }, "_hashCollection", $asm0A.TypeRef("System.Deployment.Application.HashCollection")); 
    $.Field({Static:false, Public:true }, "_maxFileSize", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.InPlaceHostingManager */ 

(function InPlaceHostingManager$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.InPlaceHostingManager", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Uri"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "_Initialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadApplicationCompleted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadApplicationCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_DownloadProgressChanged", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadProgressChangedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "add_GetManifestCompleted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.GetManifestCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AssertApplicationRequirements", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AssertApplicationRequirements", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "AssertState", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AssertState", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"), $asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AssertState", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"), $asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"), 
          $asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CancelAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "ChangeState", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"), $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "ChangeState", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DownloadApplicationAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "Execute", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Runtime.Remoting.ObjectHandle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetManifestAsync", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSubIdAndValidate", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnBindCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnProgressChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressChangedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "OnSynchronizeCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.SynchronizeCompletedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadApplicationCompleted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadApplicationCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_DownloadProgressChanged", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadProgressChangedEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "remove_GetManifestCompleted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.GetManifestCompletedEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "UninstallCustomAddIn", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "UninstallCustomUXApplication", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_deploymentManager", $asm0A.TypeRef("System.Deployment.Application.DeploymentManager")); 
    $.Field({Static:false, Public:false}, "_state", $asm0A.TypeRef("System.Deployment.Application.InPlaceHostingManager+State")); 
    $.Field({Static:false, Public:false}, "_isCached", $.Boolean); 
    $.Field({Static:false, Public:false}, "_isLaunchInHostProcess", $.Boolean); 
    $.Field({Static:false, Public:false}, "_lock", $.Object); 
    $.Field({Static:false, Public:false}, "_appType", $asm0A.TypeRef("System.Deployment.Application.AppType")); 
    $.Field({Static:false, Public:false}, "_log", $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")); 
    $.Field({Static:false, Public:false}, "GetManifestCompleted", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.GetManifestCompletedEventArgs")])); 
    $.Field({Static:false, Public:false}, "DownloadProgressChanged", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadProgressChangedEventArgs")])); 
    $.Field({Static:false, Public:false}, "DownloadApplicationCompleted", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadApplicationCompletedEventArgs")])); 
    $.Event({Static:false, Public:true }, "GetManifestCompleted", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.GetManifestCompletedEventArgs")]));

    $.Event({Static:false, Public:true }, "DownloadProgressChanged", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadProgressChangedEventArgs")]));

    $.Event({Static:false, Public:true }, "DownloadApplicationCompleted", $asm06.TypeRef("System.EventHandler`1", [$asm0A.TypeRef("System.Deployment.Application.DownloadApplicationCompletedEventArgs")]));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.InPlaceHostingManager+State */ 

JSIL.MakeEnum(
  "System.Deployment.Application.InPlaceHostingManager+State", false, {
    Ready: 0, 
    GettingManifest: 1, 
    GetManifestSucceeded: 2, 
    VerifyingRequirements: 3, 
    VerifyRequirementsSucceeded: 4, 
    DownloadingApplication: 5, 
    DownloadApplicationSucceeded: 6, 
    Done: 7
  }, false
);

/* class System.Deployment.Application.GetManifestCompletedEventArgs */ 

(function GetManifestCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.GetManifestCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs"), $asm0A.TypeRef("System.Deployment.Application.ActivationDescription"), 
          $.String, $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs"), $asm06.TypeRef("System.Exception"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.BindCompletedEventArgs"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ActivationContext", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ActivationContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationIdentity", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.ApplicationIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationManifest", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeploymentManifest", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Xml.XmlReader"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCached", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LogFilePath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ProductName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RawApplicationManifest", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RawDeploymentManifest", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubscriptionIdentity", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SupportUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Version", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ManifestToXml", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlReader"), [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.Field({Static:false, Public:false}, "_activationDescription", $asm0A.TypeRef("System.Deployment.Application.ActivationDescription")); 
    $.Field({Static:false, Public:false}, "_version", $asm06.TypeRef("System.Version")); 
    $.Field({Static:false, Public:false}, "_applicationIdentity", $asm06.TypeRef("System.ApplicationIdentity")); 
    $.Field({Static:false, Public:false}, "_subId", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_isCached", $.Boolean); 
    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Field({Static:false, Public:false}, "_support", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_logFilePath", $.String); 
    $.Field({Static:false, Public:false}, "_rawApplicationManifest", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "_rawDeploymentManifest", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "_actContext", $asm06.TypeRef("System.ActivationContext")); 
    $.Property({Static:false, Public:true }, "ApplicationIdentity", $asm06.TypeRef("System.ApplicationIdentity"));

    $.Property({Static:false, Public:true }, "Version", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "IsCached", $.Boolean);

    $.Property({Static:false, Public:true }, "ProductName", $.String);

    $.Property({Static:false, Public:true }, "SupportUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "LogFilePath", $.String);

    $.Property({Static:false, Public:true }, "DeploymentManifest", $asm0E.TypeRef("System.Xml.XmlReader"));

    $.Property({Static:false, Public:true }, "ApplicationManifest", $asm0E.TypeRef("System.Xml.XmlReader"));

    $.Property({Static:false, Public:true }, "ActivationContext", $asm06.TypeRef("System.ActivationContext"));

    $.Property({Static:false, Public:true }, "SubscriptionIdentity", $.String);

    $.Property({Static:false, Public:false}, "RawDeploymentManifest", $jsilcore.TypeRef("System.Array", [$.Byte]));

    $.Property({Static:false, Public:false}, "RawApplicationManifest", $jsilcore.TypeRef("System.Array", [$.Byte]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadProgressChangedEventArgs */ 

(function DownloadProgressChangedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.ProgressChangedEventArgs"), 
      Name: "System.Deployment.Application.DownloadProgressChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 5, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Object, 
          $.Int64, $.Int64, 
          $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_BytesDownloaded", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_State", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_TotalBytesToDownload", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_bytesCompleted", $.Int64); 
    $.Field({Static:false, Public:false}, "_bytesTotal", $.Int64); 
    $.Field({Static:false, Public:false}, "_deploymentProgressState", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState")); 
    $.Property({Static:false, Public:true }, "BytesDownloaded", $.Int64);

    $.Property({Static:false, Public:true }, "TotalBytesToDownload", $.Int64);

    $.Property({Static:false, Public:true }, "State", $asm0A.TypeRef("System.Deployment.Application.DeploymentProgressState"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DownloadApplicationCompletedEventArgs */ 

(function DownloadApplicationCompletedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), 
      Name: "System.Deployment.Application.DownloadApplicationCompletedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.ComponentModel.AsyncCompletedEventArgs"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LogFilePath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ShortcutAppId", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_logFilePath", $.String); 
    $.Field({Static:false, Public:false}, "_shortcutAppId", $.String); 
    $.Property({Static:false, Public:true }, "LogFilePath", $.String);

    $.Property({Static:false, Public:true }, "ShortcutAppId", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.LifetimeManager */ 

(function LifetimeManager$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.LifetimeManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CheckAlive", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "EndImmediately", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "EndOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "ExtendLifetime", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "PeriodicTimerCallback", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "StartOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "WaitForEnd", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "_lifetimeEndedEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:true , Public:false}, "_periodicTimer", $asm06.TypeRef("System.Threading.Timer")); 
    $.Field({Static:true , Public:false}, "_operationsInProgress", $.Int32); 
    $.Field({Static:true , Public:false}, "_lifetimeExtended", $.Boolean); 
    $.Field({Static:true , Public:false}, "_lifetimeEnded", $.Boolean); 
    $.Field({Static:true , Public:false}, "_immediate", $.Boolean); 
    $.Field({Static:true , Public:false}, "_TimerLock", $.Object); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.LockedFile */ 

(function LockedFile$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.LockedFile", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "AcquireLock", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IDisposable"), [
          $.String, $asm06.TypeRef("System.TimeSpan"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ThreadReaderLocks", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Hashtable"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ThreadWriterLocks", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Hashtable"))
    );

    $.ExternalMethod({Static:true , Public:false}, "LockHeldByThread", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.LockedFile+LockedFileHandle"), [$.String, $.Boolean])
    );

    $.Field({Static:true , Public:false}, "_threadReaderLocks", $asm06.TypeRef("System.Collections.Hashtable"))
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute")); 
    $.Field({Static:true , Public:false}, "_threadWriterLocks", $asm06.TypeRef("System.Collections.Hashtable"))
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute")); 
    $.Property({Static:true , Public:false}, "ThreadReaderLocks", $asm06.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:true , Public:false}, "ThreadWriterLocks", $asm06.TypeRef("System.Collections.Hashtable"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.LockedFile+LockedFileHandle */ 

(function LockedFileHandle$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.LockedFile+LockedFileHandle", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("Microsoft.Win32.SafeHandles.SafeFileHandle"), $.String, 
          $asm06.TypeRef("System.IO.FileAccess")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_handle", $asm06.TypeRef("Microsoft.Win32.SafeHandles.SafeFileHandle")); 
    $.Field({Static:false, Public:false}, "_path", $.String); 
    $.Field({Static:false, Public:false}, "_access", $asm06.TypeRef("System.IO.FileAccess")); 
    $.Field({Static:false, Public:false}, "_disposed", $.Boolean); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger */ 

(function Logger$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Logger", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AddCurrentThreadLogger", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddErrorInformation", 
      new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Exception"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddErrorInformation", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String, 
          $asm06.TypeRef("System.Exception"), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddErrorInformation", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddErrorInformation", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String, 
          $asm06.TypeRef("System.Exception")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddErrorInformation", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Exception"), $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ])
    )
      .Parameter(2, "args", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "AddInternalState", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddInternalState", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String, 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddInternalState", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddInternalState", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddLogger", 
      JSIL.MethodSignature.Action($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMethodCall", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMethodCall", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String, 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMethodCall", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMethodCall", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddMethodCall", 
      new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "AddPhaseInformation", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddPhaseInformation", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "AddPhaseInformation", 
      new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:false}, "AddTransactionInformation", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Int32]), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddTransactionInformation", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddWarningInformation", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddWarningInformation", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateLogFileStream", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IO.FileStream"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EndCurrentThreadLogging", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "EndLogging", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EndLogOperation", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "FlushCurrentThreadLogs", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "FlushLog", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "FlushLogs", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Errors", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+ErrorSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ExecutionFlow", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+ExecutionFlowSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "get_Header", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+HeaderSection"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Identities", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+IdentitySection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Identity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "get_LogFileEncoding", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Text.Encoding"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_LogFilePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Phases", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+PhaseSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Sources", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+SourceSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Summary", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+SummarySection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Transactions", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+TransactionSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Warnings", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+WarningSection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetCurrentLogThreadId", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetCurrentThreadLogger", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLogFilePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLogFilePath", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLogFilePath", 
      new JSIL.MethodSignature($.String, [$.Type])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLogger", 
      new JSIL.MethodSignature($.Type, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetRegitsryBasedLogFilePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetWinInetBasedLogFilePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveCurrentThreadLogger", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveLogger", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "Serialize", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Net.WebRequest")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Serialize", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Net.WebResponse")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Serialize", 
      new JSIL.MethodSignature($.String, [$asm06.TypeRef("System.Security.Policy.TrustManagerContext")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetApplicationManifest", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetApplicationManifest", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetApplicationServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetApplicationUrl", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetApplicationUrl", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $asm07.TypeRef("System.Uri")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetDeploymentManifest", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetDeploymentManifest", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetDeploymentProviderServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetDeploymentProviderUrl", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetSubscriptionServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SetSubscriptionUri", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetSubscriptionUrl", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetSubscriptionUrl", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $asm07.TypeRef("System.Uri")])
    );

    $.ExternalMethod({Static:true , Public:false}, "SetSubscriptionUrl", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "SetTextualSubscriptionIdentity", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "SetTextualSubscriptionIdentity", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetTextualSubscriptionIdentity", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StartCurrentThreadLogging", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "StartLogging", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"))
    );

    $.Field({Static:false, Public:false}, "_sources", $asm0A.TypeRef("System.Deployment.Application.Logger+SourceSection")); 
    $.Field({Static:false, Public:false}, "_identities", $asm0A.TypeRef("System.Deployment.Application.Logger+IdentitySection")); 
    $.Field({Static:false, Public:false}, "_summary", $asm0A.TypeRef("System.Deployment.Application.Logger+SummarySection")); 
    $.Field({Static:false, Public:false}, "_errors", $asm0A.TypeRef("System.Deployment.Application.Logger+ErrorSection")); 
    $.Field({Static:false, Public:false}, "_warnings", $asm0A.TypeRef("System.Deployment.Application.Logger+WarningSection")); 
    $.Field({Static:false, Public:false}, "_phases", $asm0A.TypeRef("System.Deployment.Application.Logger+PhaseSection")); 
    $.Field({Static:false, Public:false}, "_executionFlow", $asm0A.TypeRef("System.Deployment.Application.Logger+ExecutionFlowSection")); 
    $.Field({Static:false, Public:false}, "_transactions", $asm0A.TypeRef("System.Deployment.Application.Logger+TransactionSection")); 
    $.Field({Static:false, Public:false}, "_logIdentity", $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity")); 
    $.Field({Static:false, Public:false}, "_logFilePath", $.String); 
    $.Field({Static:false, Public:false}, "_urlName", $.String); 
    $.Field({Static:false, Public:false}, "_logFileLocation", $asm0A.TypeRef("System.Deployment.Application.Logger+LogFileLocation")); 
    $.Field({Static:true , Public:false}, "_logFileEncoding", $.Object); 
    $.Field({Static:true , Public:false}, "_loggerCollection", $asm06.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:true , Public:false}, "_threadLogIdTable", $asm06.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:true , Public:false}, "_logAccessLock", $.Object); 
    $.Field({Static:true , Public:false}, "_detailedLoggingEnabled", $.Boolean); 
    $.Field({Static:true , Public:false}, "_header", $.Object); 
    $.Property({Static:false, Public:false}, "Transactions", $asm0A.TypeRef("System.Deployment.Application.Logger+TransactionSection"));

    $.Property({Static:false, Public:false}, "Errors", $asm0A.TypeRef("System.Deployment.Application.Logger+ErrorSection"));

    $.Property({Static:false, Public:false}, "Warnings", $asm0A.TypeRef("System.Deployment.Application.Logger+WarningSection"));

    $.Property({Static:false, Public:false}, "Phases", $asm0A.TypeRef("System.Deployment.Application.Logger+PhaseSection"));

    $.Property({Static:false, Public:false}, "ExecutionFlow", $asm0A.TypeRef("System.Deployment.Application.Logger+ExecutionFlowSection"));

    $.Property({Static:false, Public:false}, "Sources", $asm0A.TypeRef("System.Deployment.Application.Logger+SourceSection"));

    $.Property({Static:false, Public:false}, "Identities", $asm0A.TypeRef("System.Deployment.Application.Logger+IdentitySection"));

    $.Property({Static:false, Public:false}, "Summary", $asm0A.TypeRef("System.Deployment.Application.Logger+SummarySection"));

    $.Property({Static:false, Public:false}, "Identity", $asm0A.TypeRef("System.Deployment.Application.Logger+LogIdentity"));

    $.Property({Static:false, Public:false}, "LogFilePath", $.String);

    $.Property({Static:true , Public:false}, "LogFileEncoding", $asm06.TypeRef("System.Text.Encoding"));

    $.Property({Static:true , Public:false}, "Header", $asm0A.TypeRef("System.Deployment.Application.Logger+HeaderSection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+LogInformation */ 

(function LogInformation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Logger+LogInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Message", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Time", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_message", $.String); 
    $.Field({Static:false, Public:false}, "_time", $asm06.TypeRef("System.DateTime")); 
    $.Property({Static:false, Public:true }, "Message", $.String);

    $.Property({Static:false, Public:true }, "Time", $asm06.TypeRef("System.DateTime"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+ErrorInformation */ 

(function ErrorInformation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+ErrorInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Exception"), 
          $asm06.TypeRef("System.DateTime")
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Summary", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExceptionType", 
      new JSIL.MethodSignature($.String, [$asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_exception", $asm06.TypeRef("System.Exception")); 
    $.Property({Static:false, Public:true }, "Summary", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+TransactionInformation */ 

(function TransactionInformation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+TransactionInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Int32]), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Failed", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FailureSummary", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_operations", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_failed", $.Boolean); 
    $.Property({Static:false, Public:true }, "Failed", $.Boolean);

    $.Property({Static:false, Public:true }, "FailureSummary", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+TransactionInformation+TransactionOperation */ 

(function TransactionOperation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Logger+TransactionInformation+TransactionOperation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation"), $.UInt32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AnalyzeTransactionOperation", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation"), $.UInt32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Failed", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_FailureMessage", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_failed", $.Boolean); 
    $.Field({Static:false, Public:false}, "_message", $.String); 
    $.Field({Static:false, Public:false}, "_failureMessage", $.String); 
    $.Property({Static:false, Public:true }, "Failed", $.Boolean);

    $.Property({Static:false, Public:true }, "FailureMessage", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+HeaderSection */ 

(function HeaderSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+HeaderSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateLogHeaderText", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetExecutingAssemblyPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetModulePath", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetModulePathInClrFolder", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetModulePathInSystemFolder", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetVersionInfo", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Diagnostics.FileVersionInfo"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+SourceSection */ 

(function SourceSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+SourceSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "AppendServerInformation", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Text.StringBuilder"), $asm0A.TypeRef("System.Deployment.Application.ServerInformation")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_ApplicationServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ApplicationUri", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_DeploymentProviderServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_DeploymentProviderUri", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_SubscriptionServerInformation", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ServerInformation"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_SubscriptionUri", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_subscriptonUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_deploymentProviderUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_applicationUri", $asm07.TypeRef("System.Uri")); 
    $.Field({Static:false, Public:false}, "_subscriptionServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation")); 
    $.Field({Static:false, Public:false}, "_deploymentProviderServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation")); 
    $.Field({Static:false, Public:false}, "_applicationServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation")); 
    $.Property({Static:false, Public:true }, "SubscriptionUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "DeploymentProviderUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "ApplicationUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "SubscriptionServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation"));

    $.Property({Static:false, Public:true }, "DeploymentProviderServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation"));

    $.Property({Static:false, Public:true }, "ApplicationServerInformation", $asm0A.TypeRef("System.Deployment.Application.ServerInformation"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+IdentitySection */ 

(function IdentitySection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+IdentitySection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DeploymentIdentity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ApplicationIdentity", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_DeploymentIdentity", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_deploymentIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_applicationIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Property({Static:false, Public:true }, "DeploymentIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "ApplicationIdentity", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+SummarySection */ 

(function SummarySection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+SummarySection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ApplicationManifest", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_DeploymentManifest", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_deploymentManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Field({Static:false, Public:false}, "_applicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")); 
    $.Property({Static:false, Public:true }, "DeploymentManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"));

    $.Property({Static:false, Public:true }, "ApplicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+ErrorSection */ 

(function ErrorSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+ErrorSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddError", 
      new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Exception"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ErrorSummary", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_errors", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Property({Static:false, Public:true }, "ErrorSummary", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+WarningSection */ 

(function WarningSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+WarningSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddWarning", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_warnings", $asm06.TypeRef("System.Collections.ArrayList")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+PhaseSection */ 

(function PhaseSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+PhaseSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddPhaseInformation", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_phaseInformations", $asm06.TypeRef("System.Collections.ArrayList")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+ExecutionFlowSection */ 

(function ExecutionFlowSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+ExecutionFlowSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddInternalState", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AddMethodCall", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_executionFlow", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:true , Public:false}, "DTFI", $asm06.TypeRef("System.Globalization.DateTimeFormatInfo")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+TransactionSection */ 

(function TransactionSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.Logger+LogInformation"), 
      Name: "System.Deployment.Application.Logger+TransactionSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "AddTransactionInformation", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Int32]), $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FailureSummary", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_transactionInformations", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_failedTransactionInformations", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Property({Static:false, Public:true }, "FailureSummary", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Logger+LogIdentity */ 

(function LogIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Logger+LogIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ThreadId", 
      JSIL.MethodSignature.Return($.UInt32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_ticks", $.Int64); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_threadId", $.UInt32); 
    $.Field({Static:false, Public:false}, "_logIdentityStringForm", $.String); 
    $.Property({Static:false, Public:true }, "ThreadId", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Logger+LogFileLocation */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Logger+LogFileLocation", false, {
    NoLogFile: 0, 
    RegistryBased: 1, 
    WinInetCache: 2
  }, false
);

/* class System.Deployment.Application.MaintenancePiece */ 

(function MaintenancePiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ModalPiece"), 
      Name: "System.Deployment.Application.MaintenancePiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo"), 
          $asm0A.TypeRef("System.Deployment.Application.MaintenanceInfo"), $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnCancel_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnHelp_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnOk_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "radioRemove_CheckedChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "radioRestore_CheckedChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.Field({Static:false, Public:false}, "lblHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "lblSubHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "pictureDesktop", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "pictureRestore", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "pictureRemove", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "radioRestore", $asm0D.TypeRef("System.Windows.Forms.RadioButton")); 
    $.Field({Static:false, Public:false}, "radioRemove", $asm0D.TypeRef("System.Windows.Forms.RadioButton")); 
    $.Field({Static:false, Public:false}, "groupRule", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "groupDivider", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "btnOk", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "btnCancel", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "btnHelp", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "okCancelHelpTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "contentTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "topTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "_info", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")); 
    $.Field({Static:false, Public:false}, "_maintenanceInfo", $asm0A.TypeRef("System.Deployment.Application.MaintenanceInfo")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.MaintenanceFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.MaintenanceFlags", false, {
    ClearFlag: 0, 
    RestorationPossible: 1, 
    RestoreSelected: 2, 
    RemoveSelected: 4
  }, true
);

/* class System.Deployment.Application.MaintenanceInfo */ 

(function MaintenanceInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.MaintenanceInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "maintenanceFlags", $asm0A.TypeRef("System.Deployment.Application.MaintenanceFlags")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ManifestGenerator */ 

(function ManifestGenerator$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.ManifestGenerator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AddDependencies", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.DependentAssembly")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddFile", 
      new JSIL.MethodSignature(null, [
          $asm0E.TypeRef("System.Xml.XmlDocument"), $asm0E.TypeRef("System.Xml.XmlElement"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.File")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddFiles", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.Manifest.File")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CloneAssemblyTemplate", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Xml.XmlDocument"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateAssemblyIdentityElement", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlElement"), [$asm0E.TypeRef("System.Xml.XmlDocument"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GenerateGACDetectionManifest", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GenerateManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [
          $asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNamespaceMgr", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlNamespaceManager"), [$asm0E.TypeRef("System.Xml.XmlDocument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "InjectIdentityXml", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.Field({Static:true , Public:false}, "assemblyTemplateDoc", $.Object); 
    $.Field({Static:true , Public:false}, "GACDetectionTempManifestAsmId", $.Object, null); 
    $.Constant({Static:true , Public:false}, "AssemblyTemplateResource", "AssemblyTemplate.xml"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.AssemblyModule */ 

(function AssemblyModule$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.AssemblyModule", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("System.Array", [$.Byte])])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Hash", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_name", $.String); 
    $.Field({Static:false, Public:false}, "_hash", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Hash", $jsilcore.TypeRef("System.Array", [$.Byte]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.AssemblyReference */ 

(function AssemblyReference$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.AssemblyReference", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Reflection.AssemblyName"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Reflection.AssemblyName"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_name", $asm06.TypeRef("System.Reflection.AssemblyName")); 
    $.Property({Static:false, Public:true }, "Name", $asm06.TypeRef("System.Reflection.AssemblyName"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.AssemblyMetaDataImport */ 

(function AssemblyMetaDataImport$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DisposableBase"), 
      Name: "System.Deployment.Application.AssemblyMetaDataImport", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "AllocAsmMeta", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructAssemblyName", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Reflection.AssemblyName"), [
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$.Char]), 
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $.UInt32, $.UInt32
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeUnmanagedResources", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FreeAsmMeta", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Files", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyModule")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Reflection.AssemblyName"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_References", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyReference")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ImportAssemblyFiles", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyModule")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ImportAssemblyReferences", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyReference")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "ImportIdentity", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Reflection.AssemblyName"))
    );

    $.Field({Static:false, Public:false}, "_modules", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyModule")])); 
    $.Field({Static:false, Public:false}, "_name", $asm06.TypeRef("System.Reflection.AssemblyName")); 
    $.Field({Static:false, Public:false}, "_asmRefs", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyReference")])); 
    $.Field({Static:false, Public:false}, "_metaDispenser", $asm0A.TypeRef("System.Deployment.Application.IMetaDataDispenser")); 
    $.Field({Static:false, Public:false}, "_assemblyImport", $asm0A.TypeRef("System.Deployment.Application.IMetaDataAssemblyImport")); 
    $.Field({Static:true , Public:false}, "_importerGuid", $asm06.TypeRef("System.Guid")); 
    $.Constant({Static:true , Public:false}, "GENMAN_STRING_BUF_SIZE", 1024); 
    $.Constant({Static:true , Public:false}, "GENMAN_LOCALE_BUF_SIZE", 64); 
    $.Constant({Static:true , Public:false}, "GENMAN_ENUM_TOKEN_BUF_SIZE", 16); 
    function AssemblyMetaDataImport__cctor () {
      $thisType._importerGuid = new $asm06.System.Guid();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      AssemblyMetaDataImport__cctor
    );

    $.Property({Static:false, Public:true }, "Files", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyModule")]));

    $.Property({Static:false, Public:true }, "Name", $asm06.TypeRef("System.Reflection.AssemblyName"));

    $.Property({Static:false, Public:true }, "References", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.AssemblyReference")]));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.CorAssemblyFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.CorAssemblyFlags", false, {
    afPublicKey: 1
  }, true
);

/* interface System.Deployment.Application.IMetaDataDispenser */ 

JSIL.MakeInterface(
  "System.Deployment.Application.IMetaDataDispenser", false, [], function ($) {
    $.Method({}, "DefineScope", new JSIL.MethodSignature($.Object, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "OpenScope", new JSIL.MethodSignature($.Object, [
          $.String, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "OpenScopeOnMemory", new JSIL.MethodSignature($.Object, [
          $asm06.TypeRef("System.IntPtr"), $.UInt32, 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["809c652e-7396-11d2-9771-00a0c9b4d50c"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.TypeLibTypeFlags.FRestricted]; });

/* struct System.Deployment.Application.ASSEMBLYMETADATA */ 

(function ASSEMBLYMETADATA$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.ASSEMBLYMETADATA", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "usMajorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "usMinorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "usBuildNumber", $.UInt16); 
    $.Field({Static:false, Public:true }, "usRevisionNumber", $.UInt16); 
    $.Field({Static:false, Public:true }, "rpLocale", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "cchLocale", $.UInt32); 
    $.Field({Static:false, Public:true }, "rpProcessors", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "cProcessors", $.UInt32); 
    $.Field({Static:false, Public:true }, "rOses", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "cOses", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Application.IMetaDataImport */ 

JSIL.MakeInterface(
  "System.Deployment.Application.IMetaDataImport", false, [], function ($) {
    $.Method({}, "CloseEnum", JSIL.MethodSignature.Void);
    $.Method({}, "CountEnum", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "ResetEnum", JSIL.MethodSignature.Void);
    $.Method({}, "EnumTypeDefs", JSIL.MethodSignature.Void);
    $.Method({}, "EnumInterfaceImpls", JSIL.MethodSignature.Void);
    $.Method({}, "EnumTypeRefs", JSIL.MethodSignature.Void);
    $.Method({}, "FindTypeDefByName", JSIL.MethodSignature.Void);
    $.Method({}, "GetScopeProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetModuleFromScope", JSIL.MethodSignature.Void);
    $.Method({}, "GetTypeDefProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetInterfaceImplProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetTypeRefProps", JSIL.MethodSignature.Void);
    $.Method({}, "ResolveTypeRef", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMembers", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMembersWithName", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMethods", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMethodsWithName", JSIL.MethodSignature.Void);
    $.Method({}, "EnumFields", JSIL.MethodSignature.Void);
    $.Method({}, "EnumFieldsWithName", JSIL.MethodSignature.Void);
    $.Method({}, "EnumParams", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMemberRefs", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMethodImpls", JSIL.MethodSignature.Void);
    $.Method({}, "EnumPermissionSets", JSIL.MethodSignature.Void);
    $.Method({}, "FindMember", JSIL.MethodSignature.Void);
    $.Method({}, "FindMethod", JSIL.MethodSignature.Void);
    $.Method({}, "FindField", JSIL.MethodSignature.Void);
    $.Method({}, "FindMemberRef", JSIL.MethodSignature.Void);
    $.Method({}, "GetMethodProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetMemberRefProps", JSIL.MethodSignature.Void);
    $.Method({}, "EnumProperties", JSIL.MethodSignature.Void);
    $.Method({}, "EnumEvents", JSIL.MethodSignature.Void);
    $.Method({}, "GetEventProps", JSIL.MethodSignature.Void);
    $.Method({}, "EnumMethodSemantics", JSIL.MethodSignature.Void);
    $.Method({}, "GetMethodSemantics", JSIL.MethodSignature.Void);
    $.Method({}, "GetClassLayout", JSIL.MethodSignature.Void);
    $.Method({}, "GetFieldMarshal", JSIL.MethodSignature.Void);
    $.Method({}, "GetRVA", JSIL.MethodSignature.Void);
    $.Method({}, "GetPermissionSetProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetSigFromToken", JSIL.MethodSignature.Void);
    $.Method({}, "GetModuleRefProps", JSIL.MethodSignature.Void);
    $.Method({}, "EnumModuleRefs", JSIL.MethodSignature.Void);
    $.Method({}, "GetTypeSpecFromToken", JSIL.MethodSignature.Void);
    $.Method({}, "GetNameFromToken", JSIL.MethodSignature.Void);
    $.Method({}, "EnumUnresolvedMethods", JSIL.MethodSignature.Void);
    $.Method({}, "GetUserString", JSIL.MethodSignature.Void);
    $.Method({}, "GetPinvokeMap", JSIL.MethodSignature.Void);
    $.Method({}, "EnumSignatures", JSIL.MethodSignature.Void);
    $.Method({}, "EnumTypeSpecs", JSIL.MethodSignature.Void);
    $.Method({}, "EnumUserStrings", JSIL.MethodSignature.Void);
    $.Method({}, "GetParamForMethodIndex", JSIL.MethodSignature.Void);
    $.Method({}, "EnumCustomAttributes", JSIL.MethodSignature.Void);
    $.Method({}, "GetCustomAttributeProps", JSIL.MethodSignature.Void);
    $.Method({}, "FindTypeRef", JSIL.MethodSignature.Void);
    $.Method({}, "GetMemberProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetFieldProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetPropertyProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetParamProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetCustomAttributeByName", JSIL.MethodSignature.Void);
    $.Method({}, "IsValidToken", JSIL.MethodSignature.Void);
    $.Method({}, "GetNestedClassProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetNativeCallConvFromSig", JSIL.MethodSignature.Void);
    $.Method({}, "IsGlobal", JSIL.MethodSignature.Void);
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["7DAC8207-D3AE-4c75-9B67-92801A497D44"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Application.CorMetaDataDispenser */ 

(function CorMetaDataDispenser$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.CorMetaDataDispenser", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.TypeLibTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.TypeLibTypeFlags.FCanCreate]; })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E5CB7A31-7512-11d2-89CE-0080C792E5D8"]; })
    .Attribute($asm06.TypeRef("System.Runtime.InteropServices.ClassInterfaceAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ClassInterfaceType.None]; });

})();

/* interface System.Deployment.Application.IMetaDataAssemblyImport */ 

JSIL.MakeInterface(
  "System.Deployment.Application.IMetaDataAssemblyImport", false, [], function ($) {
    $.Method({}, "GetAssemblyProps", new JSIL.MethodSignature(null, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Char]), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetAssemblyRefProps", new JSIL.MethodSignature(null, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("System.Array", [$.Char]), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetFileProps", new JSIL.MethodSignature(null, [
          $.UInt32, $jsilcore.TypeRef("System.Array", [$.Char]), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetExportedTypeProps", JSIL.MethodSignature.Void);
    $.Method({}, "GetManifestResourceProps", JSIL.MethodSignature.Void);
    $.Method({}, "EnumAssemblyRefs", new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "EnumFiles", new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "EnumExportedTypes", JSIL.MethodSignature.Void);
    $.Method({}, "EnumManifestResources", JSIL.MethodSignature.Void);
    $.Method({}, "GetAssemblyFromScope", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.UInt32])));
    $.Method({}, "FindExportedTypeByName", JSIL.MethodSignature.Void);
    $.Method({}, "FindManifestResourceByName", JSIL.MethodSignature.Void);
    $.Method({}, "CloseEnum", JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr")));
    $.Method({}, "FindAssembliesByName", JSIL.MethodSignature.Void);
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["EE62470B-E94B-424e-9B7C-2F00C9249F93"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Application.ManifestReader */ 

(function ManifestReader$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.ManifestReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "FromDocument", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [
          $.String, $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest+ManifestType"), 
          $asm07.TypeRef("System.Uri")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FromDocumentNoValidation", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), [$.String])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ManifestValidatingReader */ 

(function ManifestValidatingReader$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.ManifestValidatingReader", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlReader"), [$asm06.TypeRef("System.IO.Stream")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Create", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlReader"), [$asm06.TypeRef("System.IO.Stream"), $asm0E.TypeRef("System.Xml.Schema.XmlSchemaSet")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ManifestSchemaSet", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Xml.Schema.XmlSchemaSet"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MakeSchemaSet", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.Schema.XmlSchemaSet"), [$jsilcore.TypeRef("System.Array", [$.String])])
    );

    $.Field({Static:true , Public:false}, "_manifestSchemas", $jsilcore.TypeRef("System.Array", [$.String])); 
    $.Field({Static:true , Public:false}, "_manifestSchemaSet", $asm0E.TypeRef("System.Xml.Schema.XmlSchemaSet"), null); 
    $.Field({Static:true , Public:false}, "_manifestSchemaSetLock", $.Object); 
    $.Property({Static:true , Public:false}, "ManifestSchemaSet", $asm0E.TypeRef("System.Xml.Schema.XmlSchemaSet"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ManifestValidatingReader+ResourceResolver */ 

(function ResourceResolver$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Xml.XmlUrlResolver"), 
      Name: "System.Deployment.Application.ManifestValidatingReader+ResourceResolver", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Reflection.Assembly"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEntity", 
      new JSIL.MethodSignature($.Object, [
          $asm07.TypeRef("System.Uri"), $.String, 
          $asm06.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ResolveUri", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Uri"), [$asm07.TypeRef("System.Uri"), $.String])
    );

    $.Constant({Static:true , Public:false}, "Prefix", "df://resources/"); 
    $.Field({Static:false, Public:false}, "_assembly", $asm06.TypeRef("System.Reflection.Assembly")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ManifestValidatingReader+XmlFilteredReader */ 

(function XmlFilteredReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0E.TypeRef("System.Xml.XmlTextReader"), 
      Name: "System.Deployment.Application.ManifestValidatingReader+XmlFilteredReader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.Stream"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:true , Public:false}, "KnownNamespaces", $asm07.TypeRef("System.Collections.Specialized.StringCollection")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.NativeMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CloseHandle", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Runtime.InteropServices.HandleRef")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CoCreateInstance", 
      new JSIL.MethodSignature($.UInt32, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), $.Object, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CommitUrlCacheEntry", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.Int64, $.Int64, 
          $.UInt32, $.String, 
          $.Int32, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CorLaunchApplication", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.String, 
          $.Int32, $jsilcore.TypeRef("System.Array", [$.String]), 
          $.Int32, $jsilcore.TypeRef("System.Array", [$.String]), 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+PROCESS_INFORMATION")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateActCtxW", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+ACTCTXW")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateAssemblyCache", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache")]), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateAssemblyEnum", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyEnum")]), $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IApplicationContext"), 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyName"), $.UInt32, 
          $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateAssemblyNameObject", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyName")]), $.String, 
          $.UInt32, $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateFile", 
      new JSIL.MethodSignature($asm06.TypeRef("Microsoft.Win32.SafeHandles.SafeFileHandle"), [
          $.String, $.UInt32, 
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $.UInt32, $.UInt32, 
          $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateUrlCacheEntry", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $.String, $asm06.TypeRef("System.Text.StringBuilder"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "FindResource", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [
          $asm06.TypeRef("System.IntPtr"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "FreeLibrary", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.IntPtr")])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetAssemblyCacheInterface", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache"), [
          $.String, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAssemblyIdentityFromFile", 
      new JSIL.MethodSignature($.Object, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetClrMetaHost", 
      new JSIL.MethodSignature("!!0", null, ["T"])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetClrMetaHostPolicy", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IClrMetaHostPolicy")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetCurrentThreadId", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetFileVersion", 
      new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Text.StringBuilder"), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetLoadedModulePath", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetModuleFileName", 
      new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.Text.StringBuilder"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetModuleHandle", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetNativeSystemInfo", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+SYSTEM_INFO")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetRequestedRuntimeInfo", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.UInt32, 
          $.UInt32, $asm06.TypeRef("System.Text.StringBuilder"), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $asm06.TypeRef("System.Text.StringBuilder"), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetShortPathName", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $asm06.TypeRef("System.Text.StringBuilder"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetSystemInfo", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+SYSTEM_INFO")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "InternetGetCookieW", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $asm06.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "LoadLibraryEx", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $.UInt32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "LoadResource", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.IntPtr")])
    );

    $.ExternalMethod({Static:true , Public:true }, "LockResource", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$asm06.TypeRef("System.IntPtr")])
    );

    $.ExternalMethod({Static:true , Public:false}, "nCLRCreateInstance", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Guid"), $asm06.TypeRef("System.Guid")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ReleaseActCtx", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:true , Public:true }, "SHChangeNotify", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.UInt32, 
          $asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "SHCreateItemFromParsingName", 
      new JSIL.MethodSignature($.UInt32, [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $asm06.TypeRef("System.Guid"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "SizeofResource", 
      new JSIL.MethodSignature($.UInt32, [$asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.IntPtr")])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyCLRVersionInfo", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Version"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyVersionInfo", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+OSVersionInfoEx"), $.UInt32, 
          $.UInt64
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerSetConditionMask", 
      new JSIL.MethodSignature($.UInt64, [
          $.UInt64, $.UInt32, 
          $.Byte
        ])
    );

    $.Constant({Static:true , Public:true }, "PROCESSOR_ARCHITECTURE_INTEL", 0); 
    $.Constant({Static:true , Public:true }, "PROCESSOR_ARCHITECTURE_IA64", 6); 
    $.Constant({Static:true , Public:true }, "PROCESSOR_ARCHITECTURE_AMD64", 9); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "INVALID_HANDLE_VALUE", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:true , Public:false}, "_metaHostPolicyGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_clrRuntimeInfoGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_metaHostPolicyClsIdGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_corRuntimeHostClsIdGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_corRuntimeHostInterfaceIdGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_metaHostGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:false}, "_metaHostClsId", $asm06.TypeRef("System.Guid")); 
    function NativeMethods__cctor () {
      $thisType._metaHostPolicyGuid = new $asm06.System.Guid();
      $thisType._clrRuntimeInfoGuid = new $asm06.System.Guid();
      $thisType._metaHostPolicyClsIdGuid = new $asm06.System.Guid();
      $thisType._corRuntimeHostClsIdGuid = new $asm06.System.Guid();
      $thisType._corRuntimeHostInterfaceIdGuid = new $asm06.System.Guid();
      $thisType._metaHostGuid = new $asm06.System.Guid();
      $thisType._metaHostClsId = new $asm06.System.Guid();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      NativeMethods__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.NativeMethods+SYSTEM_INFO */ 

(function SYSTEM_INFO$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.NativeMethods+SYSTEM_INFO", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "uProcessorInfo", $asm0A.TypeRef("System.Deployment.Application.NativeMethods+_PROCESSOR_INFO_UNION")); 
    $.Field({Static:false, Public:true }, "dwPageSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "lpMinimumApplicationAddress", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "lpMaximumApplicationAddress", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "dwActiveProcessorMask", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "dwNumberOfProcessors", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwProcessorType", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwAllocationGranularity", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwProcessorLevel", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwProcessorRevision", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.NativeMethods+_PROCESSOR_INFO_UNION */ 

(function _PROCESSOR_INFO_UNION$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.NativeMethods+_PROCESSOR_INFO_UNION", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "dwOemId", $.UInt32); 
    $.Field({Static:false, Public:false}, "wProcessorArchitecture", $.UInt16); 
    $.Field({Static:false, Public:false}, "wReserved", $.UInt16); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.NativeMethods+OSVersionInfoEx */ 

(function OSVersionInfoEx$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.NativeMethods+OSVersionInfoEx", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "dwOSVersionInfoSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwMajorVersion", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwMinorVersion", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwBuildNumber", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwPlatformId", $.UInt32); 
    $.Field({Static:false, Public:true }, "szCSDVersion", $.String); 
    $.Field({Static:false, Public:true }, "wServicePackMajor", $.UInt16); 
    $.Field({Static:false, Public:true }, "wServicePackMinor", $.UInt16); 
    $.Field({Static:false, Public:true }, "wSuiteMask", $.UInt16); 
    $.Field({Static:false, Public:true }, "bProductType", $.Byte); 
    $.Field({Static:false, Public:true }, "bReserved", $.Byte); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.NativeMethods+GenericAccess */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+GenericAccess", false, {
    GENERIC_ALL: 268435456, 
    GENERIC_EXECUTE: 536870912, 
    GENERIC_WRITE: 1073741824, 
    GENERIC_READ: 2147483648
  }, true
);

/* enum System.Deployment.Application.NativeMethods+CreationDisposition */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+CreationDisposition", false, {
    CREATE_NEW: 1, 
    CREATE_ALWAYS: 2, 
    OPEN_EXISTING: 3, 
    OPEN_ALWAYS: 4, 
    TRUNCATE_EXISTING: 5
  }, false
);

/* enum System.Deployment.Application.NativeMethods+ShareMode */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+ShareMode", false, {
    FILE_SHARE_NONE: 0, 
    FILE_SHARE_READ: 1, 
    FILE_SHARE_WRITE: 2, 
    FILE_SHARE_DELETE: 4
  }, true
);

/* enum System.Deployment.Application.NativeMethods+FlagsAndAttributes */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+FlagsAndAttributes", false, {
    FILE_ATTRIBUTE_READONLY: 1, 
    FILE_ATTRIBUTE_HIDDEN: 2, 
    FILE_ATTRIBUTE_SYSTEM: 4, 
    FILE_ATTRIBUTE_DIRECTORY: 16, 
    FILE_ATTRIBUTE_ARCHIVE: 32, 
    FILE_ATTRIBUTE_DEVICE: 64, 
    FILE_ATTRIBUTE_NORMAL: 128, 
    FILE_ATTRIBUTE_TEMPORARY: 256, 
    FILE_ATTRIBUTE_SPARSE_FILE: 512, 
    FILE_ATTRIBUTE_REPARSE_POINT: 1024, 
    FILE_ATTRIBUTE_COMPRESSED: 2048, 
    FILE_ATTRIBUTE_OFFLINE: 4096, 
    FILE_ATTRIBUTE_NOT_CONTENT_INDEXED: 8192, 
    FILE_ATTRIBUTE_ENCRYPTED: 16384, 
    FILE_FLAG_FIRST_PIPE_INSTANCE: 524288, 
    FILE_FLAG_OPEN_NO_RECALL: 1048576, 
    FILE_FLAG_OPEN_REPARSE_POINT: 2097152, 
    FILE_FLAG_POSIX_SEMANTICS: 16777216, 
    FILE_FLAG_BACKUP_SEMANTICS: 33554432, 
    FILE_FLAG_DELETE_ON_CLOSE: 67108864, 
    FILE_FLAG_SEQUENTIAL_SCAN: 134217728, 
    FILE_FLAG_RANDOM_ACCESS: 268435456, 
    FILE_FLAG_NO_BUFFERING: 536870912, 
    FILE_FLAG_OVERLAPPED: 1073741824, 
    FILE_FLAG_WRITE_THROUGH: 2147483648
  }, true
);

/* enum System.Deployment.Application.NativeMethods+Win32Error */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+Win32Error", false, {
    ERROR_SUCCESS: 0, 
    ERROR_INVALID_FUNCTION: 1, 
    ERROR_FILE_NOT_FOUND: 2, 
    ERROR_PATH_NOT_FOUND: 3, 
    ERROR_TOO_MANY_OPEN_FILES: 4, 
    ERROR_ACCESS_DENIED: 5, 
    ERROR_INVALID_HANDLE: 6, 
    ERROR_NO_MORE_FILES: 18, 
    ERROR_NOT_READY: 21, 
    ERROR_SHARING_VIOLATION: 32, 
    ERROR_FILE_EXISTS: 80, 
    ERROR_INVALID_PARAMETER: 87, 
    ERROR_CALL_NOT_IMPLEMENTED: 120, 
    ERROR_ALREADY_EXISTS: 183, 
    ERROR_FILENAME_EXCED_RANGE: 206
  }, false
);

/* enum System.Deployment.Application.NativeMethods+HResults */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+HResults", false, {
    HRESULT_ERROR_REVISION_MISMATCH: -2147023590
  }, false
);

/* class System.Deployment.Application.NativeMethods+PROCESS_INFORMATION */ 

(function PROCESS_INFORMATION$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.NativeMethods+PROCESS_INFORMATION", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Close", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.ConstrainedExecution.ReliabilityContractAttribute"), function () { return [$asm06.System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, $asm06.System.Runtime.ConstrainedExecution.Cer.Success]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "hProcess", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "hThread", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "dwProcessId", $.Int32); 
    $.Field({Static:false, Public:true }, "dwThreadId", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Security.SuppressUnmanagedCodeSecurityAttribute"));

})();

/* struct System.Deployment.Application.NativeMethods+AssemblyInfoInternal */ 

(function AssemblyInfoInternal$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.NativeMethods+AssemblyInfoInternal", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "MaxPath", 1024); 
    $.Field({Static:false, Public:false}, "cbAssemblyInfo", $.Int32); 
    $.Field({Static:false, Public:false}, "assemblyFlags", $.Int32); 
    $.Field({Static:false, Public:false}, "assemblySizeInKB", $.Int64); 
    $.Field({Static:false, Public:false}, "currentAssemblyPathBuf", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "cchBuf", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Application.NativeMethods+IAssemblyCache */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IAssemblyCache", false, [], function ($) {
    $.Method({}, "UninstallAssembly", JSIL.MethodSignature.Void);
    $.Method({}, "QueryAssemblyInfo", new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+AssemblyInfoInternal")])
        ]));
    $.Method({}, "CreateAssemblyCacheItem", JSIL.MethodSignature.Void);
    $.Method({}, "CreateAssemblyScavenger", JSIL.MethodSignature.Void);
    $.Method({}, "InstallAssembly", JSIL.MethodSignature.Void);
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["e707dcde-d1cd-11d2-bab9-00c04f8eceae"]; });

/* delegate System.Deployment.Application.NativeMethods+CreateAssemblyCacheDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.NativeMethods+CreateAssemblyCacheDelegate", false, []);

/* enum System.Deployment.Application.NativeMethods+tagCOINITEE */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+tagCOINITEE", false, {
    COINITEE_DEFAULT: 0, 
    COINITEE_DLL: 1, 
    COINITEE_MAIN: 2
  }, false
);

/* delegate System.Deployment.Application.NativeMethods+CoInitializeEEDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.NativeMethods+CoInitializeEEDelegate", false, []);

/* interface System.Deployment.Application.NativeMethods+IAssemblyEnum */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IAssemblyEnum", false, [], function ($) {
    $.Method({}, "GetNextAssembly", new JSIL.MethodSignature($.Int32, [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IApplicationContext"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyName")]), 
          $.UInt32
        ]));
    $.Method({}, "Reset", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Clone", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["21b8916c-f28e-11d2-a473-00c04f8ef448"]; });

/* interface System.Deployment.Application.NativeMethods+IApplicationContext */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IApplicationContext", false, [], function ($) {
    $.Method({}, "SetContextNameObject", JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyName")));
    $.Method({}, "GetContextNameObject", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyName")])));
    $.Method({}, "Set", new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.UInt32, $.UInt32
        ]));
    $.Method({}, "Get", new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $.UInt32
        ]));
    $.Method({}, "GetDynamicDirectory", new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["7c23ff90-33af-11d3-95da-00a024a85b51"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Application.NativeMethods+IAssemblyName */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IAssemblyName", false, [], function ($) {
    $.Method({}, "SetProperty", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $.UInt32
        ]));
    $.Method({}, "GetProperty", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "Finalize", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "GetDisplayName", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $.UInt32
        ]));
    $.Method({}, "BindToObject", new JSIL.MethodSignature($.Int32, [
          $.Object, $.Object, 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IApplicationContext"), $.String, 
          $.Int64, $.Int32, 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetName", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
    $.Method({}, "GetVersion", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "IsEqual", new JSIL.MethodSignature($.Int32, [$.Type, $.UInt32]));
    $.Method({}, "Clone", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CD193BC0-B4BC-11d2-9833-00C04FC31D2E"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* enum System.Deployment.Application.NativeMethods+ASM_CACHE */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+ASM_CACHE", false, {
    ZAP: 1, 
    GAC: 2, 
    DOWNLOAD: 4
  }, false
);

/* enum System.Deployment.Application.NativeMethods+CreateAssemblyNameObjectFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+CreateAssemblyNameObjectFlags", false, {
    CANOF_DEFAULT: 0, 
    CANOF_PARSE_DISPLAY_NAME: 1
  }, false
);

/* class System.Deployment.Application.NativeMethods+ACTCTXW */ 

(function ACTCTXW$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.NativeMethods+ACTCTXW", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:true }, "cbSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwFlags", $.UInt32); 
    $.Field({Static:false, Public:true }, "lpSource", $.String); 
    $.Field({Static:false, Public:true }, "wProcessorArchitecture", $.UInt16); 
    $.Field({Static:false, Public:true }, "wLangId", $.UInt16); 
    $.Field({Static:false, Public:true }, "lpAssemblyDirectory", $.String); 
    $.Field({Static:false, Public:true }, "lpResourceName", $.String); 
    $.Field({Static:false, Public:true }, "lpApplicationName", $.String); 
    $.Field({Static:false, Public:true }, "hModule", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.NativeMethods+CacheEntryFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+CacheEntryFlags", false, {
    Normal: 1, 
    Sticky: 4, 
    Edited: 8, 
    TrackOffline: 16, 
    TrackOnline: 32, 
    Sparse: 65536, 
    Cookie: 1048576, 
    UrlHistory: 2097152
  }, false
);

/* interface System.Deployment.Application.NativeMethods+IEnumUnknown */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IEnumUnknown", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "Skip", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Type])));
  }, [])
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"))
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["00000100-0000-0000-C000-000000000046"]; });

/* interface System.Deployment.Application.NativeMethods+IClrRuntimeInfo */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IClrRuntimeInfo", false, [], function ($) {
    $.Method({}, "GetVersionString", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
    $.Method({}, "GetRuntimeDirectory", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Text.StringBuilder"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
    $.Method({}, "IsLoaded", new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "LoadErrorString", new JSIL.MethodSignature(null, [
          $.Int32, $asm06.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "LoadLibrary", new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$.String]));
    $.Method({}, "GetProcAddress", new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$.String]));
    $.Method({}, "GetInterface", new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Guid"), $asm06.TypeRef("System.Guid")]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["BD39D1D2-BA2F-486A-89B0-B4B0CB466891"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

/* enum System.Deployment.Application.NativeMethods+MetaHostPolicyFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+MetaHostPolicyFlags", false, {
    MetaHostPolicyHighCompatibility: 0, 
    MetaHostPolicyApplyUpgradePolicy: 8, 
    MetaHostPolicyEmulateExeLaunch: 15
  }, true
);

/* interface System.Deployment.Application.NativeMethods+IClrMetaHostPolicy */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IClrMetaHostPolicy", false, [], function ($) {
    $.Method({}, "GetRequestedRuntime", new JSIL.MethodSignature($.Object, [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+MetaHostPolicyFlags"), $.String, 
          $asm06.TypeRef("System.Runtime.InteropServices.ComTypes.IStream"), $asm06.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $asm06.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $asm06.TypeRef("System.Guid")
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["E2190695-77B2-492E-8E14-C4B3A7FDD593"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

/* interface System.Deployment.Application.NativeMethods+ICorRuntimeHost */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+ICorRuntimeHost", false, [], function ($) {
    $.Method({}, "CreateLogicalThreadState", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "DeleteLogicalThreadState", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "SwitchInLogicalThreadState", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "SwitchOutLogicalThreadState", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "LocksHeldByLogicalThread", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "MapFile", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])]));
    $.Method({}, "GetConfiguration", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "Start", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Stop", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "CreateDomain", new JSIL.MethodSignature($.Int32, [
          $.String, $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "GetDefaultDomain", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "EnumDomains", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])]));
    $.Method({}, "NextDomain", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "CloseEnum", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "CreateDomainEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.Object, 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "CreateDomainSetup", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "CreateEvidence", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "UnloadDomain", new JSIL.MethodSignature($.Int32, [$.Object]));
    $.Method({}, "CurrentDomain", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CB2F6722-AB3A-11d2-9C40-00C04FA30A3E"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Application.NativeMethods+CCorRuntimeHost */ 

(function CCorRuntimeHost$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.NativeMethods+CCorRuntimeHost", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IClrRuntimeInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ApplyPolicyInOtherRuntime", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindDelegatesToManualCOMPInvokeFunctionPointers", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "RuntimeHostInstance", $asm0A.TypeRef("System.Deployment.Application.NativeMethods+ICorRuntimeHost")); 
    $.Field({Static:false, Public:false}, "RuntimeHostPtr", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "CurrentDomainFnPtr", $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost+Host_CurrentDomain")); 
    $.Field({Static:false, Public:false}, "DomainObjectPtr", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "GetTypeFnPtr", $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost+AppDomain_GetType")); 
    $.Field({Static:false, Public:false}, "DomainTypePtr", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "InvokeMemberFnPtr", $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost+Type_InvokeMember")); 
    $.Field({Static:false, Public:false}, "fDelegatesBound", $.Boolean); 
    $.Field({Static:false, Public:false}, "ClrRuntimeInfoVersion", $.String); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.NativeMethods+CCorRuntimeHost+Host_CurrentDomain */ 

JSIL.MakeDelegate("System.Deployment.Application.NativeMethods+CCorRuntimeHost+Host_CurrentDomain", false, []);

/* delegate System.Deployment.Application.NativeMethods+CCorRuntimeHost+AppDomain_GetType */ 

JSIL.MakeDelegate("System.Deployment.Application.NativeMethods+CCorRuntimeHost+AppDomain_GetType", false, []);

/* delegate System.Deployment.Application.NativeMethods+CCorRuntimeHost+Type_InvokeMember */ 

JSIL.MakeDelegate("System.Deployment.Application.NativeMethods+CCorRuntimeHost+Type_InvokeMember", false, []);

/* struct System.Deployment.Application.NativeMethods+CCorRuntimeHost+VARIANT */ 

(function VARIANT$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.NativeMethods+CCorRuntimeHost+VARIANT", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "vt", $.UInt16); 
    $.Field({Static:false, Public:true }, "wReserved1", $.UInt16); 
    $.Field({Static:false, Public:true }, "wReserved2", $.UInt16); 
    $.Field({Static:false, Public:true }, "wReserved3", $.UInt16); 
    $.Field({Static:false, Public:true }, "data1", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "data2", $asm06.TypeRef("System.IntPtr")); 
    $.Constant({Static:true , Public:true }, "VT_UNKNOWN", 13); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Application.NativeMethods+IClrMetaHost */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IClrMetaHost", false, [], function ($) {
    $.Method({}, "GetRuntime", new JSIL.MethodSignature($.Object, [$.String, $asm06.TypeRef("System.Guid")]));
    $.Method({}, "GetVersionFromFile", new JSIL.MethodSignature(null, [
          $.String, $asm06.TypeRef("System.Text.StringBuilder"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "EnumerateInstalledRuntimes", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IEnumUnknown")));
    $.Method({}, "EnumerateLoadedRuntimes", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IEnumUnknown"), [$asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "Reserved01", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr")]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["D332DB9E-B9B3-4125-8207-A14884F53216"]; })
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

/* enum System.Deployment.Application.NativeMethods+SHChangeNotifyEventID */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+SHChangeNotifyEventID", false, {
    SHCNE_ASSOCCHANGED: 134217728
  }, false
);

/* enum System.Deployment.Application.NativeMethods+SHChangeNotifyFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+SHChangeNotifyFlags", false, {
    SHCNF_IDLIST: 0
  }, false
);

/* enum System.Deployment.Application.NativeMethods+SIGDN */ 

JSIL.MakeEnum(
  "System.Deployment.Application.NativeMethods+SIGDN", false, {
    NORMALDISPLAY: 0, 
    PARENTRELATIVEPARSING: 2147581953, 
    DESKTOPABSOLUTEPARSING: 2147647488, 
    PARENTRELATIVEEDITING: 2147684353, 
    DESKTOPABSOLUTEEDITING: 2147794944, 
    FILESYSPATH: 2147844096, 
    URL: 2147909632, 
    PARENTRELATIVEFORADDRESSBAR: 2147991553, 
    PARENTRELATIVE: 2148007937
  }, false
);

/* interface System.Deployment.Application.NativeMethods+IShellItem */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IShellItem", false, [], function ($) {
    $.Method({}, "BindToHandler", new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.Guid"), 
          $asm06.TypeRef("System.Guid"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])
        ]));
    $.Method({}, "GetParent", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Type])));
    $.Method({}, "GetDisplayName", new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.NativeMethods+SIGDN"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])]));
    $.Method({}, "GetAttributes", new JSIL.MethodSignature(null, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "Compare", new JSIL.MethodSignature(null, [
          $.Type, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["43826d1e-e718-42ee-bc55-a1e261c37bfe"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Application.NativeMethods+IStartMenuPinnedList */ 

JSIL.MakeInterface(
  "System.Deployment.Application.NativeMethods+IStartMenuPinnedList", false, [], function ($) {
    $.Method({}, "RemoveFromList", JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.NativeMethods+IShellItem")));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["4CD19ADA-25A5-4A32-B3B7-347BEE5BE36B"]; });

/* class System.Deployment.Application.PEStream */ 

(function PEStream$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.IO.Stream"), 
      Name: "System.Deployment.Application.PEStream", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructFromFile", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructPEImage", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "ConstructStream", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Flush", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanRead", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanSeek", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_CanWrite", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Id1ManifestId", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Id1ManifestLanguageId", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsImageFileDll", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Length", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "GetDefaultId1ManifestResource", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetId1ManifestResource", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceData"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetManifestResource", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.UInt16, $.UInt16])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "RetrieveResource", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), [$jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:false}, "RetrieveResource", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), [
          $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceDirectory"), $jsilcore.TypeRef("System.Array", [$.Object]), 
          $.UInt32
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Seek", 
      new JSIL.MethodSignature($.Int64, [$.Int64, $asm06.TypeRef("System.IO.SeekOrigin")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SetLength", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Write", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ZeroOutDefaultId1ManifestResource", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ZeroOutManifestResource", 
      new JSIL.MethodSignature(null, [$.UInt16, $.UInt16])
    );

    $.ExternalMethod({Static:false, Public:true }, "ZeroOutOptionalHeaderCheckSum", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "_id1ManifestId", 1); 
    $.Constant({Static:true , Public:false}, "_id1ManifestLanguageId", 1033); 
    $.Constant({Static:true , Public:false}, "IMAGE_DOS_SIGNATURE", 23117); 
    $.Constant({Static:true , Public:false}, "IMAGE_NT_SIGNATURE", 17744); 
    $.Constant({Static:true , Public:false}, "IMAGE_NT_OPTIONAL_HDR32_MAGIC", 267); 
    $.Constant({Static:true , Public:false}, "IMAGE_NT_OPTIONAL_HDR64_MAGIC", 523); 
    $.Constant({Static:true , Public:false}, "IMAGE_NUMBEROF_DIRECTORY_ENTRIES", 16); 
    $.Constant({Static:true , Public:false}, "IMAGE_FILE_DLL", 8192); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_EXPORT", 0); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_IMPORT", 1); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_RESOURCE", 2); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_EXCEPTION", 3); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_SECURITY", 4); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_BASERELOC", 5); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_DEBUG", 6); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_ARCHITECTURE", 7); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_GLOBALPTR", 8); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_TLS", 9); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG", 10); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT", 11); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_IAT", 12); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT", 13); 
    $.Constant({Static:true , Public:false}, "IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR", 14); 
    $.Constant({Static:true , Public:false}, "IMAGE_RESOURCE_NAME_IS_STRING", 2147483648); 
    $.Constant({Static:true , Public:false}, "IMAGE_RESOURCE_DATA_IS_DIRECTORY", 2147483648); 
    $.Constant({Static:true , Public:false}, "ManifestDirId", 24); 
    $.Constant({Static:true , Public:false}, "ErrorBadFormat", 11); 
    $.Field({Static:false, Public:false}, "_canRead", $.Boolean); 
    $.Field({Static:false, Public:false}, "_canSeek", $.Boolean); 
    $.Field({Static:false, Public:false}, "_peFile", $asm06.TypeRef("System.IO.FileStream")); 
    $.Field({Static:false, Public:false}, "_length", $.Int64); 
    $.Field({Static:false, Public:false}, "_position", $.Int64); 
    $.Field({Static:false, Public:false}, "_streamComponents", $asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList")); 
    $.Field({Static:false, Public:false}, "_dosHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+DosHeader")); 
    $.Field({Static:false, Public:false}, "_dosStub", $asm0A.TypeRef("System.Deployment.Application.PEStream+DosStub")); 
    $.Field({Static:false, Public:false}, "_ntSignature", $asm0A.TypeRef("System.Deployment.Application.PEStream+NtSignature")); 
    $.Field({Static:false, Public:false}, "_fileHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+FileHeader")); 
    $.Field({Static:false, Public:false}, "_optionalHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+OptionalHeader")); 
    $.Field({Static:false, Public:false}, "_dataDirectories", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_sectionHeaders", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_sections", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Field({Static:false, Public:false}, "_resourceSection", $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceSection")); 
    $.Field({Static:false, Public:false}, "_partialConstruct", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "CanRead", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanSeek", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "CanWrite", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "Length", $.Int64);

    $.Property({Static:false, Public:true , Virtual:true }, "Position", $.Int64);

    $.Property({Static:false, Public:true }, "IsImageFileDll", $.Boolean);

    $.Property({Static:true , Public:true }, "Id1ManifestId", $.UInt16);

    $.Property({Static:true , Public:true }, "Id1ManifestLanguageId", $.UInt16);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+StreamComponentList */ 

(function StreamComponentList$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Collections.ArrayList"), 
      Name: "System.Deployment.Application.PEStream+StreamComponentList", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature($.Int32, [$asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+PEComponentComparer */ 

(function PEComponentComparer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.PEStream+PEComponentComparer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.Object, $.Object])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IComparer")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_DOS_HEADER */ 

(function IMAGE_DOS_HEADER$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_DOS_HEADER", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "e_magic", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_cblp", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_cp", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_crlc", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_cparhdr", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_minalloc", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_maxalloc", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_ss", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_sp", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_csum", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_ip", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_cs", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_lfarlc", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_ovno", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_res", $jsilcore.TypeRef("System.Array", [$.UInt16])); 
    $.Field({Static:false, Public:true }, "e_oemid", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_oeminfo", $.UInt16); 
    $.Field({Static:false, Public:true }, "e_res2", $jsilcore.TypeRef("System.Array", [$.UInt16])); 
    $.Field({Static:false, Public:true }, "e_lfanew", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_FILE_HEADER */ 

(function IMAGE_FILE_HEADER$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_FILE_HEADER", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Machine", $.UInt16); 
    $.Field({Static:false, Public:true }, "NumberOfSections", $.UInt16); 
    $.Field({Static:false, Public:true }, "TimeDateStamp", $.UInt32); 
    $.Field({Static:false, Public:true }, "PointerToSymbolTable", $.UInt32); 
    $.Field({Static:false, Public:true }, "NumberOfSymbols", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfOptionalHeader", $.UInt16); 
    $.Field({Static:false, Public:true }, "Characteristics", $.UInt16); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER32 */ 

(function IMAGE_OPTIONAL_HEADER32$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER32", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Magic", $.UInt16); 
    $.Field({Static:false, Public:true }, "MajorLinkerVersion", $.Byte); 
    $.Field({Static:false, Public:true }, "MinorLinkerVersion", $.Byte); 
    $.Field({Static:false, Public:true }, "SizeOfCode", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfInitializedData", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfUninitializedData", $.UInt32); 
    $.Field({Static:false, Public:true }, "AddressOfEntryPoint", $.UInt32); 
    $.Field({Static:false, Public:true }, "BaseOfCode", $.UInt32); 
    $.Field({Static:false, Public:true }, "BaseOfData", $.UInt32); 
    $.Field({Static:false, Public:true }, "ImageBase", $.UInt32); 
    $.Field({Static:false, Public:true }, "SectionAlignment", $.UInt32); 
    $.Field({Static:false, Public:true }, "FileAlignment", $.UInt32); 
    $.Field({Static:false, Public:true }, "MajorOperatingSystemVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MinorOperatingSystemVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MajorImageVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MinorImageVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MajorSubsystemVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MinorSubsystemVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "Win32VersionValue", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfImage", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfHeaders", $.UInt32); 
    $.Field({Static:false, Public:true }, "CheckSum", $.UInt32); 
    $.Field({Static:false, Public:true }, "Subsystem", $.UInt16); 
    $.Field({Static:false, Public:true }, "DllCharacteristics", $.UInt16); 
    $.Field({Static:false, Public:true }, "SizeOfStackReserve", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfStackCommit", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfHeapReserve", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfHeapCommit", $.UInt32); 
    $.Field({Static:false, Public:true }, "LoaderFlags", $.UInt32); 
    $.Field({Static:false, Public:true }, "NumberOfRvaAndSizes", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER64 */ 

(function IMAGE_OPTIONAL_HEADER64$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER64", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "Magic", $.UInt16); 
    $.Field({Static:false, Public:false}, "MajorLinkerVersion", $.Byte); 
    $.Field({Static:false, Public:false}, "MinorLinkerVersion", $.Byte); 
    $.Field({Static:false, Public:false}, "SizeOfCode", $.UInt32); 
    $.Field({Static:false, Public:false}, "SizeOfInitializedData", $.UInt32); 
    $.Field({Static:false, Public:false}, "SizeOfUninitializedData", $.UInt32); 
    $.Field({Static:false, Public:false}, "AddressOfEntryPoint", $.UInt32); 
    $.Field({Static:false, Public:false}, "BaseOfCode", $.UInt32); 
    $.Field({Static:false, Public:false}, "ImageBase", $.UInt64); 
    $.Field({Static:false, Public:false}, "SectionAlignment", $.UInt32); 
    $.Field({Static:false, Public:false}, "FileAlignment", $.UInt32); 
    $.Field({Static:false, Public:false}, "MajorOperatingSystemVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "MinorOperatingSystemVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "MajorImageVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "MinorImageVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "MajorSubsystemVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "MinorSubsystemVersion", $.UInt16); 
    $.Field({Static:false, Public:false}, "Win32VersionValue", $.UInt32); 
    $.Field({Static:false, Public:false}, "SizeOfImage", $.UInt32); 
    $.Field({Static:false, Public:false}, "SizeOfHeaders", $.UInt32); 
    $.Field({Static:false, Public:false}, "CheckSum", $.UInt32); 
    $.Field({Static:false, Public:false}, "Subsystem", $.UInt16); 
    $.Field({Static:false, Public:false}, "DllCharacteristics", $.UInt16); 
    $.Field({Static:false, Public:false}, "SizeOfStackReserve", $.UInt64); 
    $.Field({Static:false, Public:false}, "SizeOfStackCommit", $.UInt64); 
    $.Field({Static:false, Public:false}, "SizeOfHeapReserve", $.UInt64); 
    $.Field({Static:false, Public:false}, "SizeOfHeapCommit", $.UInt64); 
    $.Field({Static:false, Public:false}, "LoaderFlags", $.UInt32); 
    $.Field({Static:false, Public:false}, "NumberOfRvaAndSizes", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_DATA_DIRECTORY */ 

(function IMAGE_DATA_DIRECTORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_DATA_DIRECTORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "VirtualAddress", $.UInt32); 
    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_SECTION_HEADER */ 

(function IMAGE_SECTION_HEADER$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_SECTION_HEADER", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Name", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:true }, "VirtualSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "VirtualAddress", $.UInt32); 
    $.Field({Static:false, Public:true }, "SizeOfRawData", $.UInt32); 
    $.Field({Static:false, Public:true }, "PointerToRawData", $.UInt32); 
    $.Field({Static:false, Public:true }, "PointerToRelocations", $.UInt32); 
    $.Field({Static:false, Public:true }, "PointerToLinenumbers", $.UInt32); 
    $.Field({Static:false, Public:true }, "NumberOfRelocations", $.UInt16); 
    $.Field({Static:false, Public:true }, "NumberOfLinenumbers", $.UInt16); 
    $.Field({Static:false, Public:true }, "Characteristics", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY */ 

(function IMAGE_RESOURCE_DIRECTORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Characteristics", $.UInt32); 
    $.Field({Static:false, Public:true }, "TimeDateStamp", $.UInt32); 
    $.Field({Static:false, Public:true }, "MajorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MinorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "NumberOfNamedEntries", $.UInt16); 
    $.Field({Static:false, Public:true }, "NumberOfIdEntries", $.UInt16); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_RESOURCE_DATA_ENTRY */ 

(function IMAGE_RESOURCE_DATA_ENTRY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_RESOURCE_DATA_ENTRY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "OffsetToData", $.UInt32); 
    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "CodePage", $.UInt32); 
    $.Field({Static:false, Public:true }, "Reserved", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY_ENTRY */ 

(function IMAGE_RESOURCE_DIRECTORY_ENTRY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY_ENTRY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Name", $.UInt32); 
    $.Field({Static:false, Public:true }, "OffsetToData", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+PEComponent */ 

(function PEComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.PEStream+PEComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $.Int64
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CalculateSize", 
      new JSIL.MethodSignature($.Int64, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Address", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int64, $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadData", 
      new JSIL.MethodSignature($.Object, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $asm06.TypeRef("System.Type")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ToByteArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.Object])
    );

    $.Field({Static:false, Public:false}, "_address", $.Int64); 
    $.Field({Static:false, Public:false}, "_size", $.Int64); 
    $.Field({Static:false, Public:false}, "_data", $.Object); 
    $.Property({Static:false, Public:true }, "Address", $.Int64);

    $.Property({Static:false, Public:true }, "Size", $.Int64);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+DosHeader */ 

(function DosHeader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+DosHeader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IO.FileStream"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NtHeaderPosition", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.Field({Static:false, Public:false}, "_dosHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_DOS_HEADER")); 
    $.Property({Static:false, Public:true }, "NtHeaderPosition", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+DosStub */ 

(function DosStub$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+DosStub", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $.Int64
        ])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+NtSignature */ 

(function NtSignature$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+NtSignature", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+FileHeader */ 

(function FileHeader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+FileHeader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsImageFileDll", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NumberOfSections", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SizeOfOptionalHeader", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.Field({Static:false, Public:false}, "_fileHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_FILE_HEADER")); 
    $.Property({Static:false, Public:true }, "SizeOfOptionalHeader", $.UInt16);

    $.Property({Static:false, Public:true }, "NumberOfSections", $.UInt16);

    $.Property({Static:false, Public:true }, "IsImageFileDll", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+OptionalHeader */ 

(function OptionalHeader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+OptionalHeader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NumberOfRvaAndSizes", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_CheckSum", 
      JSIL.MethodSignature.Action($.UInt32)
    );

    $.Field({Static:false, Public:false}, "_optionalHeader32", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER32")); 
    $.Field({Static:false, Public:false}, "_optionalHeader64", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_OPTIONAL_HEADER64")); 
    $.Field({Static:false, Public:false}, "_is64Bit", $.Boolean); 
    $.Property({Static:false, Public:true }, "CheckSum", $.UInt32);

    $.Property({Static:false, Public:true }, "NumberOfRvaAndSizes", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+DataDirectory */ 

(function DataDirectory$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+DataDirectory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VirtualAddress", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.Field({Static:false, Public:false}, "_dataDirectory", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_DATA_DIRECTORY")); 
    $.Property({Static:false, Public:true }, "VirtualAddress", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+SectionHeader */ 

(function SectionHeader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+SectionHeader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PointerToRawData", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SizeOfRawData", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VirtualAddress", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Section", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+Section"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_imageSectionHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_SECTION_HEADER")); 
    $.Field({Static:false, Public:false}, "_section", $asm0A.TypeRef("System.Deployment.Application.PEStream+Section")); 
    $.Property({Static:false, Public:true }, "Section", $asm0A.TypeRef("System.Deployment.Application.PEStream+Section"));

    $.Property({Static:false, Public:true }, "VirtualAddress", $.UInt32);

    $.Property({Static:false, Public:true }, "PointerToRawData", $.UInt32);

    $.Property({Static:false, Public:true }, "SizeOfRawData", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+Section */ 

(function Section$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+Section", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $asm0A.TypeRef("System.Deployment.Application.PEStream+SectionHeader")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddComponentsToStream", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList"))
    );

    $.Field({Static:false, Public:true }, "_sectionHeader", $asm0A.TypeRef("System.Deployment.Application.PEStream+SectionHeader")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceComponent */ 

(function ResourceComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+PEComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddComponentsToStream", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList"))
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceDirectory */ 

(function ResourceDirectory$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceDirectory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 6, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceSection"), $asm06.TypeRef("System.IO.FileStream"), 
          $.Int64, $.Int64, 
          $.Int64, $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddComponentsToStream", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ResourceComponentCount", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetResourceComponent", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), [$.Int32])
    );

    $.Field({Static:false, Public:false}, "_imageResourceDirectory", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY")); 
    $.Field({Static:false, Public:false}, "_resourceDirectoryItems", $asm06.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_resourceDirectoryEntries", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Property({Static:false, Public:true }, "Item", $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"));

    $.Property({Static:false, Public:true }, "ResourceComponentCount", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.Deployment.Application.PEStream+ResourceDirectoryEntry */ 

(function ResourceDirectoryEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceDirectoryEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Id", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDirectory", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Key", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_NameIsString", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NameOffset", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_OffsetToData", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Key", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_imageResourceDirectoryEntry", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_RESOURCE_DIRECTORY_ENTRY")); 
    $.Field({Static:false, Public:false}, "_key", $.Object); 
    $.Property({Static:false, Public:true }, "NameOffset", $.Int64);

    $.Property({Static:false, Public:true }, "NameIsString", $.Boolean);

    $.Property({Static:false, Public:true }, "Id", $.UInt16);

    $.Property({Static:false, Public:true }, "OffsetToData", $.Int64);

    $.Property({Static:false, Public:true }, "IsDirectory", $.Boolean);

    $.Property({Static:false, Public:true }, "Key", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceDirectoryString */ 

(function ResourceDirectoryString$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceDirectoryString", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_NameString", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_length", $.UInt16); 
    $.Field({Static:false, Public:false}, "_nameStringBuffer", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.Field({Static:false, Public:false}, "_nameString", $.String); 
    $.Property({Static:false, Public:true }, "NameString", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceData */ 

(function ResourceData$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $.Int64, $.Int64
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddComponentsToStream", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Data", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ZeroData", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_resourceDataEntry", $asm0A.TypeRef("System.Deployment.Application.PEStream+IMAGE_RESOURCE_DATA_ENTRY")); 
    $.Field({Static:false, Public:false}, "_resourceRawData", $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceRawData")); 
    $.Property({Static:false, Public:true }, "Data", $jsilcore.TypeRef("System.Array", [$.Byte]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceRawData */ 

(function ResourceRawData$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceComponent"), 
      Name: "System.Deployment.Application.PEStream+ResourceRawData", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $.Int64
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Data", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Byte]))
    );

    $.ExternalMethod({Static:false, Public:true }, "ZeroData", 
      JSIL.MethodSignature.Void
    );

    $.Property({Static:false, Public:true }, "Data", $jsilcore.TypeRef("System.Array", [$.Byte]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+ResourceSection */ 

(function ResourceSection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+Section"), 
      Name: "System.Deployment.Application.PEStream+ResourceSection", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $asm0A.TypeRef("System.Deployment.Application.PEStream+SectionHeader"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "AddComponentsToStream", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.PEStream+StreamComponentList"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CreateResourceDirectoryString", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceDirectoryString"), [$asm06.TypeRef("System.IO.FileStream"), $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RootResourceDirectory", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceDirectory"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_resourceDirectory", $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceDirectory")); 
    $.Field({Static:false, Public:false}, "_resourceDirectoryStrings", $asm06.TypeRef("System.Collections.ArrayList")); 
    $.Property({Static:false, Public:true }, "RootResourceDirectory", $asm0A.TypeRef("System.Deployment.Application.PEStream+ResourceDirectory"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+DataComponent */ 

(function DataComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.PEStream+DataComponent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int64, $.Int32
        ])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+DiskDataBlock */ 

(function DiskDataBlock$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+DataComponent"), 
      Name: "System.Deployment.Application.PEStream+DiskDataBlock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IO.FileStream"), $.Int64, 
          $.Int64
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int64, $.Int32
        ])
    );

    $.Field({Static:false, Public:true }, "_address", $.Int64); 
    $.Field({Static:false, Public:true }, "_size", $.Int64); 
    $.Field({Static:false, Public:true }, "_file", $asm06.TypeRef("System.IO.FileStream")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PEStream+BlankDataBlock */ 

(function BlankDataBlock$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PEStream+DataComponent"), 
      Name: "System.Deployment.Application.PEStream+BlankDataBlock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Read", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int64, $.Int32
        ])
    );

    $.Field({Static:false, Public:true }, "_size", $.Int64); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformDetector */ 

(function PlatformDetector$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.PlatformDetector", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "CheckCompatibleFramework", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.CompatibleFramework"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Version")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DetectFrameworkInRegistry", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $asm06.TypeRef("System.Version"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DetectTFMInRegistry", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "FormatFrameworkString", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Application.CompatibleFramework")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetPlatformNetFx35SKU", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PlatformDetector+NetFX35SP1SKU"), [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache"), $.Boolean, 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsCLRDependencyText", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNetFX35SP1ClientSignatureAsm", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNetFX35SP1FullSignatureAsm", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsSupportedProcessorArchitecture", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsWin8orLater", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyGACDependency", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache"), $.Boolean, 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost"), $asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyGACDependencyWhidbey", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache"), $.Boolean, 
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+CCorRuntimeHost"), $asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyGACDependencyXP", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.ReferenceIdentity"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyOSDependency", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.PlatformDetector+OSDependency")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "VerifyPlatformDependencies", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String
        ])
    );

    $.Field({Static:true , Public:false}, "Suites", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.PlatformDetector+Suite")])); 
    $.Field({Static:true , Public:false}, "Products", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Application.PlatformDetector+Product")])); 
    $.Constant({Static:true , Public:false}, "MAX_PATH", 260); 
    $.Constant({Static:true , Public:false}, "VER_EQUAL", 1); 
    $.Constant({Static:true , Public:false}, "VER_GREATER", 2); 
    $.Constant({Static:true , Public:false}, "VER_GREATER_EQUAL", 3); 
    $.Constant({Static:true , Public:false}, "VER_LESS", 4); 
    $.Constant({Static:true , Public:false}, "VER_LESS_EQUAL", 5); 
    $.Constant({Static:true , Public:false}, "VER_AND", 6); 
    $.Constant({Static:true , Public:false}, "VER_OR", 7); 
    $.Constant({Static:true , Public:false}, "VER_MINORVERSION", 1); 
    $.Constant({Static:true , Public:false}, "VER_MAJORVERSION", 2); 
    $.Constant({Static:true , Public:false}, "VER_BUILDNUMBER", 4); 
    $.Constant({Static:true , Public:false}, "VER_PLATFORMID", 8); 
    $.Constant({Static:true , Public:false}, "VER_SERVICEPACKMINOR", 16); 
    $.Constant({Static:true , Public:false}, "VER_SERVICEPACKMAJOR", 32); 
    $.Constant({Static:true , Public:false}, "VER_SUITENAME", 64); 
    $.Constant({Static:true , Public:false}, "VER_PRODUCT_TYPE", 128); 
    $.Constant({Static:true , Public:false}, "VER_SERVER_NT", 2147483648); 
    $.Constant({Static:true , Public:false}, "VER_WORKSTATION_NT", 1073741824); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_SMALLBUSINESS", 1); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_ENTERPRISE", 2); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_BACKOFFICE", 4); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_COMMUNICATIONS", 8); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_TERMINAL", 16); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_SMALLBUSINESS_RESTRICTED", 32); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_EMBEDDEDNT", 64); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_DATACENTER", 128); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_SINGLEUSERTS", 256); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_PERSONAL", 512); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_BLADE", 1024); 
    $.Constant({Static:true , Public:false}, "VER_SUITE_EMBEDDED_RESTRICTED", 2048); 
    $.Constant({Static:true , Public:false}, "VER_NT_WORKSTATION", 1); 
    $.Constant({Static:true , Public:false}, "VER_NT_DOMAIN_CONTROLLER", 2); 
    $.Constant({Static:true , Public:false}, "VER_NT_SERVER", 3); 
    $.Constant({Static:true , Public:false}, "Windows9XMajorVersion", 4); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_UPGRADE_VERSION", 1); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_REQUEST_IA64", 2); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_REQUEST_AMD64", 4); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_REQUEST_X86", 8); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_DONT_RETURN_DIRECTORY", 16); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_DONT_RETURN_VERSION", 32); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_DONT_SHOW_ERROR_DIALOG", 64); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_CONSIDER_POST_2_0", 128); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_EMULATE_EXE_LAUNCH", 256); 
    $.Constant({Static:true , Public:false}, "RUNTIME_INFO_DONT_SHOW_INSTALL_DIALOG", 65536); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformDetector+OSDependency */ 

(function OSDependency$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.PlatformDetector+OSDependency", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $.UInt32, $.UInt16, 
          $.UInt16, $.String, 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.NativeMethods+OSVersionInfoEx"))
    );

    $.Field({Static:false, Public:true }, "dwMajorVersion", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwMinorVersion", $.UInt32); 
    $.Field({Static:false, Public:true }, "dwBuildNumber", $.UInt32); 
    $.Field({Static:false, Public:true }, "wServicePackMajor", $.UInt16); 
    $.Field({Static:false, Public:true }, "wServicePackMinor", $.UInt16); 
    $.Field({Static:false, Public:true }, "suiteName", $.String); 
    $.Field({Static:false, Public:true }, "productName", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformDetector+NameMap */ 

(function NameMap$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.PlatformDetector+NameMap", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.UInt32])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "MapMaskToName", 
      new JSIL.MethodSignature($.String, [$.UInt32, $jsilcore.TypeRef("System.Array", [$.Type])])
    );

    $.ExternalMethod({Static:true , Public:true }, "MapNameToMask", 
      new JSIL.MethodSignature($.UInt32, [$.String, $jsilcore.TypeRef("System.Array", [$.Type])])
    );

    $.Field({Static:false, Public:true }, "$name", $.String); 
    $.Field({Static:false, Public:true }, "mask", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformDetector+Suite */ 

(function Suite$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PlatformDetector+NameMap"), 
      Name: "System.Deployment.Application.PlatformDetector+Suite", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.UInt32])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformDetector+Product */ 

(function Product$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.PlatformDetector+NameMap"), 
      Name: "System.Deployment.Application.PlatformDetector+Product", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.UInt32])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.PlatformDetector+NetFX35SP1SKU */ 

JSIL.MakeEnum(
  "System.Deployment.Application.PlatformDetector+NetFX35SP1SKU", false, {
    No35SP1: 0, 
    Client35SP1: 1, 
    Full35SP1: 2
  }, false
);

/* class System.Deployment.Application.PlatformPiece */ 

(function PlatformPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ModalPiece"), 
      Name: "System.Deployment.Application.PlatformPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $.String, 
          $asm07.TypeRef("System.Uri"), $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnOk_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "linkSupport_LinkClicked", 
      new JSIL.MethodSignature(null, [$.Object, $asm0D.TypeRef("System.Windows.Forms.LinkLabelLinkClickedEventArgs")])
    );

    $.Field({Static:false, Public:false}, "lblMessage", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "pictureIcon", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "linkSupport", $asm0D.TypeRef("System.Windows.Forms.LinkLabel")); 
    $.Field({Static:false, Public:false}, "btnOk", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "_errorMessage", $.String); 
    $.Field({Static:false, Public:false}, "_supportUrl", $asm07.TypeRef("System.Uri")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PlatformSpecific */ 

(function PlatformSpecific$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.PlatformSpecific", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "get_OnVistaOrAbove", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_OnWin9x", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_OnWindows2003", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_OnWinMe", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_OnXPOrAbove", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Property({Static:true , Public:true }, "OnWin9x", $.Boolean);

    $.Property({Static:true , Public:true }, "OnWinMe", $.Boolean);

    $.Property({Static:true , Public:true }, "OnXPOrAbove", $.Boolean);

    $.Property({Static:true , Public:true }, "OnWindows2003", $.Boolean);

    $.Property({Static:true , Public:true }, "OnVistaOrAbove", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ProgressPiece */ 

(function ProgressPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.FormPiece"), 
      Name: "System.Deployment.Application.ProgressPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnCancel_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Disable", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DownloadCompleted", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "DownloadModified", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FormatBytes", 
      new JSIL.MethodSignature($.String, [$.Int64])
    );

    $.ExternalMethod({Static:true , Public:false}, "FormatProgressText", 
      new JSIL.MethodSignature($.String, [$.Int64, $.Int64])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "linkAppId_LinkClicked", 
      new JSIL.MethodSignature(null, [$.Object, $asm0D.TypeRef("System.Windows.Forms.LinkLabelLinkClickedEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGet32x32Bitmap", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Drawing.Bitmap"), [$asm0B.TypeRef("System.Drawing.Icon")])
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateUI", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "lblHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "lblSubHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "pictureDesktop", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "pictureAppIcon", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "lblApplication", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "linkAppId", $asm0D.TypeRef("System.Windows.Forms.LinkLabel")); 
    $.Field({Static:false, Public:false}, "lblFrom", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "lblFromId", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "progress", $asm0D.TypeRef("System.Windows.Forms.ProgressBar")); 
    $.Field({Static:false, Public:false}, "lblProgressText", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "groupRule", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "groupDivider", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "btnCancel", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "topTextTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "contentTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "_info", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")); 
    $.Field({Static:false, Public:false}, "_userCancelling", $.Boolean); 
    $.Field({Static:false, Public:false}, "_downloadData", $asm0A.TypeRef("System.Deployment.Application.DownloadEventArgs")); 
    $.Field({Static:false, Public:false}, "_appIconBitmap", $asm0B.TypeRef("System.Drawing.Bitmap")); 
    $.Field({Static:false, Public:false}, "_appIconShown", $.Boolean); 
    $.Field({Static:false, Public:false}, "_parentForm", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm")); 
    $.Field({Static:false, Public:false}, "disableMethodInvoker", $asm0D.TypeRef("System.Windows.Forms.MethodInvoker")); 
    $.Field({Static:false, Public:false}, "updateUIMethodInvoker", $asm0D.TypeRef("System.Windows.Forms.MethodInvoker")); 
    $.Field({Static:true , Public:false}, "_bytesFormatRanges", $jsilcore.TypeRef("System.Array", [$.Int64])); 
    $.Field({Static:true , Public:false}, "_bytesFormatStrings", $jsilcore.TypeRef("System.Array", [$.String])); 
    $.ImplementInterfaces(
      /* 20 */ $asm0A.TypeRef("System.Deployment.Application.IDownloadNotification")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Deployment.Internal.CodeSigning");
/* class System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription */ 

(function RSAPKCS1SHA256SignatureDescription$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Security.Cryptography.SignatureDescription"), 
      Name: "System.Deployment.Internal.CodeSigning.RSAPKCS1SHA256SignatureDescription", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateDeformatter", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Cryptography.AsymmetricSignatureDeformatter"), [$asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "CreateFormatter", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Security.Cryptography.AsymmetricSignatureFormatter"), [$asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ShellExposure */ 

(function ShellExposure$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.ShellExposure", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AddFileAssociation", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm07.TypeRef("System.Uri")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "AddShellExtensions", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), $asm07.TypeRef("System.Uri"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CanAddFileAssociation", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateAppShortcut", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateArpKeyName", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GenerateSupportShortcut", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation")])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UninstallRoot", 
      JSIL.MethodSignature.Return($asm06.TypeRef("Microsoft.Win32.RegistryKey"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MoveDeleteEmptyFolder", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "MoveDeleteFile", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "ParseAppShortcut", 
      new JSIL.MethodSignature(null, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Uri")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveArpEntry", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveFileAssociation", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveFileAssociationCLSIDInfo", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("Microsoft.Win32.RegistryKey"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveFileAssociationExtentionInfo", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("Microsoft.Win32.RegistryKey"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveFileAssociationProgIDInfo", 
      new JSIL.MethodSignature($.String, [
          $asm0A.TypeRef("System.Deployment.Application.Manifest.FileAssociation"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("Microsoft.Win32.RegistryKey"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemovePins", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:true , Public:true }, "RemoveShellExtensions", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveShortcuts", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation"))
    );

    $.ExternalMethod({Static:true , Public:true }, "RemoveSubscriptionShellExposure", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UnpinShortcut", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateArpEntry", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation")])
    );

    $.ExternalMethod({Static:true , Public:true }, "UpdateShellExtensions", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "UpdateShortcuts", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.ShellExposure+ShellExposureInformation")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "UpdateSubscriptionShellExposure", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.Property({Static:true , Public:false}, "UninstallRoot", $asm06.TypeRef("Microsoft.Win32.RegistryKey"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.ShellExposure+ShellExposureInformation */ 

(function ShellExposureInformation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.ShellExposure+ShellExposureInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "CreateShellExposureInformation", 
      new JSIL.MethodSignature($.Type, [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CreateShellExposureInformation", 
      new JSIL.MethodSignature($.Type, [
          $.String, $.String, 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationFolderPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationRootFolderPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ApplicationShortcutPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AppProduct", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AppSuiteName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AppSupportShortcut", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_AppVendor", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ARPDisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DesktopShortcutPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_ShortcutAppId", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SupportShortcutPath", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "set_ShortcutAppId", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_applicationFolderPath", $.String); 
    $.Field({Static:false, Public:false}, "_applicationRootFolderPath", $.String); 
    $.Field({Static:false, Public:false}, "_applicationShortcutPath", $.String); 
    $.Field({Static:false, Public:false}, "_desktopShortcutPath", $.String); 
    $.Field({Static:false, Public:false}, "_supportShortcutPath", $.String); 
    $.Field({Static:false, Public:false}, "_appVendor", $.String); 
    $.Field({Static:false, Public:false}, "_appProduct", $.String); 
    $.Field({Static:false, Public:false}, "_appSuiteName", $.String); 
    $.Field({Static:false, Public:false}, "_appSupportShortcut", $.String); 
    $.Field({Static:false, Public:false}, "_shortcutAppId", $.String); 
    $.Property({Static:false, Public:true }, "ApplicationFolderPath", $.String);

    $.Property({Static:false, Public:true }, "ApplicationRootFolderPath", $.String);

    $.Property({Static:false, Public:true }, "ApplicationShortcutPath", $.String);

    $.Property({Static:false, Public:true }, "SupportShortcutPath", $.String);

    $.Property({Static:false, Public:true }, "DesktopShortcutPath", $.String);

    $.Property({Static:false, Public:true }, "ARPDisplayName", $.String);

    $.Property({Static:false, Public:true }, "AppVendor", $.String);

    $.Property({Static:false, Public:true }, "AppProduct", $.String);

    $.Property({Static:false, Public:true }, "AppSuiteName", $.String);

    $.Property({Static:false, Public:true }, "AppSupportShortcut", $.String);

    $.Property({Static:false, Public:true }, "ShortcutAppId", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SplashPiece */ 

(function SplashPiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.FormPiece"), 
      Name: "System.Deployment.Application.SplashPiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $asm0A.TypeRef("System.Deployment.Application.SplashInfo")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "End", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "ShowSplash", 
      JSIL.MethodSignature.Action($asm0D.TypeRef("System.Windows.Forms.Form"))
    );

    $.ExternalMethod({Static:false, Public:false}, "SplashTimer_Tick", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.Field({Static:false, Public:false}, "pictureWait", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "lblNote", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "splashTimer", $asm0D.TypeRef("System.Windows.Forms.Timer")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "info", $asm0A.TypeRef("System.Deployment.Application.SplashInfo")); 
    $.Constant({Static:true , Public:false}, "initialDelay", 2500); 
    $.Constant({Static:true , Public:false}, "showDelay", 1000); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Runtime");
JSIL.DeclareNamespace("Microsoft.Runtime.Hosting");
/* class Microsoft.Runtime.Hosting.StrongNameHelpers */ 

(function StrongNameHelpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Runtime.Hosting.StrongNameHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "get_StrongName", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("Microsoft.Runtime.Hosting.IClrStrongName"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_StrongNameUsingIntPtr", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameErrorInfo", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameFreeBuffer", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameGetPublicKey", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameGetPublicKey", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameKeyDelete", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameKeyGen", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameKeyInstall", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $.Int32
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameKeyInstall", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureGeneration", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $asm06.TypeRef("System.IntPtr"), $.Int32
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureGeneration", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureGeneration", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureGeneration", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureSize", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureSize", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureVerification", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameSignatureVerificationEx", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameTokenFromPublicKey", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "StrongNameTokenFromPublicKey", 
      new JSIL.MethodSignature($.Boolean, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false}, "ts_LastStrongNameHR", $.Int32)
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute")); 
    $.Field({Static:true , Public:false}, "s_StrongName", $asm0A.TypeRef("Microsoft.Runtime.Hosting.IClrStrongName"))
      .Attribute($asm06.TypeRef("System.ThreadStaticAttribute"))
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute")); 
    $.Property({Static:true , Public:false}, "StrongName", $asm0A.TypeRef("Microsoft.Runtime.Hosting.IClrStrongName"));

    $.Property({Static:true , Public:false}, "StrongNameUsingIntPtr", $asm0A.TypeRef("Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr */ 

JSIL.MakeInterface(
  "Microsoft.Runtime.Hosting.IClrStrongNameUsingIntPtr", false, [], function ($) {
    $.Method({}, "GetHashFromAssemblyFile", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromAssemblyFileW", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromBlob", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromFile", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromFileW", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromHandle", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameCompareAssemblies", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameFreeBuffer", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "StrongNameGetBlob", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameGetBlobFromImage", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameGetPublicKey", new JSIL.MethodSignature($.Int32, [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameHashSize", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
    $.Method({}, "StrongNameKeyDelete", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "StrongNameKeyGen", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameKeyGenEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameKeyInstall", new JSIL.MethodSignature($.Int32, [
          $.String, $asm06.TypeRef("System.IntPtr"), 
          $.Int32
        ]));
    $.Method({}, "StrongNameSignatureGeneration", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureGenerationEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $.Int32
        ]));
    $.Method({}, "StrongNameSignatureSize", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureVerification", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureVerificationEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ]));
    $.Method({}, "StrongNameSignatureVerificationFromImage", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromAssembly", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromAssemblyEx", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromPublicKey", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9FD93CCF-3280-4391-B3A9-96E1CDE77C8D"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.ComConversionLossAttribute"))
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

/* interface Microsoft.Runtime.Hosting.IClrStrongName */ 

JSIL.MakeInterface(
  "Microsoft.Runtime.Hosting.IClrStrongName", false, [], function ($) {
    $.Method({}, "GetHashFromAssemblyFile", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromAssemblyFileW", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromBlob", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromFile", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromFileW", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetHashFromHandle", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameCompareAssemblies", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameFreeBuffer", new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "StrongNameGetBlob", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameGetBlobFromImage", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameGetPublicKey", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameHashSize", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])]));
    $.Method({}, "StrongNameKeyDelete", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "StrongNameKeyGen", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameKeyGenEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameKeyInstall", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32
        ]));
    $.Method({}, "StrongNameSignatureGeneration", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureGenerationEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), 
          $.Int32
        ]));
    $.Method({}, "StrongNameSignatureSize", new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureVerification", new JSIL.MethodSignature($.Int32, [
          $.String, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameSignatureVerificationEx", new JSIL.MethodSignature($.Int32, [
          $.String, $.Boolean, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ]));
    $.Method({}, "StrongNameSignatureVerificationFromImage", new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.IntPtr"), $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromAssembly", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromAssemblyEx", new JSIL.MethodSignature($.Int32, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "StrongNameTokenFromPublicKey", new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.ComConversionLossAttribute"))
  .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"))
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9FD93CCF-3280-4391-B3A9-96E1CDE77C8D"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Application.SubscriptionState */ 

(function SubscriptionState$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SubscriptionState", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_appType", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.AppType"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentApplicationManifest", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentApplicationSourceUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentBind", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentDeployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentDeploymentManifest", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CurrentDeploymentSourceUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DeploymentProviderUri", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EffectiveCertificatePublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EffectiveDescription", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.Description"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ExcludedDeployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsInstalled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsShellVisible", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LastCheckTime", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MinimumRequiredVersion", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Version"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PendingBind", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PendingDeployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PKTGroupId", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousApplicationManifest", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PreviousBind", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RollbackDeployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubscriptionId", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_SubscriptionStore", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateSkippedDeployment", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_UpdateSkipTime", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Invalidate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "Validate", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_subStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore")); 
    $.Field({Static:false, Public:false}, "_subId", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_stateIsValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "state", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal")); 
    $.Property({Static:false, Public:true }, "SubscriptionId", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "SubscriptionStore", $asm0A.TypeRef("System.Deployment.Application.SubscriptionStore"));

    $.Property({Static:false, Public:true }, "IsInstalled", $.Boolean);

    $.Property({Static:false, Public:true }, "IsShellVisible", $.Boolean);

    $.Property({Static:false, Public:true }, "CurrentBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"));

    $.Property({Static:false, Public:true }, "PreviousBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"));

    $.Property({Static:false, Public:true }, "PendingBind", $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"));

    $.Property({Static:false, Public:true }, "PendingDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "ExcludedDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "DeploymentProviderUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "MinimumRequiredVersion", $asm06.TypeRef("System.Version"));

    $.Property({Static:false, Public:true }, "LastCheckTime", $asm06.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "UpdateSkippedDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "UpdateSkipTime", $asm06.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "appType", $asm0A.TypeRef("System.Deployment.Application.AppType"));

    $.Property({Static:false, Public:true }, "CurrentDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "RollbackDeployment", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "CurrentDeploymentManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"));

    $.Property({Static:false, Public:true }, "CurrentDeploymentSourceUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "CurrentApplicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"));

    $.Property({Static:false, Public:true }, "CurrentApplicationSourceUri", $asm07.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "PreviousApplicationManifest", $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"));

    $.Property({Static:false, Public:true }, "PKTGroupId", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    $.Property({Static:false, Public:true }, "EffectiveDescription", $asm0A.TypeRef("System.Deployment.Application.Manifest.Description"));

    $.Property({Static:false, Public:true }, "EffectiveCertificatePublicKeyToken", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SubscriptionStore */ 

(function SubscriptionStore$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SubscriptionStore", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $asm0A.TypeRef("System.Deployment.Application.ComponentStoreType")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "AcquireLock", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IDisposable"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireReferenceTransaction", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.FileStream"), [$jsilcore.TypeRef("JSIL.Reference", [$.Int64])])
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireStoreReaderLock", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IDisposable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireStoreWriterLock", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IDisposable"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireSubscriptionReaderLock", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IDisposable"), [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireSubscriptionWriterLock", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IDisposable"), [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireTempDirectory", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.TempDirectory"))
    );

    $.ExternalMethod({Static:false, Public:true }, "AcquireTempFile", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.TempFile"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "ActivateApplication", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), $.String, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckAndReferenceApplication", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $.Int64
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "CheckApplicationPayload", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckCustomUXFlag", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckDeploymentSubscriptionState", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckForDeploymentUpdate", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckGroupInstalled", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckGroupInstalled", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "CheckInstalled", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckInstalledAndShellVisible", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckInstalledAndUpdateableConflict", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckMinimumRequiredVersion", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckOnlineShellVisibleConflict", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:true , Public:true }, "CheckShellVisible", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckUpdateInManifest", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Version"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm07.TypeRef("System.Uri"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm06.TypeRef("System.Version")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CheckUpdateInManifest", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Version"), [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm07.TypeRef("System.Uri"), 
          $asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest"), $asm06.TypeRef("System.Version"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "CleanOnlineAppCache", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CommitApplication", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")]), $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CurrentUser", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_SubscriptionStoreLock", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetOnlineAppQuotaInBytes", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetPrivateSize", 
      new JSIL.MethodSignature($.UInt64, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSharedSize", 
      new JSIL.MethodSignature($.UInt64, [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetSizeLimitInBytesForSemiTrustApps", 
      JSIL.MethodSignature.Return($.UInt64)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubscriptionState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubscriptionState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), [$asm0A.TypeRef("System.Deployment.Application.Manifest.AssemblyManifest")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetSubscriptionStateInternal", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.SubscriptionStateInternal"), [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IsAssemblyInstalled", 
      new JSIL.MethodSignature($.Boolean, [$asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "LockApplicationPath", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), [$asm0A.TypeRef("System.Deployment.Application.DefinitionAppId")])
    );

    $.ExternalMethod({Static:true , Public:false}, "OnDeploymentAdded", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnDeploymentRemoved", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RefreshStorePointer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveSubscriptionExposure", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "RollbackSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetLastCheckTimeToNow", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetPendingDeployment", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetUpdateSkipTime", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), 
          $asm06.TypeRef("System.DateTime")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "UninstallCustomHostSpecifiedSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UninstallCustomUXSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "UninstallSubscription", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:false}, "UpdateSubscriptionExposure", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.SubscriptionState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ValidateFileAssoctiation", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Application.SubscriptionState"), $asm0A.TypeRef("System.Deployment.Application.CommitApplicationParams")])
    );

    $.Field({Static:true , Public:false}, "_userStore", $.Type); 
    $.Field({Static:false, Public:false}, "_deployPath", $.String); 
    $.Field({Static:false, Public:false}, "_tempPath", $.String); 
    $.Field({Static:false, Public:false}, "_compStore", $asm0A.TypeRef("System.Deployment.Application.ComponentStore")); 
    $.Field({Static:false, Public:false}, "_subscriptionStoreLock", $.Object); 
    $.Field({Static:true , Public:false}, "_currentUserLock", $.Object); 
    $.Property({Static:true , Public:true }, "CurrentUser", $.Type);

    $.Property({Static:false, Public:false}, "SubscriptionStoreLock", $asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.AppType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.AppType", false, {
    None: 0, 
    Installed: 1, 
    Online: 2, 
    CustomHostSpecified: 3, 
    CustomUX: 4
  }, false
);

/* class System.Deployment.Application.SystemNetDownloader */ 

(function SystemNetDownloader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.FileDownloader"), 
      Name: "System.Deployment.Application.SystemNetDownloader", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DownloadAllFiles", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "DownloadSingleFile", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FileDownloader+DownloadQueueItem"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetOutputFileStream", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.Stream"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetUriCookieContainer", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Net.CookieContainer"), [$asm07.TypeRef("System.Uri")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.TempDirectory */ 

(function TempDirectory$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DisposableBase"), 
      Name: "System.Deployment.Application.TempDirectory", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeUnmanagedResources", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_thePath", $.String); 
    $.Constant({Static:true , Public:false}, "_directorySegmentCount", 2); 
    $.Property({Static:false, Public:true }, "Path", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.TempFile */ 

(function TempFile$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.DisposableBase"), 
      Name: "System.Deployment.Application.TempFile", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "DisposeUnmanagedResources", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_thePath", $.String); 
    $.Constant({Static:true , Public:false}, "_filePathSegmentCount", 2); 
    $.Property({Static:false, Public:true }, "Path", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.UpdatePiece */ 

(function UpdatePiece$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0A.TypeRef("System.Deployment.Application.ModalPiece"), 
      Name: "System.Deployment.Application.UpdatePiece", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm"), $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo"), 
          $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnOk_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "btnSkip_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "linkAppId_LinkClicked", 
      new JSIL.MethodSignature(null, [$.Object, $asm0D.TypeRef("System.Windows.Forms.LinkLabelLinkClickedEventArgs")])
    );

    $.Field({Static:false, Public:false}, "lblHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "lblSubHeader", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "pictureDesktop", $asm0D.TypeRef("System.Windows.Forms.PictureBox")); 
    $.Field({Static:false, Public:false}, "lblApplication", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "linkAppId", $asm0D.TypeRef("System.Windows.Forms.LinkLabel")); 
    $.Field({Static:false, Public:false}, "lblFrom", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "lblFromId", $asm0D.TypeRef("System.Windows.Forms.Label")); 
    $.Field({Static:false, Public:false}, "groupRule", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "groupDivider", $asm0D.TypeRef("System.Windows.Forms.GroupBox")); 
    $.Field({Static:false, Public:false}, "btnOk", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "btnSkip", $asm0D.TypeRef("System.Windows.Forms.Button")); 
    $.Field({Static:false, Public:false}, "contentTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "descriptionTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "okSkipTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "overarchingTableLayoutPanel", $asm0D.TypeRef("System.Windows.Forms.TableLayoutPanel")); 
    $.Field({Static:false, Public:false}, "_info", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.UriHelper */ 

(function UriHelper$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.UriHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidRelativePathChars", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Char]))
    );

    $.ExternalMethod({Static:true , Public:true }, "IsSupportedScheme", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Uri")])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsValidRelativeFilePath", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "NormalizePathDirectorySeparators", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "PathContainDirectorySeparators", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "UriFromRelativeFilePath", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Uri"), [$asm07.TypeRef("System.Uri"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateSupportedScheme", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Uri"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ValidateSupportedSchemeInArgument", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Uri"), $.String])
    );

    $.Field({Static:true , Public:false}, "_invalidRelativePathChars", $.Object); 
    $.Field({Static:true , Public:false}, "_directorySeparators", $jsilcore.TypeRef("System.Array", [$.Char])); 
    $.Property({Static:true , Public:false}, "InvalidRelativePathChars", $jsilcore.TypeRef("System.Array", [$.Char]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.UserInterface */ 

(function UserInterface$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.UserInterface", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Activate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DefaultBrowserExePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetDisplaySite", 
      new JSIL.MethodSignature($.String, [$asm07.TypeRef("System.Uri")])
    );

    $.ExternalMethod({Static:false, Public:true }, "Hide", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "IsValidHttpUrl", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "LaunchUrlInBrowser", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "LimitDisplayTextLength", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowError", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowMaintenance", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.UserInterfaceModalResult"), [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo"), $asm0A.TypeRef("System.Deployment.Application.MaintenanceInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowMessage", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowPlatform", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Uri")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowProgress", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ProgressPiece"), [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowUpdate", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.UserInterfaceModalResult"), [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SplashCancelled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "UIThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitReady", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_uiForm", $asm0A.TypeRef("System.Deployment.Application.UserInterfaceForm")); 
    $.Field({Static:false, Public:false}, "_appctx", $asm0D.TypeRef("System.Windows.Forms.ApplicationContext")); 
    $.Field({Static:false, Public:false}, "_appctxExitThreadFinished", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_uiThread", $asm06.TypeRef("System.Threading.Thread")); 
    $.Field({Static:false, Public:false}, "_uiConstructed", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_uiReady", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:false}, "_splashInfo", $asm0A.TypeRef("System.Deployment.Application.SplashInfo")); 
    $.Field({Static:false, Public:false}, "_disposed", $.Boolean); 
    $.Property({Static:true , Public:false}, "DefaultBrowserExePath", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.UserInterfaceForm */ 

(function UserInterfaceForm$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0D.TypeRef("System.Windows.Forms.Form"), 
      Name: "System.Deployment.Application.UserInterfaceForm", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Threading.ManualResetEvent"), $asm0A.TypeRef("System.Deployment.Application.SplashInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ConstructErrorPiece", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ErrorPiece"), [
          $.String, $.String, 
          $.String, $.String, 
          $.String, $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ConstructMaintenancePiece", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.MaintenancePiece"), [
          $asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo"), $asm0A.TypeRef("System.Deployment.Application.MaintenanceInfo"), 
          $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ConstructPlatformPiece", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.PlatformPiece"), [
          $.String, $asm07.TypeRef("System.Uri"), 
          $asm06.TypeRef("System.Threading.ManualResetEvent")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "ConstructProgressPiece", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.ProgressPiece"), [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo")])
    );

    $.ExternalMethod({Static:false, Public:true }, "ConstructUpdatePiece", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.UpdatePiece"), [$asm0A.TypeRef("System.Deployment.Application.UserInterfaceInfo"), $asm06.TypeRef("System.Threading.ManualResetEvent")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeContent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "IsRightToLeft", 
      new JSIL.MethodSignature($.Boolean, [$asm0D.TypeRef("System.Windows.Forms.Control")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnClosing", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.ComponentModel.CancelEventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnLoad", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "OnVisibleChanged", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventArgs"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "SetVisibleCore", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "ShowSimpleMessageBox", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SwitchUserInterfacePiece", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.FormPiece"))
    );

    $.Field({Static:false, Public:false}, "currentPiece", $asm0A.TypeRef("System.Deployment.Application.FormPiece")); 
    $.Field({Static:false, Public:false}, "splashPieceInfo", $asm0A.TypeRef("System.Deployment.Application.SplashInfo")); 
    $.Field({Static:false, Public:false}, "onLoadEvent", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.UserInterfaceForm+ConstructProgressPieceDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ConstructProgressPieceDelegate", false, []);

/* delegate System.Deployment.Application.UserInterfaceForm+ConstructUpdatePieceDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ConstructUpdatePieceDelegate", false, []);

/* delegate System.Deployment.Application.UserInterfaceForm+ConstructErrorPieceDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ConstructErrorPieceDelegate", false, []);

/* delegate System.Deployment.Application.UserInterfaceForm+ConstructPlatformPieceDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ConstructPlatformPieceDelegate", false, []);

/* delegate System.Deployment.Application.UserInterfaceForm+ConstructMaintenancePieceDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ConstructMaintenancePieceDelegate", false, []);

/* delegate System.Deployment.Application.UserInterfaceForm+ShowSimpleMessageBoxDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.UserInterfaceForm+ShowSimpleMessageBoxDelegate", false, []);

/* enum System.Deployment.Application.UserInterfaceModalResult */ 

JSIL.MakeEnum(
  "System.Deployment.Application.UserInterfaceModalResult", false, {
    Unknown: 0, 
    Ok: 1, 
    Cancel: 2, 
    Skip: 3
  }, false
);

/* class System.Deployment.Application.UserInterfaceInfo */ 

(function UserInterfaceInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.UserInterfaceInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "formTitle", $.String); 
    $.Field({Static:false, Public:true }, "productName", $.String); 
    $.Field({Static:false, Public:true }, "sourceSite", $.String); 
    $.Field({Static:false, Public:true }, "supportUrl", $.String); 
    $.Field({Static:false, Public:true }, "iconFilePath", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.SplashInfo */ 

(function SplashInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.SplashInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "initializedAsWait", $.Boolean); 
    $.Field({Static:false, Public:true }, "pieceReady", $asm06.TypeRef("System.Threading.ManualResetEvent")); 
    $.Field({Static:false, Public:true }, "cancelled", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DFServiceEntryPoint */ 

(function DFServiceEntryPoint$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.DFServiceEntryPoint", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Initialize", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String]))
    );

    $.ExternalMethod({Static:true , Public:false}, "MessageLoopThread", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "RegisterCOMServer", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "UnregisterCOMServer", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "_cookie", $.Int32, 0); 
    $.Field({Static:true , Public:false}, "_services", $asm06.TypeRef("System.Runtime.InteropServices.RegistrationServices"), null); 
    $.Field({Static:true , Public:false}, "_dfsvcForm", $asm0A.TypeRef("System.Deployment.Application.DFServiceEntryPoint+DfsvcForm")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.DFServiceEntryPoint+DfsvcForm */ 

(function DfsvcForm$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0D.TypeRef("System.Windows.Forms.Form"), 
      Name: "System.Deployment.Application.DFServiceEntryPoint+DfsvcForm", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CloseForm", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "DfsvcForm_Closed", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "DfsvcForm_Closing", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("System.ComponentModel.CancelEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "InitializeComponent", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "SessionEndedEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("Microsoft.Win32.SessionEndedEventArgs")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "SessionEndingEventHandler", 
      new JSIL.MethodSignature(null, [$.Object, $asm07.TypeRef("Microsoft.Win32.SessionEndingEventArgs")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TerminateLifetimeManager", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.Field({Static:false, Public:false}, "components", $asm07.TypeRef("System.ComponentModel.Container")); 
    $.Field({Static:false, Public:false}, "_lock", $.Object); 
    $.Field({Static:false, Public:false}, "_lifetimeManagerTerminated", $.Boolean); 
    $.Field({Static:false, Public:false}, "_formClosed", $.Boolean); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate System.Deployment.Application.DFServiceEntryPoint+DfsvcForm+CloseFormDelegate */ 

JSIL.MakeDelegate("System.Deployment.Application.DFServiceEntryPoint+DfsvcForm+CloseFormDelegate", false, []);

/* class System.Deployment.Application.CodeMarker_Singleton */ 

(function CodeMarker_Singleton$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.CodeMarker_Singleton", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("Microsoft.Internal.Performance.CodeMarkers"))
    );

    $.Field({Static:true , Public:false}, "codemarkers", $asm0A.TypeRef("Microsoft.Internal.Performance.CodeMarkers"), null); 
    $.Field({Static:true , Public:false}, "syncObject", $.Object); 
    $.Property({Static:true , Public:true }, "Instance", $asm0A.TypeRef("Microsoft.Internal.Performance.CodeMarkers"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PathTwiddler */ 

(function PathTwiddler$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.PathTwiddler", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "FilterString", 
      new JSIL.MethodSignature($.String, [
          $.String, $.Char, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "FilterString", 
      new JSIL.MethodSignature($.String, [
          $.String, $jsilcore.TypeRef("System.Array", [$.Char]), 
          $.Char, $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidFileDirNameChars", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$.Char]))
    );

    $.Field({Static:true , Public:false}, "_invalidFileDirNameChars", $.Object); 
    $.Property({Static:true , Public:false}, "InvalidFileDirNameChars", $jsilcore.TypeRef("System.Array", [$.Char]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PathHelper */ 

(function PathHelper$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.PathHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "GenerateRandomPath", 
      new JSIL.MethodSignature($.String, [$.UInt32])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_ShortShimDllPath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetRootSegmentPath", 
      new JSIL.MethodSignature($.String, [$.String, $.UInt32])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetShortPath", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetShortPathNameThrowExceptionForLastError", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:true , Public:false}, "_shortShimDllPath", $.Object); 
    $.Constant({Static:true , Public:false}, "MAX_PATH", 260); 
    $.Constant({Static:true , Public:false}, "ERROR_FILE_NOT_FOUND", 2); 
    $.Constant({Static:true , Public:false}, "ERROR_INVALID_PARAMETER", 87); 
    $.Property({Static:true , Public:true }, "ShortShimDllPath", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.HexString */ 

(function HexString$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.HexString", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "FromBytes", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Base32String */ 

(function Base32String$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Base32String", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "FromBytes", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.Field({Static:true , Public:false}, "charList", $jsilcore.TypeRef("System.Array", [$.Char])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Resources */ 

(function Resources$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.Resources", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "GetIcon", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Drawing.Icon"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetImage", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Drawing.Image"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "InitializeReferenceToAssembly", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:true , Public:false}, "lockObject", $.Object); 
    $.Field({Static:true , Public:false}, "_resources", $asm06.TypeRef("System.Resources.ResourceManager"), null); 
    $.Field({Static:true , Public:false}, "_assembly", $asm06.TypeRef("System.Reflection.Assembly"), null); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.Utilities */ 

(function Utilities$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.Utilities", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "BuildTFM", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "CompareWithNullEqEmpty", 
      new JSIL.MethodSignature($.Int32, [
          $.String, $.String, 
          $asm06.TypeRef("System.StringComparison")
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DoesRegistryKeyExist", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("Microsoft.Win32.RegistryKey"), $.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "IsAppRepCheckRequired", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "SetMarkOfTheWeb", 
      JSIL.MethodSignature.Action($.String)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Application.PolicyKeys */ 

(function PolicyKeys$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Application.PolicyKeys", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CheckDeploymentBoolString", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $.Boolean, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckRegistryBoolString", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("Microsoft.Win32.RegistryKey"), $.String, 
          $.Boolean, $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ClrHostType", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Application.PolicyKeys+HostType"))
    );

    $.ExternalMethod({Static:true , Public:true }, "DisableGenericExceptionHandler", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetLogVerbosityLevel", 
      JSIL.MethodSignature.Return($.UInt16)
    );

    $.ExternalMethod({Static:true , Public:true }, "ProduceDetailedExecutionSectionInLog", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "RequireHashInManifests", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "RequireSignedManifests", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipApplicationDependencyHashCheck", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipDeploymentProvider", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipSchemaValidation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipSemanticValidation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipSignatureValidation", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SkipSKUDetection", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "SuppressLimitOnNumberOfActivations", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.PolicyKeys+HostType */ 

JSIL.MakeEnum(
  "System.Deployment.Application.PolicyKeys+HostType", false, {
    Default: 0, 
    AppLaunch: 1, 
    Cor: 2
  }, false
);

JSIL.DeclareNamespace("System.Deployment.Application.Win32InterOp");
/* class System.Deployment.Application.Win32InterOp.SystemUtils */ 

(function SystemUtils$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Win32InterOp.SystemUtils", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "CheckSupportedImageAndCLRVersions", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetDefinitionIdentityFromManagedAssembly", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.DefinitionIdentity"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetManifestFromPEResources", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "QueryAssemblyInfo", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfo"), [
          $asm0A.TypeRef("System.Deployment.Application.NativeMethods+IAssemblyCache"), $asm0A.TypeRef("System.Deployment.Application.Win32InterOp.SystemUtils+QueryAssemblyInfoFlags"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "Win32LoadExceptionHelper", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $.String
        ])
    );

    $.Constant({Static:true , Public:false}, "MAX_CLR_VERSION_LENGTH", 24); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfoFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfoFlags", false, {
    Installed: 1, 
    PayLoadResident: 2
  }, false
);

/* enum System.Deployment.Application.Win32InterOp.SystemUtils+QueryAssemblyInfoFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Win32InterOp.SystemUtils+QueryAssemblyInfoFlags", false, {
    Validate: 1, 
    GetSize: 2, 
    GetCurrentPath: 4, 
    All: 7
  }, true
);

/* class System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfo */ 

(function AssemblyInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_AssemblyFlags", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfoFlags"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_AssemblyInfoSizeInByte", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_AssemblySizeInKB", 
      JSIL.MethodSignature.Action($.Int64)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_CurrentAssemblyPath", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "assemblyInfoSizeInByte", $.Int32); 
    $.Field({Static:false, Public:false}, "assemblyFlags", $asm0A.TypeRef("System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfoFlags")); 
    $.Field({Static:false, Public:false}, "assemblySizeInKB", $.Int64); 
    $.Field({Static:false, Public:false}, "currentAssemblyPath", $.String); 
    $.Property({Static:false, Public:false}, "AssemblyInfoSizeInByte", $.Int32);

    $.Property({Static:false, Public:false}, "AssemblyFlags", $asm0A.TypeRef("System.Deployment.Application.Win32InterOp.SystemUtils+AssemblyInfoFlags"));

    $.Property({Static:false, Public:false}, "AssemblySizeInKB", $.Int64);

    $.Property({Static:false, Public:false}, "CurrentAssemblyPath", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Application.Win32InterOp.SystemUtils+RUNTIME_INFO_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Application.Win32InterOp.SystemUtils+RUNTIME_INFO_FLAGS", false, {
    RUNTIME_INFO_UPGRADE_VERSION: 1, 
    RUNTIME_INFO_REQUEST_IA64: 2, 
    RUNTIME_INFO_REQUEST_AMD64: 4, 
    RUNTIME_INFO_REQUEST_X86: 8, 
    RUNTIME_INFO_DONT_RETURN_DIRECTORY: 16, 
    RUNTIME_INFO_DONT_RETURN_VERSION: 32, 
    RUNTIME_INFO_DONT_SHOW_ERROR_DIALOG: 64, 
    RUNTIME_INFO_CONSIDER_POST_2_0: 128, 
    RUNTIME_INFO_EMULATE_EXE_LAUNCH: 256
  }, false
);

/* struct System.Deployment.Internal.Isolation.BLOB */ 

(function BLOB$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.BLOB", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "BlobData", $asm06.TypeRef("System.IntPtr")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE */ 

(function IDENTITY_ATTRIBUTE$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Namespace", $.String); 
    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "Value", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.STORE_ASSEMBLY_STATUS_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.STORE_ASSEMBLY_STATUS_FLAGS", false, {
    STORE_ASSEMBLY_STATUS_MANIFEST_ONLY: 1, 
    STORE_ASSEMBLY_STATUS_PAYLOAD_RESIDENT: 2, 
    STORE_ASSEMBLY_STATUS_PARTIAL_INSTALL: 4
  }, true
);

/* struct System.Deployment.Internal.Isolation.STORE_ASSEMBLY */ 

(function STORE_ASSEMBLY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.STORE_ASSEMBLY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Status", $.UInt32); 
    $.Field({Static:false, Public:true }, "DefinitionIdentity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "ManifestPath", $.String); 
    $.Field({Static:false, Public:true }, "AssemblySize", $.UInt64); 
    $.Field({Static:false, Public:true }, "ChangeId", $.UInt64); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE_STATUS_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE_STATUS_FLAGS", false, {
    STORE_ASSEMBLY_FILE_STATUS_FLAG_PRESENT: 1
  }, true
);

/* struct System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE */ 

(function STORE_ASSEMBLY_FILE$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "FileName", $.String); 
    $.Field({Static:false, Public:true }, "FileStatusFlags", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.STORE_CATEGORY */ 

(function STORE_CATEGORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.STORE_CATEGORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "DefinitionIdentity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY */ 

(function STORE_CATEGORY_SUBCATEGORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Subcategory", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE */ 

(function STORE_CATEGORY_INSTANCE$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "DefinitionAppId_Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "XMLSnippet", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.CATEGORY */ 

(function CATEGORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.CATEGORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "DefinitionIdentity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.CATEGORY_SUBCATEGORY */ 

(function CATEGORY_SUBCATEGORY$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.CATEGORY_SUBCATEGORY", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Subcategory", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.CATEGORY_INSTANCE */ 

(function CATEGORY_INSTANCE$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.CATEGORY_INSTANCE", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "DefinitionAppId_Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "XMLSnippet", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["d8b1aacb-5142-4abb-bcc1-e9dc9052a89e"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["f9fd4090-93db-45c0-af87-624940f19cff"]; });

/* class System.Deployment.Internal.Isolation.StoreDeploymentMetadataEnumeration */ 

(function StoreDeploymentMetadataEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreDeploymentMetadataEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["5fa4f590-a416-4b22-ac79-7c3f0d31f303"]; });

/* class System.Deployment.Internal.Isolation.StoreDeploymentMetadataPropertyEnumeration */ 

(function StoreDeploymentMetadataPropertyEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreDeploymentMetadataPropertyEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["a5c637bf-6eaa-4e5f-b535-55299657e33e"]; });

/* class System.Deployment.Internal.Isolation.StoreAssemblyEnumeration */ 

(function StoreAssemblyEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreAssemblyEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["a5c6aaa3-03e4-478d-b9f5-2e45908d5e4f"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration */ 

(function StoreAssemblyFileEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_FILE")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_ASSEMBLY_FILE"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["b840a2f5-a497-4a6d-9038-cd3ec2fbd222"]; });

/* class System.Deployment.Internal.Isolation.StoreCategoryEnumeration */ 

(function StoreCategoryEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreCategoryEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["19be1967-b2fc-4dc1-9627-f3cb6305d2a7"]; });

/* class System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration */ 

(function StoreSubcategoryEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_SUBCATEGORY")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_SUBCATEGORY"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["5ba7cb30-8508-4114-8c77-262fcda4fadb"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.StoreCategoryInstanceEnumeration */ 

(function StoreCategoryInstanceEnumeration$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.StoreCategoryInstanceEnumeration", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_CATEGORY_INSTANCE")); 
    $.Field({Static:false, Public:false}, "_fValid", $.Boolean); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE")); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.STORE_CATEGORY_INSTANCE"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.Isolation.ReferenceIdentity */ 

(function ReferenceIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.ReferenceIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteAttribute", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteAttribute", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAttribute", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAttribute", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.Field({Static:false, Public:false}, "_id", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IReferenceIdentity */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IReferenceIdentity", false, [], function ($) {
    $.Method({}, "GetAttribute", new JSIL.MethodSignature($.String, [$.String, $.String]));
    $.Method({}, "SetAttribute", new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]));
    $.Method({}, "EnumAttributes", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE")));
    $.Method({}, "Clone", new JSIL.MethodSignature($.Type, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["6eaf5ace-7917-4f3c-b129-e046a9704766"]; });

/* interface System.Deployment.Internal.Isolation.IDefinitionIdentity */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IDefinitionIdentity", false, [], function ($) {
    $.Method({}, "GetAttribute", new JSIL.MethodSignature($.String, [$.String, $.String]));
    $.Method({}, "SetAttribute", new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ]));
    $.Method({}, "EnumAttributes", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE")));
    $.Method({}, "Clone", new JSIL.MethodSignature($.Type, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["587bf538-4d90-4a3c-9ef1-58a200a8a9e7"]; });

/* class System.Deployment.Internal.Isolation.DefinitionIdentity */ 

(function DefinitionIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.DefinitionIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteAttribute", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "DeleteAttribute", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetAttribute", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAttribute", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAttribute", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.Field({Static:false, Public:false}, "_id", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumIDENTITY_ATTRIBUTE", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDENTITY_ATTRIBUTE")])]));
    $.Method({}, "CurrentIntoBuffer", new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$.Byte])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9cdaae75-246e-4b00-a26d-b9aec137a3eb"]; });

/* interface System.Deployment.Internal.Isolation.IEnumDefinitionIdentity */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumDefinitionIdentity", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["f3549d9c-fc73-4793-9c00-1cd204254c0c"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.EnumDefinitionIdentity */ 

(function EnumDefinitionIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.EnumDefinitionIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumDefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumDefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:false}, "_fetchList", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IEnumReferenceIdentity */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumReferenceIdentity", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.UInt32, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")])]));
    $.Method({}, "Skip", JSIL.MethodSignature.Action($.UInt32));
    $.Method({}, "Reset", JSIL.MethodSignature.Void);
    $.Method({}, "Clone", JSIL.MethodSignature.Return($.Type));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["b30352cf-23da-4577-9b3f-b4e6573be53b"]; });

/* class System.Deployment.Internal.Isolation.EnumReferenceIdentity */ 

(function EnumReferenceIdentity$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.EnumReferenceIdentity", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ReferenceIdentity"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetCurrent", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "_enum", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumReferenceIdentity")); 
    $.Field({Static:false, Public:false}, "_current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Field({Static:false, Public:false}, "_fetchList", $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.Property({Static:false, Public:true }, "Current", $asm0A.TypeRef("System.Deployment.Internal.Isolation.ReferenceIdentity"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IDefinitionAppId */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IDefinitionAppId", false, [], function ($) {
    $.Method({}, "get_SubscriptionId", JSIL.MethodSignature.Return($.String));
    $.Method({}, "put_SubscriptionId", JSIL.MethodSignature.Action($.String));
    $.Method({}, "get_Codebase", JSIL.MethodSignature.Return($.String));
    $.Method({}, "put_Codebase", JSIL.MethodSignature.Action($.String));
    $.Method({}, "EnumAppPath", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumDefinitionIdentity")));
    $.Method({}, "SetAppPath", new JSIL.MethodSignature(null, [$.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["d91e12d8-98ed-47fa-9936-39421283d59b"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.DefinitionAppId */ 

(function DefinitionAppId$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.DefinitionAppId", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AppPath", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumDefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Codebase", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubscriptionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Codebase", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SubscriptionId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "SetAppPath", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]))
    );

    $.Field({Static:false, Public:false}, "_id", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Property({Static:false, Public:true }, "SubscriptionId", $.String);

    $.Property({Static:false, Public:true }, "Codebase", $.String);

    $.Property({Static:false, Public:true }, "AppPath", $asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumDefinitionIdentity"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IReferenceAppId */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IReferenceAppId", false, [], function ($) {
    $.Method({}, "get_SubscriptionId", JSIL.MethodSignature.Return($.String));
    $.Method({}, "put_SubscriptionId", JSIL.MethodSignature.Action($.String));
    $.Method({}, "get_Codebase", JSIL.MethodSignature.Return($.String));
    $.Method({}, "put_Codebase", JSIL.MethodSignature.Action($.String));
    $.Method({}, "EnumAppPath", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumReferenceIdentity")));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["054f0bef-9e45-4363-8f5a-2f8e142d9a3b"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.ReferenceAppId */ 

(function ReferenceAppId$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.ReferenceAppId", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AppPath", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumReferenceIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Codebase", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SubscriptionId", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Codebase", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_SubscriptionId", 
      JSIL.MethodSignature.Action($.String)
    );

    $.Field({Static:false, Public:false}, "_id", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")); 
    $.Property({Static:false, Public:true }, "SubscriptionId", $.String);

    $.Property({Static:false, Public:true }, "Codebase", $.String);

    $.Property({Static:false, Public:true }, "AppPath", $asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumReferenceIdentity"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAGS", false, {
    IIDENTITYAUTHORITY_DEFINITION_IDENTITY_TO_TEXT_FLAG_CANONICAL: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAGS", false, {
    IIDENTITYAUTHORITY_REFERENCE_IDENTITY_TO_TEXT_FLAG_CANONICAL: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAGS", false, {
    IIDENTITYAUTHORITY_DOES_DEFINITION_MATCH_REFERENCE_FLAG_EXACT_MATCH_REQUIRED: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.IIdentityAuthority */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IIdentityAuthority", false, [], function ($) {
    $.Method({}, "TextToDefinition", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), [$.UInt32, $.String]));
    $.Method({}, "TextToReference", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), [$.UInt32, $.String]));
    $.Method({}, "DefinitionToText", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]));
    $.Method({}, "DefinitionToTextBuffer", new JSIL.MethodSignature($.UInt32, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.UInt32, $jsilcore.TypeRef("System.Array", [$.Char])
        ]));
    $.Method({}, "ReferenceToText", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")]));
    $.Method({}, "ReferenceToTextBuffer", new JSIL.MethodSignature($.UInt32, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $.UInt32, $jsilcore.TypeRef("System.Array", [$.Char])
        ]));
    $.Method({}, "AreDefinitionsEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")
        ]));
    $.Method({}, "AreReferencesEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")
        ]));
    $.Method({}, "AreTextualDefinitionsEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "AreTextualReferencesEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "DoesDefinitionMatchReference", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")
        ]));
    $.Method({}, "DoesTextualDefinitionMatchTextualReference", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "HashReference", new JSIL.MethodSignature($.UInt64, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")]));
    $.Method({}, "HashDefinition", new JSIL.MethodSignature($.UInt64, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]));
    $.Method({}, "GenerateDefinitionKey", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]));
    $.Method({}, "GenerateReferenceKey", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")]));
    $.Method({}, "CreateDefinition", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")));
    $.Method({}, "CreateReference", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["261a6983-c35d-4d0d-aa5b-7867259e77bc"]; });

/* enum System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAGS", false, {
    IAPPIDAUTHORITY_ARE_DEFINITIONS_EQUAL_FLAG_IGNORE_VERSION: 1
  }, true
);

/* enum System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAGS", false, {
    IAPPIDAUTHORITY_ARE_REFERENCES_EQUAL_FLAG_IGNORE_VERSION: 1
  }, true
);

/* interface System.Deployment.Internal.Isolation.IAppIdAuthority */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IAppIdAuthority", false, [], function ($) {
    $.Method({}, "TextToDefinition", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), [$.UInt32, $.String]));
    $.Method({}, "TextToReference", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId"), [$.UInt32, $.String]));
    $.Method({}, "DefinitionToText", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]));
    $.Method({}, "ReferenceToText", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")]));
    $.Method({}, "AreDefinitionsEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")
        ]));
    $.Method({}, "AreReferencesEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")
        ]));
    $.Method({}, "AreTextualDefinitionsEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "AreTextualReferencesEqual", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "DoesDefinitionMatchReference", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")
        ]));
    $.Method({}, "DoesTextualDefinitionMatchTextualReference", new JSIL.MethodSignature($.Boolean, [
          $.UInt32, $.String, 
          $.String
        ]));
    $.Method({}, "HashReference", new JSIL.MethodSignature($.UInt64, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")]));
    $.Method({}, "HashDefinition", new JSIL.MethodSignature($.UInt64, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]));
    $.Method({}, "GenerateDefinitionKey", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]));
    $.Method({}, "GenerateReferenceKey", new JSIL.MethodSignature($.String, [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")]));
    $.Method({}, "CreateDefinition", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")));
    $.Method({}, "CreateReference", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8c87810c-2541-4f75-b2d0-9af515488e23"]; });

/* enum System.Deployment.Internal.Isolation.ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAGS", false, {
    ISTORE_BIND_REFERENCE_TO_ASSEMBLY_FLAG_FORCE_LIBRARY_SEMANTICS: 1
  }, true
);

/* enum System.Deployment.Internal.Isolation.ISTORE_ENUM_ASSEMBLIES_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.ISTORE_ENUM_ASSEMBLIES_FLAGS", false, {
    ISTORE_ENUM_ASSEMBLIES_FLAG_LIMIT_TO_VISIBLE_ONLY: 1, 
    ISTORE_ENUM_ASSEMBLIES_FLAG_MATCH_SERVICING: 2, 
    ISTORE_ENUM_ASSEMBLIES_FLAG_FORCE_LIBRARY_SEMANTICS: 4
  }, true
);

/* enum System.Deployment.Internal.Isolation.ISTORE_ENUM_FILES_FLAGS */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.ISTORE_ENUM_FILES_FLAGS", false, {
    ISTORE_ENUM_FILES_FLAG_INCLUDE_INSTALLED_FILES: 1, 
    ISTORE_ENUM_FILES_FLAG_INCLUDE_MISSING_FILES: 2
  }, true
);

/* struct System.Deployment.Internal.Isolation.StoreOperationStageComponent */ 

(function StoreOperationStageComponent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationStageComponent", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "Component", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "ManifestPath", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationStageComponent+OpFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationStageComponent+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationStageComponent+Disposition", false, {
    Failed: 0, 
    Installed: 1, 
    Refreshed: 2, 
    AlreadyInstalled: 3
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationStageComponentFile */ 

(function StoreOperationStageComponentFile$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationStageComponentFile", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $.String, 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "Component", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "ComponentRelativePath", $.String); 
    $.Field({Static:false, Public:true }, "SourceFilePath", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+OpFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationStageComponentFile+Disposition", false, {
    Failed: 0, 
    Installed: 1, 
    Refreshed: 2, 
    AlreadyInstalled: 3
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreApplicationReference */ 

(function StoreApplicationReference$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreApplicationReference", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Destroy", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ToIntPtr", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags")); 
    $.Field({Static:false, Public:true }, "GuidScheme", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "Identifier", $.String); 
    $.Field({Static:false, Public:true }, "NonCanonicalData", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreApplicationReference+RefFlags", false, {
    Nothing: 0
  }, true
);

/* struct System.Deployment.Internal.Isolation.StoreOperationPinDeployment */ 

(function StoreOperationPinDeployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationPinDeployment", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm06.TypeRef("System.DateTime"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "ExpirationTime", $.Int64); 
    $.Field({Static:false, Public:true }, "Reference", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationPinDeployment+OpFlags", false, {
    Nothing: 0, 
    NeverExpires: 1
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationPinDeployment+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationPinDeployment+Disposition", false, {
    Failed: 0, 
    Pinned: 1
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment */ 

(function StoreOperationUnpinDeployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "Reference", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+OpFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationUnpinDeployment+Disposition", false, {
    Failed: 0, 
    Unpinned: 1
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationInstallDeployment */ 

(function StoreOperationInstallDeployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationInstallDeployment", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $.Boolean, 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "Reference", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+OpFlags", false, {
    Nothing: 0, 
    UninstallOthers: 1
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationInstallDeployment+Disposition", false, {
    Failed: 0, 
    AlreadyInstalled: 1, 
    Installed: 2
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment */ 

(function StoreOperationUninstallDeployment$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags")); 
    $.Field({Static:false, Public:true }, "Application", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "Reference", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+OpFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationUninstallDeployment+Disposition", false, {
    Failed: 0, 
    DidNotExist: 1, 
    Uninstalled: 2
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationMetadataProperty */ 

(function StoreOperationMetadataProperty$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationMetadataProperty", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Guid"), $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Guid"), $.String, 
          $.String
        ])
    );

    $.Field({Static:false, Public:true }, "GuidPropertySet", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "ValueSize", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "Value", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata */ 

(function StoreOperationSetDeploymentMetadata$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")]), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "DestroyProperties", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IntPtr"), $.UInt64])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "MarshalProperties", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationMetadataProperty")])])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags")); 
    $.Field({Static:false, Public:true }, "Deployment", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    $.Field({Static:false, Public:true }, "InstallerReference", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "cPropertiesToTest", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "PropertiesToTest", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "cPropertiesToSet", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "PropertiesToSet", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+OpFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+Disposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationSetDeploymentMetadata+Disposition", false, {
    Failed: 0, 
    Set: 2
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext */ 

(function StoreOperationSetCanonicalizationContext$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags")); 
    $.Field({Static:false, Public:true }, "BaseAddressFilePath", $.String); 
    $.Field({Static:false, Public:true }, "ExportsFilePath", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationSetCanonicalizationContext+OpFlags", false, {
    Nothing: 0
  }, true
);

/* struct System.Deployment.Internal.Isolation.StoreOperationScavenge */ 

(function StoreOperationScavenge$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreOperationScavenge", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.UInt64, 
          $.UInt64, $.UInt32
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Destroy", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags")); 
    $.Field({Static:false, Public:true }, "SizeReclaimationLimit", $.UInt64); 
    $.Field({Static:false, Public:true }, "RuntimeLimit", $.UInt64); 
    $.Field({Static:false, Public:true }, "ComponentCountLimit", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreOperationScavenge+OpFlags", false, {
    Nothing: 0, 
    Light: 1, 
    LimitSize: 2, 
    LimitTime: 4, 
    LimitCount: 8
  }, true
);

/* enum System.Deployment.Internal.Isolation.StoreTransactionOperationType */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StoreTransactionOperationType", false, {
    Invalid: 0, 
    SetCanonicalizationContext: 14, 
    StageComponent: 20, 
    PinDeployment: 21, 
    UnpinDeployment: 22, 
    StageComponentFile: 23, 
    InstallDeployment: 24, 
    UninstallDeployment: 25, 
    SetDeploymentMetadata: 26, 
    Scavenge: 27
  }, false
);

/* struct System.Deployment.Internal.Isolation.StoreTransactionOperation */ 

(function StoreTransactionOperation$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreTransactionOperation", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Operation", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperationType")); 
    $.Field({Static:false, Public:true }, "Data", $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionData")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.StoreTransactionData */ 

(function StoreTransactionData$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.StoreTransactionData", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "DataPtr", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.Isolation.Store */ 

(function Store$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Store", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore"))
    );

    $.ExternalMethod({Static:false, Public:true }, "BindReferenceToAssemblyIdentity", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "BindReferenceToAssemblyManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICMS"), [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "CalculateDelimiterOfDeploymentsBasedOnQuota", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")]), 
          $.UInt64, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt64]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumAssemblies", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreAssemblyEnumeration"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "EnumAssemblies", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreAssemblyEnumeration"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumCategories", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreCategoryEnumeration"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumCategoryInstances", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreCategoryInstanceEnumeration"), [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumFiles", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumInstallationReferences", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IEnumSTORE_ASSEMBLY_INSTALLATION_REFERENCE"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumInstallerDeploymentProperties", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreDeploymentMetadataPropertyEnumeration"), [
          $asm06.TypeRef("System.Guid"), $.String, 
          $.String, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumInstallerDeployments", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreDeploymentMetadataEnumeration"), [
          $asm06.TypeRef("System.Guid"), $.String, 
          $.String, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumPrivateFiles", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreAssemblyFileEnumeration"), [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "EnumSubcategories", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "EnumSubcategories", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreSubcategoryEnumeration"), [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_InternalStore", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "GetAssemblyIdentity", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetAssemblyManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICMS"), [$.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "GetDeploymentProperty", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags"), $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference"), $asm06.TypeRef("System.Guid"), 
          $.String
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "LockApplicationPath", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "LockAssemblyPath", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "QueryChangeID", 
      new JSIL.MethodSignature($.UInt64, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Transact", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.UInt32]), [$jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")])])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "Transact", 
      new JSIL.MethodSignature(null, [
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), $jsilcore.TypeRef("System.Array", [$.UInt32]), 
          $jsilcore.TypeRef("System.Array", [$.Int32])
        ])
    );

    $.Field({Static:false, Public:false}, "_pStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore")); 
    $.Property({Static:false, Public:true }, "InternalStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumAssembliesFlags", false, {
    Nothing: 0, 
    VisibleOnly: 1, 
    MatchServicing: 2, 
    ForceLibrarySemantics: 4
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumAssemblyFilesFlags", false, {
    Nothing: 0, 
    IncludeInstalled: 1, 
    IncludeMissing: 2
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumApplicationPrivateFiles", false, {
    Nothing: 0, 
    IncludeInstalled: 1, 
    IncludeMissing: 2
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumAssemblyInstallReferenceFlags", false, {
    Nothing: 0
  }, true
);

/* interface System.Deployment.Internal.Isolation.Store+IPathLock */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Store+IPathLock", false, [], function ($) {
    $.Method({}, "get_Path", JSIL.MethodSignature.Return($.String));
    $.Property({}, "Path");
  }, [$asm06.TypeRef("System.IDisposable")]);

/* enum System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumCategoriesFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumSubcategoriesFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+EnumCategoryInstancesFlags", false, {
    Nothing: 0
  }, true
);

/* enum System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Store+GetPackagePropertyFlags", false, {
    Nothing: 0
  }, true
);

/* class System.Deployment.Internal.Isolation.Store+AssemblyPathLock */ 

(function AssemblyPathLock$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Store+AssemblyPathLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore"), $asm06.TypeRef("System.IntPtr"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_pSourceStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore")); 
    $.Field({Static:false, Public:false}, "_pLockCookie", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "_path", $.String); 
    $.Property({Static:false, Public:true , Virtual:true }, "Path", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), 
      /* 1 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.Isolation.Store+ApplicationPathLock */ 

(function ApplicationPathLock$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Store+ApplicationPathLock", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore"), $asm06.TypeRef("System.IntPtr"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "_pSourceStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore")); 
    $.Field({Static:false, Public:false}, "_pLockCookie", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "_path", $.String); 
    $.Property({Static:false, Public:true , Virtual:true }, "Path", $.String);

    $.ImplementInterfaces(
      /* 0 */ $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store+IPathLock"), 
      /* 1 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.IStore_BindingResult_BoundVersion */ 

(function IStore_BindingResult_BoundVersion$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IStore_BindingResult_BoundVersion", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Revision", $.UInt16); 
    $.Field({Static:false, Public:true }, "Build", $.UInt16); 
    $.Field({Static:false, Public:true }, "Minor", $.UInt16); 
    $.Field({Static:false, Public:true }, "Major", $.UInt16); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.IStore_BindingResult */ 

(function IStore_BindingResult$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IStore_BindingResult", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "Disposition", $.UInt32); 
    $.Field({Static:false, Public:true }, "Component", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IStore_BindingResult_BoundVersion")); 
    $.Field({Static:false, Public:true }, "CacheCoherencyGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "Reserved", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Deployment.Internal.Isolation.IStore */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IStore", false, [], function ($) {
    $.Method({}, "Transact", new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreTransactionOperation")]), 
          $jsilcore.TypeRef("System.Array", [$.UInt32]), $jsilcore.TypeRef("System.Array", [$.Int32])
        ]));
    $.Method({}, "BindReferenceToAssembly", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $.UInt32, $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "CalculateDelimiterOfDeploymentsBasedOnQuota", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")]), 
          $.UInt64, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt64]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt64])
        ]));
    $.Method({}, "BindDefinitions", new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]), $.UInt32, 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")])
        ]));
    $.Method({}, "GetAssemblyInformation", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumAssemblies", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumFiles", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumInstallationReferences", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "LockAssemblyPath", new JSIL.MethodSignature($.String, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])
        ]));
    $.Method({}, "ReleaseAssemblyPath", JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr")));
    $.Method({}, "QueryChangeID", new JSIL.MethodSignature($.UInt64, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]));
    $.Method({}, "EnumCategories", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumSubcategories", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumCategoryInstances", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "GetDeploymentProperty", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.BLOB")])
        ]));
    $.Method({}, "LockApplicationPath", new JSIL.MethodSignature($.String, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])
        ]));
    $.Method({}, "ReleaseApplicationPath", JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr")));
    $.Method({}, "EnumPrivateFiles", new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumInstallerDeploymentMetadata", new JSIL.MethodSignature($.Object, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")]), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
    $.Method({}, "EnumInstallerDeploymentMetadataProperties", new JSIL.MethodSignature($.Object, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.StoreApplicationReference")]), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["a5c62f6d-5e3e-4cd9-b345-6b281d7a1d1e"]; });

/* class System.Deployment.Internal.Isolation.IsolationInterop */ 

(function IsolationInterop$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Internal.Isolation.IsolationInterop", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CreateActContext", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IActContext"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")])
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "CreateActContext", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.IActContext"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateActContext", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateCMSFromXml", 
      new JSIL.MethodSignature($.Object, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.UInt32, 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IManifestParseErrorCallback"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_AppIdAuthority", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IAppIdAuthority"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_IdentityAuthority", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IIdentityAuthority"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "get_SystemStore", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_UserStore", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAppIdAuthority", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IAppIdAuthority"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetGuidOfType", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Guid"), [$asm06.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIdentityAuthority", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IIdentityAuthority"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetSystemStore", 
      new JSIL.MethodSignature($.Object, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetUserStateManager", 
      new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetUserStore", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetUserStore", 
      new JSIL.MethodSignature($.Object, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ParseManifest", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IManifestParseErrorCallback"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")])
        ])
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Constant({Static:true , Public:true }, "IsolationDllName", "clr.dll"); 
    $.Field({Static:true , Public:false}, "_synchObject", $.Object); 
    $.Field({Static:true , Public:false}, "_userStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"), null); 
    $.Field({Static:true , Public:false}, "_systemStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"), null); 
    $.Field({Static:true , Public:false}, "_idAuth", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IIdentityAuthority"), null); 
    $.Field({Static:true , Public:false}, "_appIdAuth", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IAppIdAuthority"), null); 
    $.Field({Static:true , Public:true }, "IID_ICMS", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IDefinitionIdentity", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IManifestInformation", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_ASSEMBLY", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_ASSEMBLY_FILE", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_CATEGORY", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_CATEGORY_INSTANCE", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_DEPLOYMENT_METADATA", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "IID_IStore", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "GUID_SXS_INSTALL_REFERENCE_SCHEME_OPAQUESTRING", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:true , Public:true }, "SXS_INSTALL_REFERENCE_SCHEME_SXS_STRONGNAME_SIGNED_PRIVATE_ASSEMBLY", $asm06.TypeRef("System.Guid")); 
    function IsolationInterop__cctor () {
      $thisType.IID_ICMS = new $asm06.System.Guid();
      $thisType.IID_IDefinitionIdentity = new $asm06.System.Guid();
      $thisType.IID_IManifestInformation = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_ASSEMBLY = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_ASSEMBLY_FILE = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_CATEGORY = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_CATEGORY_INSTANCE = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_DEPLOYMENT_METADATA = new $asm06.System.Guid();
      $thisType.IID_IEnumSTORE_DEPLOYMENT_METADATA_PROPERTY = new $asm06.System.Guid();
      $thisType.IID_IStore = new $asm06.System.Guid();
      $thisType.GUID_SXS_INSTALL_REFERENCE_SCHEME_OPAQUESTRING = new $asm06.System.Guid();
      $thisType.SXS_INSTALL_REFERENCE_SCHEME_SXS_STRONGNAME_SIGNED_PRIVATE_ASSEMBLY = new $asm06.System.Guid();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      IsolationInterop__cctor
    );

    $.Property({Static:true , Public:true }, "UserStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"));

    $.Property({Static:true , Public:true }, "SystemStore", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Store"));

    $.Property({Static:true , Public:true }, "IdentityAuthority", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IIdentityAuthority"));

    $.Property({Static:true , Public:true }, "AppIdAuthority", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IAppIdAuthority"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters */ 

(function CreateActContextParameters$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "CustomStoreList", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "CultureFallbackList", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ProcessorArchitectureList", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "Source", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ProcArch", $.UInt16); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters+CreateFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParameters+CreateFlags", false, {
    Nothing: 0, 
    StoreListValid: 1, 
    CultureListValid: 2, 
    ProcessorFallbackListValid: 4, 
    ProcessorValid: 8, 
    SourceValid: 16, 
    IgnoreVisibility: 32
  }, true
);

/* struct System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource */ 

(function CreateActContextParametersSource$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Destroy", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ToIntPtr", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "SourceType", $.UInt32); 
    $.Field({Static:false, Public:true }, "Data", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource+SourceFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSource+SourceFlags", false, {
    Definition: 1, 
    Reference: 2
  }, true
);

/* struct System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceReferenceAppid */ 

(function CreateActContextParametersSourceReferenceAppid$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceReferenceAppid", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Destroy", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true }, "ToIntPtr", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "AppId", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceAppId")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceDefinitionAppid */ 

(function CreateActContextParametersSourceDefinitionAppid$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.Isolation.IsolationInterop+CreateActContextParametersSourceDefinitionAppid", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Destroy", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ToIntPtr", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    )
      .Attribute($asm06.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:true }, "Size", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "AppId", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.Isolation.ApplicationContext */ 

(function ApplicationContext$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.ApplicationContext", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.IActContext"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.Isolation.ReferenceAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BasePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Components", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumDefinitionIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Identity", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionAppId"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_StateLocation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "GetComponentManifest", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICMS"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetComponentManifestPath", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetComponentPath", 
      new JSIL.MethodSignature($.String, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "MatchReference", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionIdentity"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.ReferenceIdentity")])
    );

    $.ExternalMethod({Static:false, Public:true }, "PrepareForExecution", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "ReplaceStrings", 
      new JSIL.MethodSignature($.String, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetApplicationState", 
      new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.ApplicationContext+ApplicationStateDisposition"), [$asm0A.TypeRef("System.Deployment.Internal.Isolation.ApplicationContext+ApplicationState")])
    );

    $.Field({Static:false, Public:false}, "_appcontext", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IActContext")); 
    $.Property({Static:false, Public:true }, "Identity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.DefinitionAppId"));

    $.Property({Static:false, Public:true }, "BasePath", $.String);

    $.Property({Static:false, Public:true }, "Components", $asm0A.TypeRef("System.Deployment.Internal.Isolation.EnumDefinitionIdentity"));

    $.Property({Static:false, Public:true }, "StateLocation", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.ApplicationContext+ApplicationState */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.ApplicationContext+ApplicationState", false, {
    Undefined: 0, 
    Starting: 1, 
    Running: 2
  }, false
);

/* enum System.Deployment.Internal.Isolation.ApplicationContext+ApplicationStateDisposition */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.ApplicationContext+ApplicationStateDisposition", false, {
    Undefined: 0, 
    Starting: 1, 
    Running: 2, 
    Starting_Migrated: 65537, 
    Running_FirstTime: 131074
  }, false
);

/* interface System.Deployment.Internal.Isolation.IManifestInformation */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IManifestInformation", false, [], function ($) {
    $.Method({}, "get_FullPath", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.String])));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["81c85208-fe61-4c15-b5bb-ff5ea66baad9"]; });

/* interface System.Deployment.Internal.Isolation.IActContext */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IActContext", false, [], function ($) {
    $.Method({}, "GetAppId", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Object])));
    $.Method({}, "EnumCategories", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "EnumSubcategories", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "EnumCategoryInstances", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "ReplaceStringMacros", new JSIL.MethodSignature(null, [
          $.UInt32, $.String, 
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "GetComponentStringTableStrings", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("System.Array", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])]), $asm06.TypeRef("System.IntPtr")
        ]));
    $.Method({}, "GetApplicationProperties", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.UIntPtr"), 
          $jsilcore.TypeRef("System.Array", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$.String])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.UIntPtr")])])
        ]));
    $.Method({}, "ApplicationBasePath", new JSIL.MethodSignature(null, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "GetComponentManifest", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Guid")]), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "GetComponentPayloadPath", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "FindReferenceInContext", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "CreateActContextFromCategoryInstance", new JSIL.MethodSignature(null, [
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.CATEGORY_INSTANCE")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]));
    $.Method({}, "EnumComponents", new JSIL.MethodSignature(null, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "PrepareForExecution", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.IntPtr")]));
    $.Method({}, "SetApplicationRunningState", new JSIL.MethodSignature(null, [
          $.UInt32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetApplicationStateFilesystemLocation", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.UIntPtr"), 
          $asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "FindComponentsByDefinition", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.UIntPtr"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")]), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.UIntPtr")]), 
          $jsilcore.TypeRef("System.Array", [$.UInt32])
        ]));
    $.Method({}, "FindComponentsByReference", new JSIL.MethodSignature(null, [
          $.UInt32, $asm06.TypeRef("System.UIntPtr"), 
          $jsilcore.TypeRef("System.Array", [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")]), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.UIntPtr")]), 
          $jsilcore.TypeRef("System.Array", [$.UInt32])
        ]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["0af57545-a72a-4fbe-813c-8554ed7d4528"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* enum System.Deployment.Internal.Isolation.StateManager_RunningState */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.StateManager_RunningState", false, {
    Undefined: 0, 
    Starting: 1, 
    Running: 2
  }, false
);

/* interface System.Deployment.Internal.Isolation.IStateManager */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IStateManager", false, [], function ($) {
    $.Method({}, "PrepareApplicationState", new JSIL.MethodSignature(null, [$asm06.TypeRef("System.UIntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.UIntPtr")])]));
    $.Method({}, "SetApplicationRunningState", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IActContext"), 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetApplicationStateFilesystemLocation", new JSIL.MethodSignature(null, [
          $.UInt32, $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionAppId"), 
          $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity"), $asm06.TypeRef("System.UIntPtr"), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]));
    $.Method({}, "Scavenge", new JSIL.MethodSignature(null, [$.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["07662534-750b-4ed5-9cfb-1c5bc5acfd07"]; });

JSIL.DeclareNamespace("System.Deployment.Internal.Isolation.Manifest");
/* enum System.Deployment.Internal.Isolation.Manifest.CMSSECTIONID */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMSSECTIONID", false, {
    CMSSECTIONID_FILE_SECTION: 1, 
    CMSSECTIONID_CATEGORY_INSTANCE_SECTION: 2, 
    CMSSECTIONID_COM_REDIRECTION_SECTION: 3, 
    CMSSECTIONID_PROGID_REDIRECTION_SECTION: 4, 
    CMSSECTIONID_CLR_SURROGATE_SECTION: 5, 
    CMSSECTIONID_ASSEMBLY_REFERENCE_SECTION: 6, 
    CMSSECTIONID_WINDOW_CLASS_SECTION: 8, 
    CMSSECTIONID_STRING_SECTION: 9, 
    CMSSECTIONID_ENTRYPOINT_SECTION: 10, 
    CMSSECTIONID_PERMISSION_SET_SECTION: 11, 
    CMSSECTIONENTRYID_METADATA: 12, 
    CMSSECTIONID_ASSEMBLY_REQUEST_SECTION: 13, 
    CMSSECTIONID_REGISTRY_KEY_SECTION: 16, 
    CMSSECTIONID_DIRECTORY_SECTION: 17, 
    CMSSECTIONID_FILE_ASSOCIATION_SECTION: 18, 
    CMSSECTIONID_COMPATIBLE_FRAMEWORKS_SECTION: 19, 
    CMSSECTIONID_EVENT_SECTION: 101, 
    CMSSECTIONID_EVENT_MAP_SECTION: 102, 
    CMSSECTIONID_EVENT_TAG_SECTION: 103, 
    CMSSECTIONID_COUNTERSET_SECTION: 110, 
    CMSSECTIONID_COUNTER_SECTION: 111
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_DEPLOYMENT_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_DEPLOYMENT_FLAG", false, {
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_BEFORE_APPLICATION_STARTUP: 4, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_RUN_AFTER_INSTALL: 16, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_INSTALL: 32, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_TRUST_URL_PARAMETERS: 64, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_DISALLOW_URL_ACTIVATION: 128, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_MAP_FILE_EXTENSIONS: 256, 
    CMS_ASSEMBLY_DEPLOYMENT_FLAG_CREATE_DESKTOP_SHORTCUT: 512
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_FLAG", false, {
    CMS_ASSEMBLY_REFERENCE_FLAG_OPTIONAL: 1, 
    CMS_ASSEMBLY_REFERENCE_FLAG_VISIBLE: 2, 
    CMS_ASSEMBLY_REFERENCE_FLAG_FOLLOW: 4, 
    CMS_ASSEMBLY_REFERENCE_FLAG_IS_PLATFORM: 8, 
    CMS_ASSEMBLY_REFERENCE_FLAG_CULTURE_WILDCARDED: 16, 
    CMS_ASSEMBLY_REFERENCE_FLAG_PROCESSOR_ARCHITECTURE_WILDCARDED: 32, 
    CMS_ASSEMBLY_REFERENCE_FLAG_PREREQUISITE: 128
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG", false, {
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_OPTIONAL: 1, 
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_VISIBLE: 2, 
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_PREREQUISITE: 4, 
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_RESOURCE_FALLBACK_CULTURE_INTERNAL: 8, 
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_INSTALL: 16, 
    CMS_ASSEMBLY_REFERENCE_DEPENDENT_ASSEMBLY_FLAG_ALLOW_DELAYED_BINDING: 32
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_FILE_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_FILE_FLAG", false, {
    CMS_FILE_FLAG_OPTIONAL: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_ENTRY_POINT_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_ENTRY_POINT_FLAG", false, {
    CMS_ENTRY_POINT_FLAG_HOST_IN_BROWSER: 1, 
    CMS_ENTRY_POINT_FLAG_CUSTOMHOSTSPECIFIED: 2, 
    CMS_ENTRY_POINT_FLAG_CUSTOMUX: 4
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_COM_SERVER_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_COM_SERVER_FLAG", false, {
    CMS_COM_SERVER_FLAG_IS_CLR_CLASS: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_KEY_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_KEY_FLAG", false, {
    CMS_REGISTRY_KEY_FLAG_OWNER: 1, 
    CMS_REGISTRY_KEY_FLAG_LEAF_IN_MANIFEST: 2
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_FLAG", false, {
    CMS_REGISTRY_VALUE_FLAG_OWNER: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_DIRECTORY_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_DIRECTORY_FLAG", false, {
    CMS_DIRECTORY_FLAG_OWNER: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_MANIFEST_FLAG */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_MANIFEST_FLAG", false, {
    CMS_MANIFEST_FLAG_ASSEMBLY: 1, 
    CMS_MANIFEST_FLAG_CATEGORY: 2, 
    CMS_MANIFEST_FLAG_FEATURE: 3, 
    CMS_MANIFEST_FLAG_APPLICATION: 4, 
    CMS_MANIFEST_FLAG_USEMANIFESTFORTRUST: 8
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_USAGE_PATTERN */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_USAGE_PATTERN", false, {
    CMS_USAGE_PATTERN_SCOPE_APPLICATION: 1, 
    CMS_USAGE_PATTERN_SCOPE_PROCESS: 2, 
    CMS_USAGE_PATTERN_SCOPE_MACHINE: 3, 
    CMS_USAGE_PATTERN_SCOPE_MASK: 7
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_SCHEMA_VERSION */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_SCHEMA_VERSION", false, {
    CMS_SCHEMA_VERSION_V1: 1
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_FILE_HASH_ALGORITHM */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_FILE_HASH_ALGORITHM", false, {
    CMS_FILE_HASH_ALGORITHM_SHA1: 1, 
    CMS_FILE_HASH_ALGORITHM_SHA256: 2, 
    CMS_FILE_HASH_ALGORITHM_SHA384: 3, 
    CMS_FILE_HASH_ALGORITHM_SHA512: 4, 
    CMS_FILE_HASH_ALGORITHM_MD5: 5, 
    CMS_FILE_HASH_ALGORITHM_MD4: 6, 
    CMS_FILE_HASH_ALGORITHM_MD2: 7
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_TIME_UNIT_TYPE */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_TIME_UNIT_TYPE", false, {
    CMS_TIME_UNIT_TYPE_HOURS: 1, 
    CMS_TIME_UNIT_TYPE_DAYS: 2, 
    CMS_TIME_UNIT_TYPE_WEEKS: 3, 
    CMS_TIME_UNIT_TYPE_MONTHS: 4
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_TYPE */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_TYPE", false, {
    CMS_REGISTRY_VALUE_TYPE_NONE: 0, 
    CMS_REGISTRY_VALUE_TYPE_SZ: 1, 
    CMS_REGISTRY_VALUE_TYPE_EXPAND_SZ: 2, 
    CMS_REGISTRY_VALUE_TYPE_MULTI_SZ: 3, 
    CMS_REGISTRY_VALUE_TYPE_BINARY: 4, 
    CMS_REGISTRY_VALUE_TYPE_DWORD: 5, 
    CMS_REGISTRY_VALUE_TYPE_DWORD_LITTLE_ENDIAN: 6, 
    CMS_REGISTRY_VALUE_TYPE_DWORD_BIG_ENDIAN: 7, 
    CMS_REGISTRY_VALUE_TYPE_LINK: 8, 
    CMS_REGISTRY_VALUE_TYPE_RESOURCE_LIST: 9, 
    CMS_REGISTRY_VALUE_TYPE_FULL_RESOURCE_DESCRIPTOR: 10, 
    CMS_REGISTRY_VALUE_TYPE_RESOURCE_REQUIREMENTS_LIST: 11, 
    CMS_REGISTRY_VALUE_TYPE_QWORD: 12, 
    CMS_REGISTRY_VALUE_TYPE_QWORD_LITTLE_ENDIAN: 13
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_HINT */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_REGISTRY_VALUE_HINT", false, {
    CMS_REGISTRY_VALUE_HINT_REPLACE: 1, 
    CMS_REGISTRY_VALUE_HINT_APPEND: 2, 
    CMS_REGISTRY_VALUE_HINT_PREPEND: 3
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_SYSTEM_PROTECTION */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_SYSTEM_PROTECTION", false, {
    CMS_SYSTEM_PROTECTION_READ_ONLY_IGNORE_WRITES: 1, 
    CMS_SYSTEM_PROTECTION_READ_ONLY_FAIL_WRITES: 2, 
    CMS_SYSTEM_PROTECTION_OS_ONLY_IGNORE_WRITES: 3, 
    CMS_SYSTEM_PROTECTION_OS_ONLY_FAIL_WRITES: 4, 
    CMS_SYSTEM_PROTECTION_TRANSACTED: 5, 
    CMS_SYSTEM_PROTECTION_APPLICATION_VIRTUALIZED: 6, 
    CMS_SYSTEM_PROTECTION_USER_VIRTUALIZED: 7, 
    CMS_SYSTEM_PROTECTION_APPLICATION_AND_USER_VIRTUALIZED: 8, 
    CMS_SYSTEM_PROTECTION_INHERIT: 9, 
    CMS_SYSTEM_PROTECTION_NOT_PROTECTED: 10
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_FILE_WRITABLE_TYPE */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_FILE_WRITABLE_TYPE", false, {
    CMS_FILE_WRITABLE_TYPE_NOT_WRITABLE: 1, 
    CMS_FILE_WRITABLE_TYPE_APPLICATION_DATA: 2
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_HASH_TRANSFORM", false, {
    CMS_HASH_TRANSFORM_IDENTITY: 1, 
    CMS_HASH_TRANSFORM_MANIFESTINVARIANT: 2
  }, false
);

/* enum System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CMS_HASH_DIGESTMETHOD", false, {
    CMS_HASH_DIGESTMETHOD_SHA1: 1, 
    CMS_HASH_DIGESTMETHOD_SHA256: 2, 
    CMS_HASH_DIGESTMETHOD_SHA384: 3, 
    CMS_HASH_DIGESTMETHOD_SHA512: 4
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICMS */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICMS", false, [], function ($) {
    $.Method({}, "get_Identity", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")));
    $.Method({}, "get_FileSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_CategoryMembershipSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_COMRedirectionSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_ProgIdRedirectionSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_CLRSurrogateSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_AssemblyReferenceSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_WindowClassSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_StringSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_EntryPointSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_PermissionSetSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_MetadataSectionEntry", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISectionEntry")));
    $.Method({}, "get_AssemblyRequestSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_RegistryKeySection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_DirectorySection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_FileAssociationSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_CompatibleFrameworksSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_EventSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_EventMapSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_EventTagSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_CounterSetSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Method({}, "get_CounterSection", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Property({}, "Identity");
    $.Property({}, "FileSection");
    $.Property({}, "CategoryMembershipSection");
    $.Property({}, "COMRedirectionSection");
    $.Property({}, "ProgIdRedirectionSection");
    $.Property({}, "CLRSurrogateSection");
    $.Property({}, "AssemblyReferenceSection");
    $.Property({}, "WindowClassSection");
    $.Property({}, "StringSection");
    $.Property({}, "EntryPointSection");
    $.Property({}, "PermissionSetSection");
    $.Property({}, "MetadataSectionEntry");
    $.Property({}, "AssemblyRequestSection");
    $.Property({}, "RegistryKeySection");
    $.Property({}, "DirectorySection");
    $.Property({}, "FileAssociationSection");
    $.Property({}, "CompatibleFrameworksSection");
    $.Property({}, "EventSection");
    $.Property({}, "EventMapSection");
    $.Property({}, "EventTagSection");
    $.Property({}, "CounterSetSection");
    $.Property({}, "CounterSection");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["a504e5b0-8ccf-4cb4-9902-c9d1b9abd033"]; });

/* class System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntry */ 

(function MuiResourceIdLookupMapEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Count", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntryFieldId", false, {
    MuiResourceIdLookupMap_Count: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IMuiResourceIdLookupMapEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IMuiResourceIdLookupMapEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MuiResourceIdLookupMapEntry")));
    $.Method({}, "get_Count", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "Count");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["24abe1f7-a396-4a03-9adf-1d5b86a5569f"]; });

/* class System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntry */ 

(function MuiResourceTypeIdStringEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "StringIds", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "StringIdsSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "IntegerIds", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "IntegerIdsSize", $.UInt32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntryFieldId", false, {
    MuiResourceTypeIdString_StringIds: 0, 
    MuiResourceTypeIdString_StringIdsSize: 1, 
    MuiResourceTypeIdString_IntegerIds: 2, 
    MuiResourceTypeIdString_IntegerIdsSize: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdStringEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdStringEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdStringEntry")));
    $.Method({}, "get_StringIds", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_IntegerIds", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "AllData");
    $.Property({}, "StringIds");
    $.Property({}, "IntegerIds");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["11df5cad-c183-479b-9a44-3842b71639ce"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntry */ 

(function MuiResourceTypeIdIntEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "StringIds", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "StringIdsSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "IntegerIds", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "IntegerIdsSize", $.UInt32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntryFieldId", false, {
    MuiResourceTypeIdInt_StringIds: 0, 
    MuiResourceTypeIdInt_StringIdsSize: 1, 
    MuiResourceTypeIdInt_IntegerIds: 2, 
    MuiResourceTypeIdInt_IntegerIdsSize: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdIntEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IMuiResourceTypeIdIntEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MuiResourceTypeIdIntEntry")));
    $.Method({}, "get_StringIds", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_IntegerIds", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "AllData");
    $.Property({}, "StringIds");
    $.Property({}, "IntegerIds");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["55b2dec1-d0f6-4bf4-91b1-30f73ad8e4df"]; });

/* class System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry */ 

(function MuiResourceMapEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "ResourceTypeIdInt", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ResourceTypeIdIntSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "ResourceTypeIdString", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ResourceTypeIdStringSize", $.UInt32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntryFieldId", false, {
    MuiResourceMap_ResourceTypeIdInt: 0, 
    MuiResourceMap_ResourceTypeIdIntSize: 1, 
    MuiResourceMap_ResourceTypeIdString: 2, 
    MuiResourceMap_ResourceTypeIdStringSize: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IMuiResourceMapEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IMuiResourceMapEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry")));
    $.Method({}, "get_ResourceTypeIdInt", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_ResourceTypeIdString", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "AllData");
    $.Property({}, "ResourceTypeIdInt");
    $.Property({}, "ResourceTypeIdString");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["397927f5-10f2-4ecb-bfe1-3c264212a193"]; });

/* class System.Deployment.Internal.Isolation.Manifest.HashElementEntry */ 

(function HashElementEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.HashElementEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "index", $.UInt32); 
    $.Field({Static:false, Public:true }, "Transform", $.Byte); 
    $.Field({Static:false, Public:true }, "TransformMetadata", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "TransformMetadataSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "DigestMethod", $.Byte); 
    $.Field({Static:false, Public:true }, "DigestValue", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "DigestValueSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "Xml", $.String); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.HashElementEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.HashElementEntryFieldId", false, {
    HashElement_Transform: 0, 
    HashElement_TransformMetadata: 1, 
    HashElement_TransformMetadataSize: 2, 
    HashElement_DigestMethod: 3, 
    HashElement_DigestValue: 4, 
    HashElement_DigestValueSize: 5, 
    HashElement_Xml: 6
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IHashElementEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IHashElementEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.HashElementEntry")));
    $.Method({}, "get_index", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Transform", JSIL.MethodSignature.Return($.Byte));
    $.Method({}, "get_TransformMetadata", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_DigestMethod", JSIL.MethodSignature.Return($.Byte));
    $.Method({}, "get_DigestValue", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Xml", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "index");
    $.Property({}, "Transform");
    $.Property({}, "TransformMetadata");
    $.Property({}, "DigestMethod");
    $.Property({}, "DigestValue");
    $.Property({}, "Xml");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9D46FB70-7B54-4f4f-9331-BA9E87833FF5"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.FileEntry */ 

(function FileEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.FileEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "HashAlgorithm", $.UInt32); 
    $.Field({Static:false, Public:true }, "LoadFrom", $.String); 
    $.Field({Static:false, Public:true }, "SourcePath", $.String); 
    $.Field({Static:false, Public:true }, "ImportPath", $.String); 
    $.Field({Static:false, Public:true }, "SourceName", $.String); 
    $.Field({Static:false, Public:true }, "Location", $.String); 
    $.Field({Static:false, Public:true }, "HashValue", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "HashValueSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "Size", $.UInt64); 
    $.Field({Static:false, Public:true }, "Group", $.String); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "MuiMapping", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MuiResourceMapEntry")); 
    $.Field({Static:false, Public:true }, "WritableType", $.UInt32); 
    $.Field({Static:false, Public:true }, "HashElements", $asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.FileEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.FileEntryFieldId", false, {
    File_HashAlgorithm: 0, 
    File_LoadFrom: 1, 
    File_SourcePath: 2, 
    File_ImportPath: 3, 
    File_SourceName: 4, 
    File_Location: 5, 
    File_HashValue: 6, 
    File_HashValueSize: 7, 
    File_Size: 8, 
    File_Group: 9, 
    File_Flags: 10, 
    File_MuiMapping: 11, 
    File_WritableType: 12, 
    File_HashElements: 13
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IFileEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IFileEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.FileEntry")));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HashAlgorithm", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_LoadFrom", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SourcePath", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_ImportPath", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SourceName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Location", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HashValue", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Size", JSIL.MethodSignature.Return($.UInt64));
    $.Method({}, "get_Group", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_MuiMapping", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.IMuiResourceMapEntry")));
    $.Method({}, "get_WritableType", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_HashElements", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Property({}, "AllData");
    $.Property({}, "Name");
    $.Property({}, "HashAlgorithm");
    $.Property({}, "LoadFrom");
    $.Property({}, "SourcePath");
    $.Property({}, "ImportPath");
    $.Property({}, "SourceName");
    $.Property({}, "Location");
    $.Property({}, "HashValue");
    $.Property({}, "Size");
    $.Property({}, "Group");
    $.Property({}, "Flags");
    $.Property({}, "MuiMapping");
    $.Property({}, "WritableType");
    $.Property({}, "HashElements");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["A2A55FAD-349B-469b-BF12-ADC33D14A937"]; });

/* class System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry */ 

(function FileAssociationEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Extension", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    $.Field({Static:false, Public:true }, "ProgID", $.String); 
    $.Field({Static:false, Public:true }, "DefaultIcon", $.String); 
    $.Field({Static:false, Public:true }, "Parameter", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.FileAssociationEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.FileAssociationEntryFieldId", false, {
    FileAssociation_Description: 0, 
    FileAssociation_ProgID: 1, 
    FileAssociation_DefaultIcon: 2, 
    FileAssociation_Parameter: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IFileAssociationEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IFileAssociationEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.FileAssociationEntry")));
    $.Method({}, "get_Extension", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_ProgID", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_DefaultIcon", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Parameter", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Extension");
    $.Property({}, "Description");
    $.Property({}, "ProgID");
    $.Property({}, "DefaultIcon");
    $.Property({}, "Parameter");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["0C66F299-E08E-48c5-9264-7CCBEB4D5CBB"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntry */ 

(function CategoryMembershipDataEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "index", $.UInt32); 
    $.Field({Static:false, Public:true }, "Xml", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntryFieldId", false, {
    CategoryMembershipData_Xml: 0, 
    CategoryMembershipData_Description: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipDataEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipDataEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipDataEntry")));
    $.Method({}, "get_index", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Xml", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "index");
    $.Property({}, "Xml");
    $.Property({}, "Description");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["DA0C3B27-6B6B-4b80-A8F8-6CE14F4BC0A4"]; });

/* class System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntry */ 

(function SubcategoryMembershipEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Subcategory", $.String); 
    $.Field({Static:false, Public:true }, "CategoryMembershipData", $asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntryFieldId", false, {
    SubcategoryMembership_CategoryMembershipData: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ISubcategoryMembershipEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ISubcategoryMembershipEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.SubcategoryMembershipEntry")));
    $.Method({}, "get_Subcategory", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CategoryMembershipData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Property({}, "AllData");
    $.Property({}, "Subcategory");
    $.Property({}, "CategoryMembershipData");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["5A7A54D7-5AD5-418e-AB7A-CF823A8D48D0"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntry */ 

(function CategoryMembershipEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Identity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "SubcategoryMembership", $asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntryFieldId", false, {
    CategoryMembership_SubcategoryMembership: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICategoryMembershipEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CategoryMembershipEntry")));
    $.Method({}, "get_Identity", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")));
    $.Method({}, "get_SubcategoryMembership", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Property({}, "AllData");
    $.Property({}, "Identity");
    $.Property({}, "SubcategoryMembership");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["97FDCA77-B6F2-4718-A1EB-29D0AECE9C03"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.COMServerEntry */ 

(function COMServerEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.COMServerEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Clsid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "ConfiguredGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "ImplementedClsid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "TypeLibrary", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "ThreadingModel", $.UInt32); 
    $.Field({Static:false, Public:true }, "RuntimeVersion", $.String); 
    $.Field({Static:false, Public:true }, "HostFile", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.COMServerEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.COMServerEntryFieldId", false, {
    COMServer_Flags: 0, 
    COMServer_ConfiguredGuid: 1, 
    COMServer_ImplementedClsid: 2, 
    COMServer_TypeLibrary: 3, 
    COMServer_ThreadingModel: 4, 
    COMServer_RuntimeVersion: 5, 
    COMServer_HostFile: 6
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICOMServerEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICOMServerEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.COMServerEntry")));
    $.Method({}, "get_Clsid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_ConfiguredGuid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_ImplementedClsid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_TypeLibrary", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_ThreadingModel", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_RuntimeVersion", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HostFile", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Clsid");
    $.Property({}, "Flags");
    $.Property({}, "ConfiguredGuid");
    $.Property({}, "ImplementedClsid");
    $.Property({}, "TypeLibrary");
    $.Property({}, "ThreadingModel");
    $.Property({}, "RuntimeVersion");
    $.Property({}, "HostFile");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["3903B11B-FBE8-477c-825F-DB828B5FD174"]; });

/* class System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntry */ 

(function ProgIdRedirectionEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "ProgId", $.String); 
    $.Field({Static:false, Public:true }, "RedirectedGuid", $asm06.TypeRef("System.Guid")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntryFieldId", false, {
    ProgIdRedirection_RedirectedGuid: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IProgIdRedirectionEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IProgIdRedirectionEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ProgIdRedirectionEntry")));
    $.Method({}, "get_ProgId", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_RedirectedGuid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Property({}, "AllData");
    $.Property({}, "ProgId");
    $.Property({}, "RedirectedGuid");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["54F198EC-A63A-45ea-A984-452F68D9B35B"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntry */ 

(function CLRSurrogateEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Clsid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "RuntimeVersion", $.String); 
    $.Field({Static:false, Public:true }, "ClassName", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntryFieldId", false, {
    CLRSurrogate_RuntimeVersion: 0, 
    CLRSurrogate_ClassName: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICLRSurrogateEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICLRSurrogateEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CLRSurrogateEntry")));
    $.Method({}, "get_Clsid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_RuntimeVersion", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_ClassName", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Clsid");
    $.Property({}, "RuntimeVersion");
    $.Property({}, "ClassName");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1E0422A1-F0D2-44ae-914B-8A2DECCFD22B"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry */ 

(function AssemblyReferenceDependentAssemblyEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Group", $.String); 
    $.Field({Static:false, Public:true }, "Codebase", $.String); 
    $.Field({Static:false, Public:true }, "Size", $.UInt64); 
    $.Field({Static:false, Public:true }, "HashValue", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "HashValueSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "HashAlgorithm", $.UInt32); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "ResourceFallbackCulture", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    $.Field({Static:false, Public:true }, "SupportUrl", $.String); 
    $.Field({Static:false, Public:true }, "HashElements", $asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntryFieldId", false, {
    AssemblyReferenceDependentAssembly_Group: 0, 
    AssemblyReferenceDependentAssembly_Codebase: 1, 
    AssemblyReferenceDependentAssembly_Size: 2, 
    AssemblyReferenceDependentAssembly_HashValue: 3, 
    AssemblyReferenceDependentAssembly_HashValueSize: 4, 
    AssemblyReferenceDependentAssembly_HashAlgorithm: 5, 
    AssemblyReferenceDependentAssembly_Flags: 6, 
    AssemblyReferenceDependentAssembly_ResourceFallbackCulture: 7, 
    AssemblyReferenceDependentAssembly_Description: 8, 
    AssemblyReferenceDependentAssembly_SupportUrl: 9, 
    AssemblyReferenceDependentAssembly_HashElements: 10
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceDependentAssemblyEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceDependentAssemblyEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry")));
    $.Method({}, "get_Group", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Codebase", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Size", JSIL.MethodSignature.Return($.UInt64));
    $.Method({}, "get_HashValue", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_HashAlgorithm", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_ResourceFallbackCulture", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SupportUrl", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HashElements", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection")));
    $.Property({}, "AllData");
    $.Property({}, "Group");
    $.Property({}, "Codebase");
    $.Property({}, "Size");
    $.Property({}, "HashValue");
    $.Property({}, "HashAlgorithm");
    $.Property({}, "Flags");
    $.Property({}, "ResourceFallbackCulture");
    $.Property({}, "Description");
    $.Property({}, "SupportUrl");
    $.Property({}, "HashElements");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["C31FF59E-CD25-47b8-9EF3-CF4433EB97CC"]; });

/* class System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry */ 

(function AssemblyReferenceEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "ReferenceIdentity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "DependentAssembly", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceDependentAssemblyEntry")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntryFieldId", false, {
    AssemblyReference_Flags: 0, 
    AssemblyReference_DependentAssembly: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.AssemblyReferenceEntry")));
    $.Method({}, "get_ReferenceIdentity", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_DependentAssembly", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.IAssemblyReferenceDependentAssemblyEntry")));
    $.Property({}, "AllData");
    $.Property({}, "ReferenceIdentity");
    $.Property({}, "Flags");
    $.Property({}, "DependentAssembly");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["FD47B733-AFBC-45e4-B7C2-BBEB1D9F766C"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.WindowClassEntry */ 

(function WindowClassEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.WindowClassEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "ClassName", $.String); 
    $.Field({Static:false, Public:true }, "HostDll", $.String); 
    $.Field({Static:false, Public:true }, "fVersioned", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.WindowClassEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.WindowClassEntryFieldId", false, {
    WindowClass_HostDll: 0, 
    WindowClass_fVersioned: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IWindowClassEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IWindowClassEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.WindowClassEntry")));
    $.Method({}, "get_ClassName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HostDll", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_fVersioned", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "AllData");
    $.Property({}, "ClassName");
    $.Property({}, "HostDll");
    $.Property({}, "fVersioned");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8AD3FC86-AFD3-477a-8FD5-146C291195BA"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntry */ 

(function ResourceTableMappingEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "id", $.String); 
    $.Field({Static:false, Public:true }, "FinalStringMapped", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntryFieldId", false, {
    ResourceTableMapping_FinalStringMapped: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IResourceTableMappingEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IResourceTableMappingEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ResourceTableMappingEntry")));
    $.Method({}, "get_id", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_FinalStringMapped", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "id");
    $.Property({}, "FinalStringMapped");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["70A4ECEE-B195-4c59-85BF-44B6ACA83F07"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.EntryPointEntry */ 

(function EntryPointEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.EntryPointEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "CommandLine_File", $.String); 
    $.Field({Static:false, Public:true }, "CommandLine_Parameters", $.String); 
    $.Field({Static:false, Public:true }, "Identity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.EntryPointEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.EntryPointEntryFieldId", false, {
    EntryPoint_CommandLine_File: 0, 
    EntryPoint_CommandLine_Parameters: 1, 
    EntryPoint_Identity: 2, 
    EntryPoint_Flags: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IEntryPointEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IEntryPointEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.EntryPointEntry")));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CommandLine_File", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CommandLine_Parameters", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Identity", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "Name");
    $.Property({}, "CommandLine_File");
    $.Property({}, "CommandLine_Parameters");
    $.Property({}, "Identity");
    $.Property({}, "Flags");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["1583EFE9-832F-4d08-B041-CAC5ACEDB948"]; });

/* class System.Deployment.Internal.Isolation.Manifest.PermissionSetEntry */ 

(function PermissionSetEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.PermissionSetEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Id", $.String); 
    $.Field({Static:false, Public:true }, "XmlSegment", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.PermissionSetEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.PermissionSetEntryFieldId", false, {
    PermissionSet_XmlSegment: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IPermissionSetEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IPermissionSetEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.PermissionSetEntry")));
    $.Method({}, "get_Id", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_XmlSegment", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Id");
    $.Property({}, "XmlSegment");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["EBE5A1ED-FEBC-42c4-A9E1-E087C6E36635"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntry */ 

(function AssemblyRequestEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "permissionSetID", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntryFieldId", false, {
    AssemblyRequest_permissionSetID: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IAssemblyRequestEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IAssemblyRequestEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.AssemblyRequestEntry")));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_permissionSetID", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Name");
    $.Property({}, "permissionSetID");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["2474ECB4-8EFD-4410-9F31-B3E7C4A07731"]; });

/* class System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry */ 

(function DescriptionMetadataEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Publisher", $.String); 
    $.Field({Static:false, Public:true }, "Product", $.String); 
    $.Field({Static:false, Public:true }, "SupportUrl", $.String); 
    $.Field({Static:false, Public:true }, "IconFile", $.String); 
    $.Field({Static:false, Public:true }, "ErrorReportUrl", $.String); 
    $.Field({Static:false, Public:true }, "SuiteName", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntryFieldId", false, {
    DescriptionMetadata_Publisher: 0, 
    DescriptionMetadata_Product: 1, 
    DescriptionMetadata_SupportUrl: 2, 
    DescriptionMetadata_IconFile: 3, 
    DescriptionMetadata_ErrorReportUrl: 4, 
    DescriptionMetadata_SuiteName: 5
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IDescriptionMetadataEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IDescriptionMetadataEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry")));
    $.Method({}, "get_Publisher", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Product", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SupportUrl", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_IconFile", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_ErrorReportUrl", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SuiteName", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Publisher");
    $.Property({}, "Product");
    $.Property({}, "SupportUrl");
    $.Property({}, "IconFile");
    $.Property({}, "ErrorReportUrl");
    $.Property({}, "SuiteName");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CB73147E-5FC2-4c31-B4E6-58D13DBE1A08"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry */ 

(function DeploymentMetadataEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "DeploymentProviderCodebase", $.String); 
    $.Field({Static:false, Public:true }, "MinimumRequiredVersion", $.String); 
    $.Field({Static:false, Public:true }, "MaximumAge", $.UInt16); 
    $.Field({Static:false, Public:true }, "MaximumAge_Unit", $.Byte); 
    $.Field({Static:false, Public:true }, "DeploymentFlags", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntryFieldId", false, {
    DeploymentMetadata_DeploymentProviderCodebase: 0, 
    DeploymentMetadata_MinimumRequiredVersion: 1, 
    DeploymentMetadata_MaximumAge: 2, 
    DeploymentMetadata_MaximumAge_Unit: 3, 
    DeploymentMetadata_DeploymentFlags: 4
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IDeploymentMetadataEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IDeploymentMetadataEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry")));
    $.Method({}, "get_DeploymentProviderCodebase", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_MinimumRequiredVersion", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_MaximumAge", JSIL.MethodSignature.Return($.UInt16));
    $.Method({}, "get_MaximumAge_Unit", JSIL.MethodSignature.Return($.Byte));
    $.Method({}, "get_DeploymentFlags", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "DeploymentProviderCodebase");
    $.Property({}, "MinimumRequiredVersion");
    $.Property({}, "MaximumAge");
    $.Property({}, "MaximumAge_Unit");
    $.Property({}, "DeploymentFlags");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CFA3F59F-334D-46bf-A5A5-5D11BB2D7EBC"]; });

/* class System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry */ 

(function DependentOSMetadataEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "SupportUrl", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    $.Field({Static:false, Public:true }, "MajorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "MinorVersion", $.UInt16); 
    $.Field({Static:false, Public:true }, "BuildNumber", $.UInt16); 
    $.Field({Static:false, Public:true }, "ServicePackMajor", $.Byte); 
    $.Field({Static:false, Public:true }, "ServicePackMinor", $.Byte); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntryFieldId", false, {
    DependentOSMetadata_SupportUrl: 0, 
    DependentOSMetadata_Description: 1, 
    DependentOSMetadata_MajorVersion: 2, 
    DependentOSMetadata_MinorVersion: 3, 
    DependentOSMetadata_BuildNumber: 4, 
    DependentOSMetadata_ServicePackMajor: 5, 
    DependentOSMetadata_ServicePackMinor: 6
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IDependentOSMetadataEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IDependentOSMetadataEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry")));
    $.Method({}, "get_SupportUrl", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_MajorVersion", JSIL.MethodSignature.Return($.UInt16));
    $.Method({}, "get_MinorVersion", JSIL.MethodSignature.Return($.UInt16));
    $.Method({}, "get_BuildNumber", JSIL.MethodSignature.Return($.UInt16));
    $.Method({}, "get_ServicePackMajor", JSIL.MethodSignature.Return($.Byte));
    $.Method({}, "get_ServicePackMinor", JSIL.MethodSignature.Return($.Byte));
    $.Property({}, "AllData");
    $.Property({}, "SupportUrl");
    $.Property({}, "Description");
    $.Property({}, "MajorVersion");
    $.Property({}, "MinorVersion");
    $.Property({}, "BuildNumber");
    $.Property({}, "ServicePackMajor");
    $.Property({}, "ServicePackMinor");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["CF168CF4-4E8F-4d92-9D2A-60E5CA21CF85"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry */ 

(function CompatibleFrameworksMetadataEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "SupportUrl", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntryFieldId", false, {
    CompatibleFrameworksMetadata_SupportUrl: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworksMetadataEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworksMetadataEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry")));
    $.Method({}, "get_SupportUrl", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "SupportUrl");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["4A33D662-2210-463A-BE9F-FBDF1AA554E3"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntry */ 

(function MetadataSectionEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "SchemaVersion", $.UInt32); 
    $.Field({Static:false, Public:true }, "ManifestFlags", $.UInt32); 
    $.Field({Static:false, Public:true }, "UsagePatterns", $.UInt32); 
    $.Field({Static:false, Public:true }, "CdfIdentity", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")); 
    $.Field({Static:false, Public:true }, "LocalPath", $.String); 
    $.Field({Static:false, Public:true }, "HashAlgorithm", $.UInt32); 
    $.Field({Static:false, Public:true }, "ManifestHash", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ManifestHashSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "ContentType", $.String); 
    $.Field({Static:false, Public:true }, "RuntimeImageVersion", $.String); 
    $.Field({Static:false, Public:true }, "MvidValue", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "MvidValueSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "DescriptionData", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DescriptionMetadataEntry")); 
    $.Field({Static:false, Public:true }, "DeploymentData", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DeploymentMetadataEntry")); 
    $.Field({Static:false, Public:true }, "DependentOSData", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DependentOSMetadataEntry")); 
    $.Field({Static:false, Public:true }, "defaultPermissionSetID", $.String); 
    $.Field({Static:false, Public:true }, "RequestedExecutionLevel", $.String); 
    $.Field({Static:false, Public:true }, "RequestedExecutionLevelUIAccess", $.Boolean); 
    $.Field({Static:false, Public:true }, "ResourceTypeResourcesDependency", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Field({Static:false, Public:true }, "ResourceTypeManifestResourcesDependency", $asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")); 
    $.Field({Static:false, Public:true }, "KeyInfoElement", $.String); 
    $.Field({Static:false, Public:true }, "CompatibleFrameworksData", $asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworksMetadataEntry")); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntryFieldId", false, {
    MetadataSection_SchemaVersion: 0, 
    MetadataSection_ManifestFlags: 1, 
    MetadataSection_UsagePatterns: 2, 
    MetadataSection_CdfIdentity: 3, 
    MetadataSection_LocalPath: 4, 
    MetadataSection_HashAlgorithm: 5, 
    MetadataSection_ManifestHash: 6, 
    MetadataSection_ManifestHashSize: 7, 
    MetadataSection_ContentType: 8, 
    MetadataSection_RuntimeImageVersion: 9, 
    MetadataSection_MvidValue: 10, 
    MetadataSection_MvidValueSize: 11, 
    MetadataSection_DescriptionData: 12, 
    MetadataSection_DeploymentData: 13, 
    MetadataSection_DependentOSData: 14, 
    MetadataSection_defaultPermissionSetID: 15, 
    MetadataSection_RequestedExecutionLevel: 16, 
    MetadataSection_RequestedExecutionLevelUIAccess: 17, 
    MetadataSection_ResourceTypeResourcesDependency: 18, 
    MetadataSection_ResourceTypeManifestResourcesDependency: 19, 
    MetadataSection_KeyInfoElement: 20, 
    MetadataSection_CompatibleFrameworksData: 21
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IMetadataSectionEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IMetadataSectionEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.MetadataSectionEntry")));
    $.Method({}, "get_SchemaVersion", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_ManifestFlags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_UsagePatterns", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_CdfIdentity", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IDefinitionIdentity")));
    $.Method({}, "get_LocalPath", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_HashAlgorithm", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_ManifestHash", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_ContentType", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_RuntimeImageVersion", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_MvidValue", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_DescriptionData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.IDescriptionMetadataEntry")));
    $.Method({}, "get_DeploymentData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.IDeploymentMetadataEntry")));
    $.Method({}, "get_DependentOSData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.IDependentOSMetadataEntry")));
    $.Method({}, "get_defaultPermissionSetID", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_RequestedExecutionLevel", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_RequestedExecutionLevelUIAccess", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "get_ResourceTypeResourcesDependency", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")));
    $.Method({}, "get_ResourceTypeManifestResourcesDependency", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity")));
    $.Method({}, "get_KeyInfoElement", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CompatibleFrameworksData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworksMetadataEntry")));
    $.Property({}, "AllData");
    $.Property({}, "SchemaVersion");
    $.Property({}, "ManifestFlags");
    $.Property({}, "UsagePatterns");
    $.Property({}, "CdfIdentity");
    $.Property({}, "LocalPath");
    $.Property({}, "HashAlgorithm");
    $.Property({}, "ManifestHash");
    $.Property({}, "ContentType");
    $.Property({}, "RuntimeImageVersion");
    $.Property({}, "MvidValue");
    $.Property({}, "DescriptionData");
    $.Property({}, "DeploymentData");
    $.Property({}, "DependentOSData");
    $.Property({}, "defaultPermissionSetID");
    $.Property({}, "RequestedExecutionLevel");
    $.Property({}, "RequestedExecutionLevelUIAccess");
    $.Property({}, "ResourceTypeResourcesDependency");
    $.Property({}, "ResourceTypeManifestResourcesDependency");
    $.Property({}, "KeyInfoElement");
    $.Property({}, "CompatibleFrameworksData");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["AB1ED79F-943E-407d-A80B-0744E3A95B28"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.EventEntry */ 

(function EventEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.EventEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "EventID", $.UInt32); 
    $.Field({Static:false, Public:true }, "Level", $.UInt32); 
    $.Field({Static:false, Public:true }, "Version", $.UInt32); 
    $.Field({Static:false, Public:true }, "Guid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "SubTypeName", $.String); 
    $.Field({Static:false, Public:true }, "SubTypeValue", $.UInt32); 
    $.Field({Static:false, Public:true }, "DisplayName", $.String); 
    $.Field({Static:false, Public:true }, "EventNameMicrodomIndex", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.EventEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.EventEntryFieldId", false, {
    Event_Level: 0, 
    Event_Version: 1, 
    Event_Guid: 2, 
    Event_SubTypeName: 3, 
    Event_SubTypeValue: 4, 
    Event_DisplayName: 5, 
    Event_EventNameMicrodomIndex: 6
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IEventEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IEventEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.EventEntry")));
    $.Method({}, "get_EventID", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Level", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Version", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Guid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_SubTypeName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SubTypeValue", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_DisplayName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_EventNameMicrodomIndex", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "EventID");
    $.Property({}, "Level");
    $.Property({}, "Version");
    $.Property({}, "Guid");
    $.Property({}, "SubTypeName");
    $.Property({}, "SubTypeValue");
    $.Property({}, "DisplayName");
    $.Property({}, "EventNameMicrodomIndex");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8AD3FC86-AFD3-477a-8FD5-146C291195BB"]; });

/* class System.Deployment.Internal.Isolation.Manifest.EventMapEntry */ 

(function EventMapEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.EventMapEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "MapName", $.String); 
    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "Value", $.UInt32); 
    $.Field({Static:false, Public:true }, "IsValueMap", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.EventMapEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.EventMapEntryFieldId", false, {
    EventMap_Name: 0, 
    EventMap_Value: 1, 
    EventMap_IsValueMap: 2
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IEventMapEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IEventMapEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.EventMapEntry")));
    $.Method({}, "get_MapName", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Value", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_IsValueMap", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "AllData");
    $.Property({}, "MapName");
    $.Property({}, "Name");
    $.Property({}, "Value");
    $.Property({}, "IsValueMap");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8AD3FC86-AFD3-477a-8FD5-146C291195BC"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.EventTagEntry */ 

(function EventTagEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.EventTagEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "TagData", $.String); 
    $.Field({Static:false, Public:true }, "EventID", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.EventTagEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.EventTagEntryFieldId", false, {
    EventTag_EventID: 0
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IEventTagEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IEventTagEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.EventTagEntry")));
    $.Method({}, "get_TagData", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_EventID", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "TagData");
    $.Property({}, "EventID");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8AD3FC86-AFD3-477a-8FD5-146C291195BD"]; });

/* class System.Deployment.Internal.Isolation.Manifest.RegistryValueEntry */ 

(function RegistryValueEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.RegistryValueEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "OperationHint", $.UInt32); 
    $.Field({Static:false, Public:true }, "Type", $.UInt32); 
    $.Field({Static:false, Public:true }, "Value", $.String); 
    $.Field({Static:false, Public:true }, "BuildFilter", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.RegistryValueEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.RegistryValueEntryFieldId", false, {
    RegistryValue_Flags: 0, 
    RegistryValue_OperationHint: 1, 
    RegistryValue_Type: 2, 
    RegistryValue_Value: 3, 
    RegistryValue_BuildFilter: 4
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IRegistryValueEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IRegistryValueEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.RegistryValueEntry")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_OperationHint", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Type", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Value", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_BuildFilter", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Flags");
    $.Property({}, "OperationHint");
    $.Property({}, "Type");
    $.Property({}, "Value");
    $.Property({}, "BuildFilter");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["49e1fe8d-ebb8-4593-8c4e-3e14c845b142"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.RegistryKeyEntry */ 

(function RegistryKeyEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.RegistryKeyEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "Protection", $.UInt32); 
    $.Field({Static:false, Public:true }, "BuildFilter", $.String); 
    $.Field({Static:false, Public:true }, "SecurityDescriptor", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "SecurityDescriptorSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "Values", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "ValuesSize", $.UInt32); 
    $.Field({Static:false, Public:true }, "Keys", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "KeysSize", $.UInt32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.RegistryKeyEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.RegistryKeyEntryFieldId", false, {
    RegistryKey_Flags: 0, 
    RegistryKey_Protection: 1, 
    RegistryKey_BuildFilter: 2, 
    RegistryKey_SecurityDescriptor: 3, 
    RegistryKey_SecurityDescriptorSize: 4, 
    RegistryKey_Values: 5, 
    RegistryKey_ValuesSize: 6, 
    RegistryKey_Keys: 7, 
    RegistryKey_KeysSize: 8
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IRegistryKeyEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IRegistryKeyEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.RegistryKeyEntry")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Protection", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_BuildFilter", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SecurityDescriptor", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Values", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Keys", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "AllData");
    $.Property({}, "Flags");
    $.Property({}, "Protection");
    $.Property({}, "BuildFilter");
    $.Property({}, "SecurityDescriptor");
    $.Property({}, "Values");
    $.Property({}, "Keys");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["186685d1-6673-48c3-bc83-95859bb591df"]; });

/* class System.Deployment.Internal.Isolation.Manifest.DirectoryEntry */ 

(function DirectoryEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.DirectoryEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm06.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose")
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Flags", $.UInt32); 
    $.Field({Static:false, Public:true }, "Protection", $.UInt32); 
    $.Field({Static:false, Public:true }, "BuildFilter", $.String); 
    $.Field({Static:false, Public:true }, "SecurityDescriptor", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:true }, "SecurityDescriptorSize", $.UInt32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.DirectoryEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.DirectoryEntryFieldId", false, {
    Directory_Flags: 0, 
    Directory_Protection: 1, 
    Directory_BuildFilter: 2, 
    Directory_SecurityDescriptor: 3, 
    Directory_SecurityDescriptorSize: 4
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.IDirectoryEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.IDirectoryEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.DirectoryEntry")));
    $.Method({}, "get_Flags", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Protection", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_BuildFilter", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SecurityDescriptor", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "AllData");
    $.Property({}, "Flags");
    $.Property({}, "Protection");
    $.Property({}, "BuildFilter");
    $.Property({}, "SecurityDescriptor");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["9f27c750-7dfb-46a1-a673-52e53e2337a9"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.SecurityDescriptorReferenceEntry */ 

(function SecurityDescriptorReferenceEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.SecurityDescriptorReferenceEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "BuildFilter", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.SecurityDescriptorReferenceEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.SecurityDescriptorReferenceEntryFieldId", false, {
    SecurityDescriptorReference_Name: 0, 
    SecurityDescriptorReference_BuildFilter: 1
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ISecurityDescriptorReferenceEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ISecurityDescriptorReferenceEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.SecurityDescriptorReferenceEntry")));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_BuildFilter", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "Name");
    $.Property({}, "BuildFilter");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["a75b74e9-2c00-4ebb-b3f9-62a670aaa07e"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CounterSetEntry */ 

(function CounterSetEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CounterSetEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "CounterSetGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "ProviderGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    $.Field({Static:false, Public:true }, "InstanceType", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CounterSetEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CounterSetEntryFieldId", false, {
    CounterSet_ProviderGuid: 0, 
    CounterSet_Name: 1, 
    CounterSet_Description: 2, 
    CounterSet_InstanceType: 3
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICounterSetEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICounterSetEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CounterSetEntry")));
    $.Method({}, "get_CounterSetGuid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_ProviderGuid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_InstanceType", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "AllData");
    $.Property({}, "CounterSetGuid");
    $.Property({}, "ProviderGuid");
    $.Property({}, "Name");
    $.Property({}, "Description");
    $.Property({}, "InstanceType");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8CD3FC85-AFD3-477a-8FD5-146C291195BB"]; });

/* class System.Deployment.Internal.Isolation.Manifest.CounterEntry */ 

(function CounterEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CounterEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "CounterSetGuid", $asm06.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:true }, "CounterId", $.UInt32); 
    $.Field({Static:false, Public:true }, "Name", $.String); 
    $.Field({Static:false, Public:true }, "Description", $.String); 
    $.Field({Static:false, Public:true }, "CounterType", $.UInt32); 
    $.Field({Static:false, Public:true }, "Attributes", $.UInt64); 
    $.Field({Static:false, Public:true }, "BaseId", $.UInt32); 
    $.Field({Static:false, Public:true }, "DefaultScale", $.UInt32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CounterEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CounterEntryFieldId", false, {
    Counter_CounterId: 0, 
    Counter_Name: 1, 
    Counter_Description: 2, 
    Counter_CounterType: 3, 
    Counter_Attributes: 4, 
    Counter_BaseId: 5, 
    Counter_DefaultScale: 6
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICounterEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICounterEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CounterEntry")));
    $.Method({}, "get_CounterSetGuid", JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid")));
    $.Method({}, "get_CounterId", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Name", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Description", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_CounterType", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_Attributes", JSIL.MethodSignature.Return($.UInt64));
    $.Method({}, "get_BaseId", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_DefaultScale", JSIL.MethodSignature.Return($.UInt32));
    $.Property({}, "AllData");
    $.Property({}, "CounterSetGuid");
    $.Property({}, "CounterId");
    $.Property({}, "Name");
    $.Property({}, "Description");
    $.Property({}, "CounterType");
    $.Property({}, "Attributes");
    $.Property({}, "BaseId");
    $.Property({}, "DefaultScale");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["8CD3FC86-AFD3-477a-8FD5-146C291195BB"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntry */ 

(function CompatibleFrameworkEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntry", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:true }, "index", $.UInt32); 
    $.Field({Static:false, Public:true }, "TargetVersion", $.String); 
    $.Field({Static:false, Public:true }, "Profile", $.String); 
    $.Field({Static:false, Public:true }, "SupportedRuntime", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntryFieldId */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntryFieldId", false, {
    CompatibleFramework_TargetVersion: 0, 
    CompatibleFramework_Profile: 1, 
    CompatibleFramework_SupportedRuntime: 2
  }, false
);

/* interface System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworkEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.Manifest.ICompatibleFrameworkEntry", false, [], function ($) {
    $.Method({}, "get_AllData", JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.Isolation.Manifest.CompatibleFrameworkEntry")));
    $.Method({}, "get_index", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_TargetVersion", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_Profile", JSIL.MethodSignature.Return($.String));
    $.Method({}, "get_SupportedRuntime", JSIL.MethodSignature.Return($.String));
    $.Property({}, "AllData");
    $.Property({}, "index");
    $.Property({}, "TargetVersion");
    $.Property({}, "Profile");
    $.Property({}, "SupportedRuntime");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["C98BFE2A-62C9-40AD-ADCE-A9037BE2BE6C"]; });

/* interface System.Deployment.Internal.Isolation.ISection */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.ISection", false, [], function ($) {
    $.Method({}, "get__NewEnum", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Count", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_SectionID", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "get_SectionName", JSIL.MethodSignature.Return($.String));
    $.Property({}, "_NewEnum");
    $.Property({}, "Count");
    $.Property({}, "SectionID");
    $.Property({}, "SectionName");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["285a8862-c84a-11d7-850f-005cd062464f"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Internal.Isolation.ISectionWithStringKey */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.ISectionWithStringKey", false, [], function ($) {
    $.Method({}, "Lookup", new JSIL.MethodSignature(null, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
    $.Method({}, "get_IsCaseInsensitive", JSIL.MethodSignature.Return($.Boolean));
    $.Property({}, "IsCaseInsensitive");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["285a8871-c84a-11d7-850f-005cd062464f"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Internal.Isolation.ISectionWithReferenceIdentityKey */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.ISectionWithReferenceIdentityKey", false, [], function ($) {
    $.Method({}, "Lookup", new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.Isolation.IReferenceIdentity"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["285a8876-c84a-11d7-850f-005cd062464f"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Internal.Isolation.ISectionEntry */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.ISectionEntry", false, [], function ($) {
    $.Method({}, "GetField", new JSIL.MethodSignature($.Object, [$.UInt32]));
    $.Method({}, "GetFieldName", new JSIL.MethodSignature($.String, [$.UInt32]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["285a8861-c84a-11d7-850f-005cd062464f"]; });

/* interface System.Deployment.Internal.Isolation.IEnumUnknown */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.IEnumUnknown", false, [], function ($) {
    $.Method({}, "Next", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $jsilcore.TypeRef("System.Array", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "Skip", new JSIL.MethodSignature($.Int32, [$.UInt32]));
    $.Method({}, "Reset", JSIL.MethodSignature.Return($.Int32));
    $.Method({}, "Clone", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.Type])]));
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["00000100-0000-0000-C000-000000000046"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* interface System.Deployment.Internal.Isolation.ICDF */ 

JSIL.MakeInterface(
  "System.Deployment.Internal.Isolation.ICDF", false, [], function ($) {
    $.Method({}, "GetRootSection", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISection"), [$.UInt32]));
    $.Method({}, "GetRootSectionEntry", new JSIL.MethodSignature($asm0A.TypeRef("System.Deployment.Internal.Isolation.ISectionEntry"), [$.UInt32]));
    $.Method({}, "get__NewEnum", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_Count", JSIL.MethodSignature.Return($.UInt32));
    $.Method({}, "GetItem", new JSIL.MethodSignature($.Object, [$.UInt32]));
    $.Property({}, "_NewEnum");
    $.Property({}, "Count");
  }, [])
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["285a8860-c84a-11d7-850f-005cd062464f"]; })
  .Attribute($asm06.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm06.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; });

/* class System.Deployment.Internal.CodeSigning.Win32 */ 

(function Win32$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Deployment.Internal.CodeSigning.Win32", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "_AxlGetIssuerPublicKeyHash", 
      new JSIL.MethodSignature($.Int32, [$asm06.TypeRef("System.IntPtr"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "_AxlPublicKeyBlobToPublicKeyToken", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "_AxlRSAKeyValueToPublicKeyToken", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CertFreeAuthenticodeSignerInfo", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_SIGNER_INFO")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CertFreeAuthenticodeTimestamperInfo", 
      new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CertTimestampAuthenticodeLicense", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")]), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "CertVerifyAuthenticodeLicense", 
      new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB")]), $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_SIGNER_INFO")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO")])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetProcessHeap", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HeapFree", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.IntPtr"), $.UInt32, 
          $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.Constant({Static:true , Public:false}, "KERNEL32", "kernel32.dll"); 
    $.Constant({Static:true , Public:false}, "MSCORWKS", "clr.dll"); 
    $.Constant({Static:true , Public:false}, "S_OK", 0); 
    $.Constant({Static:true , Public:false}, "NTE_BAD_KEY", -2146893821); 
    $.Constant({Static:true , Public:false}, "TRUST_E_SYSTEM_ERROR", -2146869247); 
    $.Constant({Static:true , Public:false}, "TRUST_E_NO_SIGNER_CERT", -2146869246); 
    $.Constant({Static:true , Public:false}, "TRUST_E_COUNTER_SIGNER", -2146869245); 
    $.Constant({Static:true , Public:false}, "TRUST_E_CERT_SIGNATURE", -2146869244); 
    $.Constant({Static:true , Public:false}, "TRUST_E_TIME_STAMP", -2146869243); 
    $.Constant({Static:true , Public:false}, "TRUST_E_BAD_DIGEST", -2146869232); 
    $.Constant({Static:true , Public:false}, "TRUST_E_BASIC_CONSTRAINTS", -2146869223); 
    $.Constant({Static:true , Public:false}, "TRUST_E_FINANCIAL_CRITERIA", -2146869218); 
    $.Constant({Static:true , Public:false}, "TRUST_E_PROVIDER_UNKNOWN", -2146762751); 
    $.Constant({Static:true , Public:false}, "TRUST_E_ACTION_UNKNOWN", -2146762750); 
    $.Constant({Static:true , Public:false}, "TRUST_E_SUBJECT_FORM_UNKNOWN", -2146762749); 
    $.Constant({Static:true , Public:false}, "TRUST_E_SUBJECT_NOT_TRUSTED", -2146762748); 
    $.Constant({Static:true , Public:false}, "TRUST_E_NOSIGNATURE", -2146762496); 
    $.Constant({Static:true , Public:false}, "CERT_E_UNTRUSTEDROOT", -2146762487); 
    $.Constant({Static:true , Public:false}, "TRUST_E_FAIL", -2146762485); 
    $.Constant({Static:true , Public:false}, "TRUST_E_EXPLICIT_DISTRUST", -2146762479); 
    $.Constant({Static:true , Public:false}, "CERT_E_CHAINING", -2146762486); 
    $.Constant({Static:true , Public:false}, "AXL_REVOCATION_NO_CHECK", 1); 
    $.Constant({Static:true , Public:false}, "AXL_REVOCATION_CHECK_END_CERT_ONLY", 2); 
    $.Constant({Static:true , Public:false}, "AXL_REVOCATION_CHECK_ENTIRE_CHAIN", 4); 
    $.Constant({Static:true , Public:false}, "AXL_URL_CACHE_ONLY_RETRIEVAL", 8); 
    $.Constant({Static:true , Public:false}, "AXL_LIFETIME_SIGNING", 16); 
    $.Constant({Static:true , Public:false}, "AXL_TRUST_MICROSOFT_ROOT_ONLY", 32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB */ 

(function CRYPT_DATA_BLOB$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.CodeSigning.Win32+CRYPT_DATA_BLOB", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "cbData", $.UInt32); 
    $.Field({Static:false, Public:false}, "pbData", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.CodeSigning.Win32+AXL_SIGNER_INFO */ 

(function AXL_SIGNER_INFO$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.CodeSigning.Win32+AXL_SIGNER_INFO", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "cbSize", $.UInt32); 
    $.Field({Static:false, Public:false}, "dwError", $.UInt32); 
    $.Field({Static:false, Public:false}, "algHash", $.UInt32); 
    $.Field({Static:false, Public:false}, "pwszHash", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "pwszDescription", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "pwszDescriptionUrl", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "pChainContext", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO */ 

(function AXL_TIMESTAMPER_INFO$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "cbSize", $.UInt32); 
    $.Field({Static:false, Public:false}, "dwError", $.UInt32); 
    $.Field({Static:false, Public:false}, "algHash", $.UInt32); 
    $.Field({Static:false, Public:false}, "ftTimestamp", $asm06.TypeRef("System.Runtime.InteropServices.ComTypes.FILETIME")); 
    $.Field({Static:false, Public:false}, "pChainContext", $asm06.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.CodeSigning.ManifestSignedXml */ 

(function ManifestSignedXml$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm11.TypeRef("System.Security.Cryptography.Xml.SignedXml"), 
      Name: "System.Deployment.Internal.CodeSigning.ManifestSignedXml", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlElement"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlDocument"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $.Boolean])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "FindIdElement", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlElement"), [$asm0E.TypeRef("System.Xml.XmlElement"), $.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetIdElement", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlElement"), [$asm0E.TypeRef("System.Xml.XmlDocument"), $.String])
    );

    $.Field({Static:false, Public:false}, "m_verify", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.CodeSigning.SignedCmiManifest */ 

(function SignedCmiManifest$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.CodeSigning.SignedCmiManifest", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlDocument"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "AuthenticodeSignLicenseDom", 
      new JSIL.MethodSignature(null, [
          $asm0E.TypeRef("System.Xml.XmlDocument"), $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSigner"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "BytesToHexString", 
      new JSIL.MethodSignature($.String, [
          $jsilcore.TypeRef("System.Array", [$.Byte]), $.Int32, 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComputeHashFromManifest", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$asm0E.TypeRef("System.Xml.XmlDocument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ComputeHashFromManifest", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$asm0E.TypeRef("System.Xml.XmlDocument"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateLicenseDom", 
      new JSIL.MethodSignature($asm0E.TypeRef("System.Xml.XmlDocument"), [
          $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSigner"), $asm0E.TypeRef("System.Xml.XmlElement"), 
          $jsilcore.TypeRef("System.Array", [$.Byte])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "ExtractPrincipalFromManifest", 
      JSIL.MethodSignature.Return($asm0E.TypeRef("System.Xml.XmlElement"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_AuthenticodeSignerInfo", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeSignerInfo"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_StrongNameSignerInfo", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiStrongNameSignerInfo"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetPublicKeyToken", 
      new JSIL.MethodSignature($.String, [$asm0E.TypeRef("System.Xml.XmlDocument")])
    );

    $.ExternalMethod({Static:true , Public:false}, "HexStringToBytes", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Byte]), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "HexToByte", 
      new JSIL.MethodSignature($.Byte, [$.Char])
    );

    $.ExternalMethod({Static:true , Public:false}, "InsertPublisherIdentity", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2")])
    );

    $.ExternalMethod({Static:true , Public:false}, "RemoveExistingSignature", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlDocument"))
    );

    $.ExternalMethod({Static:true , Public:false}, "ReplacePublicKeyToken", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Sign", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSigner"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "Sign", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSigner"), $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "StrongNameSignManifestDom", 
      new JSIL.MethodSignature(null, [
          $asm0E.TypeRef("System.Xml.XmlDocument"), $asm0E.TypeRef("System.Xml.XmlDocument"), 
          $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSigner")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "TimestampSignedLicenseDom", 
      new JSIL.MethodSignature(null, [$asm0E.TypeRef("System.Xml.XmlDocument"), $.String])
    );

    $.ExternalMethod({Static:false, Public:false}, "Verify", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestVerifyFlags"))
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyAssemblyIdentity", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlNamespaceManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyHash", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlNamespaceManager"))
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyLicense", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestVerifyFlags"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyPublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "VerifyPublisherIdentity", 
      JSIL.MethodSignature.Action($asm0E.TypeRef("System.Xml.XmlNamespaceManager"))
    );

    $.Field({Static:false, Public:false}, "m_manifestDom", $asm0E.TypeRef("System.Xml.XmlDocument")); 
    $.Field({Static:false, Public:false}, "m_strongNameSignerInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiStrongNameSignerInfo")); 
    $.Field({Static:false, Public:false}, "m_authenticodeSignerInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeSignerInfo")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "hexValues", $jsilcore.TypeRef("System.Array", [$.Char])); 
    $.Constant({Static:true , Public:false}, "AssemblyNamespaceUri", "urn:schemas-microsoft-com:asm.v1"); 
    $.Constant({Static:true , Public:false}, "AssemblyV2NamespaceUri", "urn:schemas-microsoft-com:asm.v2"); 
    $.Constant({Static:true , Public:false}, "MSRelNamespaceUri", "http://schemas.microsoft.com/windows/rel/2005/reldata"); 
    $.Constant({Static:true , Public:false}, "LicenseNamespaceUri", "urn:mpeg:mpeg21:2003:01-REL-R-NS"); 
    $.Constant({Static:true , Public:false}, "AuthenticodeNamespaceUri", "http://schemas.microsoft.com/windows/pki/2005/Authenticode"); 
    $.Constant({Static:true , Public:false}, "licenseTemplate", "<r:license xmlns:r=\"urn:mpeg:mpeg21:2003:01-REL-R-NS\" xmlns:as=\"http://schemas.microsoft.com/windows/pki/2005/Authenticode\"><r:grant><as:ManifestInformation><as:assemblyIdentity /></as:ManifestInformation><as:SignedBy/><as:AuthenticodePublisher><as:X509SubjectName>CN=dummy</as:X509SubjectName></as:AuthenticodePublisher></r:grant><r:issuer></r:issuer></r:license>"); 
    $.Property({Static:false, Public:false}, "StrongNameSignerInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiStrongNameSignerInfo"));

    $.Property({Static:false, Public:false}, "AuthenticodeSignerInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeSignerInfo"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag", false, {
    None: 0, 
    DontReplacePublicKeyToken: 1
  }, true
);

/* enum System.Deployment.Internal.CodeSigning.CmiManifestVerifyFlags */ 

JSIL.MakeEnum(
  "System.Deployment.Internal.CodeSigning.CmiManifestVerifyFlags", false, {
    None: 0, 
    RevocationNoCheck: 1, 
    RevocationCheckEndCertOnly: 2, 
    RevocationCheckEntireChain: 4, 
    UrlCacheOnlyRetrieval: 8, 
    LifetimeSigning: 16, 
    TrustMicrosoftRootOnly: 32, 
    StrongNameOnly: 65536
  }, true
);

/* class System.Deployment.Internal.CodeSigning.CmiManifestSigner */ 

(function CmiManifestSigner$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.CodeSigning.CmiManifestSigner", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"), $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Certificate", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_DescriptionUrl", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ExtraStore", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2Collection"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Flag", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_IncludeOption", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509IncludeOption"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_StrongNameKey", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Description", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_DescriptionUrl", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Flag", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_IncludeOption", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509IncludeOption"))
    );

    $.Constant({Static:true , Public:false}, "CimManifestSignerFlagMask", 1); 
    $.Field({Static:false, Public:false}, "m_strongNameKey", $asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm")); 
    $.Field({Static:false, Public:false}, "m_certificate", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2")); 
    $.Field({Static:false, Public:false}, "m_description", $.String); 
    $.Field({Static:false, Public:false}, "m_url", $.String); 
    $.Field({Static:false, Public:false}, "m_certificates", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2Collection")); 
    $.Field({Static:false, Public:false}, "m_includeOption", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509IncludeOption")); 
    $.Field({Static:false, Public:false}, "m_signerFlag", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag")); 
    $.Property({Static:false, Public:false}, "StrongNameKey", $asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"));

    $.Property({Static:false, Public:false}, "Certificate", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2"));

    $.Property({Static:false, Public:false}, "Description", $.String);

    $.Property({Static:false, Public:false}, "DescriptionUrl", $.String);

    $.Property({Static:false, Public:false}, "ExtraStore", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Certificate2Collection"));

    $.Property({Static:false, Public:false}, "IncludeOption", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509IncludeOption"));

    $.Property({Static:false, Public:false}, "Flag", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiManifestSignerFlag"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.CodeSigning.CmiStrongNameSignerInfo */ 

(function CmiStrongNameSignerInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.CodeSigning.CmiStrongNameSignerInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ErrorCode", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_PublicKey", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_PublicKeyToken", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_ErrorCode", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_PublicKey", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_PublicKeyToken", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "m_error", $.Int32); 
    $.Field({Static:false, Public:false}, "m_publicKeyToken", $.String); 
    $.Field({Static:false, Public:false}, "m_snKey", $asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm")); 
    $.Property({Static:false, Public:false}, "ErrorCode", $.Int32);

    $.Property({Static:false, Public:false}, "PublicKeyToken", $.String);

    $.Property({Static:false, Public:false}, "PublicKey", $asm06.TypeRef("System.Security.Cryptography.AsymmetricAlgorithm"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.CodeSigning.CmiAuthenticodeSignerInfo */ 

(function CmiAuthenticodeSignerInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.CodeSigning.CmiAuthenticodeSignerInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_SIGNER_INFO"), $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO")])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_DescriptionUrl", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ErrorCode", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Hash", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_HashAlgId", 
      JSIL.MethodSignature.Return($.UInt32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_SignerChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_TimestamperInfo", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeTimestamperInfo"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "m_error", $.Int32); 
    $.Field({Static:false, Public:false}, "m_signerChain", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain")); 
    $.Field({Static:false, Public:false}, "m_algHash", $.UInt32); 
    $.Field({Static:false, Public:false}, "m_hash", $.String); 
    $.Field({Static:false, Public:false}, "m_description", $.String); 
    $.Field({Static:false, Public:false}, "m_descriptionUrl", $.String); 
    $.Field({Static:false, Public:false}, "m_timestamperInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeTimestamperInfo")); 
    $.Property({Static:false, Public:false}, "ErrorCode", $.Int32);

    $.Property({Static:false, Public:false}, "HashAlgId", $.UInt32);

    $.Property({Static:false, Public:false}, "Hash", $.String);

    $.Property({Static:false, Public:false}, "Description", $.String);

    $.Property({Static:false, Public:false}, "DescriptionUrl", $.String);

    $.Property({Static:false, Public:false}, "TimestamperInfo", $asm0A.TypeRef("System.Deployment.Internal.CodeSigning.CmiAuthenticodeTimestamperInfo"));

    $.Property({Static:false, Public:false}, "SignerChain", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Deployment.Internal.CodeSigning.CmiAuthenticodeTimestamperInfo */ 

(function CmiAuthenticodeTimestamperInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Deployment.Internal.CodeSigning.CmiAuthenticodeTimestamperInfo", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("System.Deployment.Internal.CodeSigning.Win32+AXL_TIMESTAMPER_INFO"))
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ErrorCode", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_HashAlgId", 
      JSIL.MethodSignature.Return($.UInt32)
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_TimestamperChain", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_TimestampTime", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "m_error", $.Int32); 
    $.Field({Static:false, Public:false}, "m_timestamperChain", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain")); 
    $.Field({Static:false, Public:false}, "m_timestampTime", $asm06.TypeRef("System.DateTime")); 
    $.Field({Static:false, Public:false}, "m_algHash", $.UInt32); 
    $.Property({Static:false, Public:false}, "ErrorCode", $.Int32);

    $.Property({Static:false, Public:false}, "HashAlgId", $.UInt32);

    $.Property({Static:false, Public:false}, "TimestampTime", $asm06.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:false}, "TimestamperChain", $asm07.TypeRef("System.Security.Cryptography.X509Certificates.X509Chain"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Microsoft.Internal");
JSIL.DeclareNamespace("Microsoft.Internal.Performance");
/* class Microsoft.Internal.Performance.CodeMarkers */ 

(function CodeMarkers$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Internal.Performance.CodeMarkers", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarker", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarkerEx", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $jsilcore.TypeRef("System.Array", [$.Byte])])
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarkerEx", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $asm06.TypeRef("System.Guid")])
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarkerEx", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarkerEx", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.UInt32])
    );

    $.ExternalMethod({Static:false, Public:true }, "CodeMarkerEx", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.UInt64])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "InitPerformanceDll", 
      new JSIL.MethodSignature($.Boolean, [$.Int32, $.String])
    )
      .Attribute($asm06.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "InitPerformanceDll", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.String, 
          $asm06.TypeRef("Microsoft.Win32.RegistryView")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "UninitializePerformanceDLL", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "UseCodeMarkers", 
      new JSIL.MethodSignature($.Boolean, [$.String, $asm06.TypeRef("Microsoft.Win32.RegistryView")])
    );

    $.Field({Static:true , Public:true , ReadOnly:true }, "Instance", $.Type); 
    $.Field({Static:false, Public:false}, "state", $asm0A.TypeRef("Microsoft.Internal.Performance.CodeMarkers+State")); 
    $.Constant({Static:true , Public:false}, "AtomName", "VSCodeMarkersEnabled"); 
    $.Constant({Static:true , Public:false}, "DllName", "Microsoft.Internal.Performance.CodeMarkers.dll"); 
    $.Property({Static:false, Public:true }, "IsEnabled", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Internal.Performance.CodeMarkers+State */ 

JSIL.MakeEnum(
  "Microsoft.Internal.Performance.CodeMarkers+State", false, {
    Enabled: 0, 
    Disabled: 1, 
    DisabledDueToDllImportException: 2, 
    DisabledViaRegistryCheck: 3
  }, false
);

/* class Microsoft.Internal.Performance.CodeMarkers+NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Internal.Performance.CodeMarkers+NativeMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "AddAtom", 
      new JSIL.MethodSignature($.UInt16, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "DeleteAtom", 
      new JSIL.MethodSignature($.UInt16, [$.UInt16])
    );

    $.ExternalMethod({Static:true , Public:true }, "DllInitPerf", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "DllPerfCodeMarker", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("System.Array", [$.Byte]), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DllUnInitPerf", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:true }, "FindAtom", 
      new JSIL.MethodSignature($.UInt16, [$.String])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Internal.Performance.CodeMarkerStartEnd */ 

(function CodeMarkerStartEnd$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Internal.Performance.CodeMarkerStartEnd", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_end", $.Int32); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Internal.Performance.CodeMarkerExStartEnd */ 

(function CodeMarkerExStartEnd$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Internal.Performance.CodeMarkerExStartEnd", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Byte])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $asm06.TypeRef("System.Guid")
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "_end", $.Int32); 
    $.Field({Static:false, Public:false}, "_aBuff", $jsilcore.TypeRef("System.Array", [$.Byte])); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

