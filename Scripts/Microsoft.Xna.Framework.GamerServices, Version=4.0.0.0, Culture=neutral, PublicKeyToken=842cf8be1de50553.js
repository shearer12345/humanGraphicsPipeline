/* Generated by JSIL v0.7.9 build 16496. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm03 = JSIL.DeclareAssembly("Microsoft.Xna.Framework.GamerServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=842cf8be1de50553");

JSIL.DeclareNamespace("Microsoft");
JSIL.DeclareNamespace("Microsoft.Xna");
JSIL.DeclareNamespace("Microsoft.Xna.Framework");
JSIL.DeclareNamespace("Microsoft.Xna.Framework.GamerServices");
/* class Microsoft.Xna.Framework.GamerServices.ErrorHandler */ 

(function ErrorHandler$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.GamerServices.ErrorHandler", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "GetExceptionFromResult", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Exception"), [$.UInt32])
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; })
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2208:InstantiateArgumentExceptionsCorrectly"]; });

    $.ExternalMethod({Static:true , Public:true }, "ThrowExceptionFromResult", 
      JSIL.MethodSignature.Action($.UInt32)
    );

    $.Constant({Static:true , Public:false}, "XONLINE_E_SESSION_INSUFFICIENT_PRIVILEGES", 2148880897); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.SignedInEventArgs */ 

(function SignedInEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.GamerServices.SignedInEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"))
    );

    $.Field({Static:false, Public:false}, "gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")); 
    $.Property({Static:false, Public:true }, "Gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs */ 

(function SignedOutEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"))
    );

    $.Field({Static:false, Public:false}, "gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")); 
    $.Property({Static:false, Public:true }, "Gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs */ 

(function InviteAcceptedEventArgs$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.EventArgs"), 
      Name: "Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsCurrentSession", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "isCurrentSession", $.Boolean); 
    $.Field({Static:false, Public:false}, "gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")); 
    $.Property({Static:false, Public:true }, "IsCurrentSession", $.Boolean);

    $.Property({Static:false, Public:true }, "Gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.Gamer */ 

(function Gamer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.Gamer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.UInt32, $.Int32, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetFromGamertag", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $.String, $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginGetPartnerToken", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $.String, $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginGetProfile", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [$asm06.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "EndGetFromGamertag", 
      new JSIL.MethodSignature($.Type, [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndGetPartnerToken", 
      new JSIL.MethodSignature($.String, [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndGetProfile", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerProfile"), [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayName", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamertag", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InternalIndex", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "get_KernelHandle", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LeaderboardWriter", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardWriter"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_SignedInGamers", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamerCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Tag", 
      JSIL.MethodSignature.Return($.Object)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetFromGamertag", 
      new JSIL.MethodSignature($.Type, [$.String])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLeaderboardWriter", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardWriter"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetPartnerToken", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetProfile", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerProfile"))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_DisplayName", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_InternalIndex", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "set_KernelHandle", 
      JSIL.MethodSignature.Action($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Tag", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateForGetLeaderboardEntry", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateGamerList", 
      new JSIL.MethodSignature($.Int32, [
          $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Type]), $.Int32, 
          $.Int32, $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "ValidateWriteTrueSkill", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "gamertag", $.String); 
    $.Field({Static:false, Public:false}, "displayName", $.String); 
    $.Field({Static:false, Public:false}, "kernelHandle", $.UInt32); 
    $.Field({Static:false, Public:false}, "internalIndex", $.Int32); 
    $.Field({Static:false, Public:false}, "tag", $.Object); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Field({Static:true , Public:false}, "signedInGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamerCollection")); 
    $.Property({Static:false, Public:true }, "Gamertag", $.String);

    $.Property({Static:false, Public:true }, "DisplayName", $.String);

    $.Property({Static:false, Public:false}, "KernelHandle", $.UInt32);

    $.Property({Static:false, Public:false}, "InternalIndex", $.Int32);

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:true , Public:true }, "SignedInGamers", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamerCollection"));

    $.Property({Static:false, Public:true }, "LeaderboardWriter", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardWriter"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.FriendGamer */ 

(function FriendGamer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), 
      Name: "Microsoft.Xna.Framework.GamerServices.FriendGamer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 4, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendCollection"), $.String, 
          $.String, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendState")
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FriendRequestReceivedFrom", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FriendRequestSentTo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HasVoice", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InviteAccepted", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InviteReceivedFrom", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InviteRejected", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InviteSentTo", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsAway", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsBusy", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsJoinable", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsOnline", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPlaying", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Presence", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "parent", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendCollection")); 
    $.Field({Static:false, Public:false}, "presence", $.String); 
    $.Field({Static:false, Public:false}, "friendState", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendState")); 
    $.Property({Static:false, Public:true }, "Presence", $.String);

    $.Property({Static:false, Public:true }, "IsOnline", $.Boolean);

    $.Property({Static:false, Public:true }, "IsPlaying", $.Boolean);

    $.Property({Static:false, Public:true }, "IsJoinable", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAway", $.Boolean);

    $.Property({Static:false, Public:true }, "IsBusy", $.Boolean);

    $.Property({Static:false, Public:true }, "HasVoice", $.Boolean);

    $.Property({Static:false, Public:true }, "FriendRequestReceivedFrom", $.Boolean);

    $.Property({Static:false, Public:true }, "FriendRequestSentTo", $.Boolean);

    $.Property({Static:false, Public:true }, "InviteReceivedFrom", $.Boolean);

    $.Property({Static:false, Public:true }, "InviteSentTo", $.Boolean);

    $.Property({Static:false, Public:true }, "InviteAccepted", $.Boolean);

    $.Property({Static:false, Public:true }, "InviteRejected", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Xna.Framework.GamerServices.InternalIndexComparer`1 */ 

(function InternalIndexComparer$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Xna.Framework.GamerServices.InternalIndexComparer`1", 
      IsPublic: false, 
      IsReferenceType: false, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Compare", 
      new JSIL.MethodSignature($.Int32, [$.GenericParameter("T"), $.GenericParameter("T")])
    );

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IComparer`1", [$.GenericParameter("T")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GamerCollection`1 */ 

(function GamerCollection$b1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [new JSIL.GenericParameter("T", "Microsoft.Xna.Framework.GamerServices.GamerCollection`1")]), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerCollection`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "FindGamerWithInternalIndexAndRemove", 
      new JSIL.MethodSignature($.GenericParameter("T"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetEnumerator", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GamerCollectionEnumerator", [$.GenericParameter("T")]), null)
    );

    $.ExternalMethod({Static:false, Public:false}, "Insert", 
      new JSIL.MethodSignature(null, [$.GenericParameter("T")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lMicrosoft.Xna.Framework.GamerServices.Gamer$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]), "GetEnumerator");

    $.Field({Static:false, Public:false}, "wrappedList", $asm06.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("T")])); 
    $.Field({Static:true , Public:false}, "internalIndexComparer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InternalIndexComparer`1", [$.GenericParameter("T")])); 
    function GamerCollection$b1__cctor () {
      $thisType.internalIndexComparer = new ($asm03.Microsoft.Xna.Framework.GamerServices.InternalIndexComparer$b1.Of($thisType.T.get(this))) ();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      GamerCollection$b1__cctor
    );

    $.ImplementInterfaces(
      /* 8 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GamerCollectionEnumerator */ 

(function GamerCollectionEnumerator$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GamerCollectionEnumerator", 
      IsPublic: false, 
      IsReferenceType: false, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.GenericParameter("T")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Current", 
      new JSIL.MethodSignature($.GenericParameter("T"), null)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset");

    $.Field({Static:false, Public:false}, "internalEnumerator", $asm06.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "Current", $.GenericParameter("T"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.GenericParameter("T")]), 
      /* 1 */ $asm06.TypeRef("System.IDisposable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.IEnumerator")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("$lSystem");
JSIL.DeclareNamespace("$lSystem.Collections");
JSIL.DeclareNamespace("$lSystem.Collections.Generic");
JSIL.DeclareNamespace("$lSystem.Collections.Generic.IEnumerable$lMicrosoft");
JSIL.DeclareNamespace("$lSystem.Collections.Generic.IEnumerable$lMicrosoft.Xna");
JSIL.DeclareNamespace("$lSystem.Collections.Generic.IEnumerable$lMicrosoft.Xna.Framework");
JSIL.DeclareNamespace("$lSystem.Collections.Generic.IEnumerable$lMicrosoft.Xna.Framework.GamerServices");
JSIL.DeclareNamespace("$lSystem.Collections.Generic.IEnumerable$lMicrosoft.Xna.Framework.GamerServices.Gamer$g");
/* class Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GetEnumerator>d__0 */ 

(function GetEnumerator$gd__0$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GetEnumerator>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["T"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "$l$gm__Finally3", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lMicrosoft.Xna.Framework.GamerServices.Gamer$g.get_Current", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $.Field({Static:false, Public:false}, "$l$g2__current", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")); 
    $.Field({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $.Field({Static:false, Public:true }, "$l$g4__this", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$.GenericParameter("T")])); 
    $.Field({Static:false, Public:true }, "$lgamer$g5__1", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")); 
    $.Field({Static:false, Public:true }, "$l$g7__wrap2", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1+GamerCollectionEnumerator", [$.GenericParameter("T")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lMicrosoft.Xna.Framework.GamerServices.Gamer$g.Current", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 2 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting", true, {
    Blocked: 0, 
    FriendsOnly: 1, 
    Everyone: 2
  }, false
);

/* class Microsoft.Xna.Framework.GamerServices.GamerPrivileges */ 

(function GamerPrivileges$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerPrivileges", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowCommunication", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowOnlineSessions", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowPremiumContent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowProfileViewing", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowPurchaseContent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowTradeContent", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AllowUserCreatedContent", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"))
    );

    $.Field({Static:false, Public:false}, "privileges", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions")); 
    $.Property({Static:false, Public:true }, "AllowOnlineSessions", $.Boolean);

    $.Property({Static:false, Public:true }, "AllowCommunication", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"));

    $.Property({Static:false, Public:true }, "AllowProfileViewing", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"));

    $.Property({Static:false, Public:true }, "AllowUserCreatedContent", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeSetting"));

    $.Property({Static:false, Public:true }, "AllowTradeContent", $.Boolean);

    $.Property({Static:false, Public:true }, "AllowPurchaseContent", $.Boolean);

    $.Property({Static:false, Public:true }, "AllowPremiumContent", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GamerServicesNotAvailableException */ 

(function GamerServicesNotAvailableException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Exception"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerServicesNotAvailableException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1032:ImplementStandardExceptionConstructors"]; });

})();

/* struct Microsoft.Xna.Framework.GamerServices.PlayerState */ 

(function PlayerState$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Xna.Framework.GamerServices.PlayerState", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, "get_IsSignedIn", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "Index", $.Int32); 
    $.Field({Static:false, Public:false}, "SignInState", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PlayerSignInState")); 
    $.Field({Static:false, Public:false}, "Gamertag", $.String); 
    $.Field({Static:false, Public:false}, "IsLive", $.Boolean); 
    $.Field({Static:false, Public:false}, "IsGuest", $.Boolean); 
    $.Field({Static:false, Public:false}, "Privileges", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions")); 
    $.Field({Static:false, Public:false}, "GameDefaults", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDefaults")); 
    $.Field({Static:false, Public:false}, "PartySize", $.Int32); 
    $.Property({Static:false, Public:false}, "IsSignedIn", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.SignedInGamerCollection */ 

(function SignedInGamerCollection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer")]), 
      Name: "Microsoft.Xna.Framework.GamerServices.SignedInGamerCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"), [$asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")])
    );

    $.Property({Static:false, Public:true }, "Item", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInGamer"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class Microsoft.Xna.Framework.GamerServices.UserPacketBuffer */ 

(function UserPacketBuffer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.UserPacketBuffer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "AllocateBuffer", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanMakeKernelCalls", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "Grow", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "Reset", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "StealSpaceFromEndOfBuffer", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IntPtr"), [$.Int32])
    );

    $.Field({Static:false, Public:false}, "TotalSize", $.Int32); 
    $.Field({Static:false, Public:false}, "CurrentSize", $.Int32); 
    $.Field({Static:false, Public:false}, "canGrow", $.Boolean); 
    $.Field({Static:false, Public:false}, "Data", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SharedMemoryRegion")); 
    $.Property({Static:false, Public:true }, "CanMakeKernelCalls", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.AchievementCollection */ 

(function AchievementCollection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.AchievementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "CompareAchievements", 
      new JSIL.MethodSignature($.Int32, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"), [$.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "RateAchievement", 
      new JSIL.MethodSignature($.Int32, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Add", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "Add");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Clear", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "Clear");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "Contains");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), $.Int32])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "CopyTo");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "get_IsReadOnly");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "Remove");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.get_Item", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"), [$.Int32])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "get_Item");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.IndexOf", 
      new JSIL.MethodSignature($.Int32, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "IndexOf");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Insert", 
      new JSIL.MethodSignature(null, [$.Int32, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "Insert");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.RemoveAt", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "RemoveAt");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.set_Item", 
      new JSIL.MethodSignature(null, [$.Int32, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), "set_Item");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Field({Static:false, Public:false}, "achievements", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])); 
    $.Field({Static:false, Public:false}, "achievementDictionary", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")])); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:true }, "Item", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"));

    $.Property({Static:false, Public:true }, "Item", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"));

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IList$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.Item", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lMicrosoft.Xna.Framework.GamerServices.Achievement$g.IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IList`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), 
      /* 1 */ $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Achievement")]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerable"), 
      /* 4 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class Microsoft.Xna.Framework.GamerServices.PropertyDictionary */ 

(function PropertyDictionary$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.PropertyDictionary", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "GetTypedValue", 
      new JSIL.MethodSignature("!!0", [$.String], ["T"])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueDateTime", 
      new JSIL.MethodSignature($asm06.TypeRef("System.DateTime"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueDouble", 
      new JSIL.MethodSignature($.Double, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueInt32", 
      new JSIL.MethodSignature($.Int32, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueInt64", 
      new JSIL.MethodSignature($.Int64, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueOutcome", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardOutcome"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueSingle", 
      new JSIL.MethodSignature($.Single, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueStream", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IO.Stream"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "GetValueTimeSpan", 
      new JSIL.MethodSignature($asm06.TypeRef("System.TimeSpan"), [$.String])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $.Int64])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $.Single])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $.Double])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $.String])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardOutcome")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.DateTime")])
    );

    $.ExternalMethod({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.TimeSpan")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Add", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "Add");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Clear", 
      JSIL.MethodSignature.Void
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "Clear");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "Contains");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), $.Int32])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "CopyTo");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "get_IsReadOnly");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "Remove");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), "Add");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.String]))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), "get_Keys");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]))
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), "get_Values");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String])
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), "Remove");

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator"))
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])])
    );

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.Keys", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.String$cmSystem.Object$g.Values", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
      /* 1 */ $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* struct Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity */ 

(function LeaderboardIdentity$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };

  function LeaderboardIdentity_get_GameMode () {
    return this.LeaderboardIdentity$GameMode$value;
  };

  function LeaderboardIdentity_get_Key () {
    return this.LeaderboardIdentity$Key$value;
  };

  function LeaderboardIdentity_set_GameMode (value) {
    this.LeaderboardIdentity$GameMode$value = (value | 0);
  };

  function LeaderboardIdentity_set_Key (value) {
    this.LeaderboardIdentity$Key$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardKey"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:true }, "Create", 
      new JSIL.MethodSignature($.Type, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardKey")])
    );

    $.Method({Static:false, Public:true }, "get_GameMode", 
      JSIL.MethodSignature.Return($.Int32), 
      LeaderboardIdentity_get_GameMode
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Key", 
      JSIL.MethodSignature.Return($.String), 
      LeaderboardIdentity_get_Key
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_GameMode", 
      JSIL.MethodSignature.Action($.Int32), 
      LeaderboardIdentity_set_GameMode
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Key", 
      JSIL.MethodSignature.Action($.String), 
      LeaderboardIdentity_set_Key
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "LeaderboardIdentity$Key$value", $.String)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "LeaderboardIdentity$GameMode$value", $.Int32)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Key", $.String);

    $.Property({Static:false, Public:true }, "GameMode", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.LeaderboardReader */ 

(function LeaderboardReader$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.LeaderboardReader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPageDown", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [$asm06.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginPageUp", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [$asm06.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginRead", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]), 
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), $.Int32, 
          $asm06.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginRead", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), 
          $.Int32, $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginRead", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $.Int32, 
          $.Int32, $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "EndPageDown", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndPageUp", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndRead", 
      new JSIL.MethodSignature($.Type, [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanPageDown", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_CanPageUp", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Entries", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardEntry")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_LeaderboardIdentity", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PageStart", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TotalLeaderboardSize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "PageDown", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "PageUp", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Read", 
      new JSIL.MethodSignature($.Type, [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")]), 
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Read", 
      new JSIL.MethodSignature($.Type, [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "Read", 
      new JSIL.MethodSignature($.Type, [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"), $.Int32, 
          $.Int32
        ])
    );

    $.Property({Static:false, Public:true }, "LeaderboardIdentity", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity"));

    $.Property({Static:false, Public:true }, "TotalLeaderboardSize", $.Int32);

    $.Property({Static:false, Public:true }, "PageStart", $.Int32);

    $.Property({Static:false, Public:true }, "Entries", $asm06.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardEntry")]));

    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:true }, "CanPageUp", $.Boolean);

    $.Property({Static:false, Public:true }, "CanPageDown", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.LeaderboardEntry */ 

(function LeaderboardEntry$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.LeaderboardEntry", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Columns", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PropertyDictionary"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Gamer", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Rating", 
      JSIL.MethodSignature.Return($.Int64)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_Rating", 
      JSIL.MethodSignature.Action($.Int64)
    );

    $.Property({Static:false, Public:true }, "Gamer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"));

    $.Property({Static:false, Public:true }, "Rating", $.Int64);

    $.Property({Static:false, Public:true }, "Columns", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PropertyDictionary"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.Guide */ 

(function Guide$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.GamerServices.Guide", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "BeginShowKeyboardInput", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.String, 
          $.String, $.String, 
          $asm06.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowKeyboardInput", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.String, 
          $.String, $.String, 
          $asm06.TypeRef("System.AsyncCallback"), $.Object, 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowMessageBox", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.String, 
          $.String, $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), 
          $.Int32, $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.MessageBoxIcon"), 
          $asm06.TypeRef("System.AsyncCallback"), $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "BeginShowMessageBox", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $.String, $.String, 
          $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), $.Int32, 
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.MessageBoxIcon"), $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "DelayNotifications", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.TimeSpan"))
    );

    $.ExternalMethod({Static:true , Public:true }, "EndShowKeyboardInput", 
      new JSIL.MethodSignature($.String, [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:true }, "EndShowMessageBox", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Nullable`1", [$.Int32]), [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteKernelCall", 
      new JSIL.MethodSignature(null, [
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.KernelCallType"), $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), 
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ExecuteKernelCall", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.KernelCallType"), $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsScreenSaverEnabled", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsTrialMode", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsVisible", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_IsVisibleNoThrow", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_NotificationPosition", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NotificationPosition"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_SimulateTrialMode", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "set_IsScreenSaverEnabled", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "set_IsTrialMode", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "set_IsVisible", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "set_NotificationPosition", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NotificationPosition"))
    );

    $.ExternalMethod({Static:true , Public:true }, "set_SimulateTrialMode", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowComposeMessage", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.String, 
          $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
        ])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowFriendRequest", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowFriends", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowGameInvite", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowGameInvite", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowGamerCard", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowMarketplace", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowMessages", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowParty", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowPartySessions", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowPlayerReview", 
      new JSIL.MethodSignature(null, [$asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowPlayers", 
      JSIL.MethodSignature.Action($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:true , Public:true }, "ShowSignIn", 
      new JSIL.MethodSignature(null, [$.Int32, $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ValidateShowMessageBoxArgs", 
      new JSIL.MethodSignature($.Int32, [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $.String, 
          $.String, $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), 
          $.Int32
        ])
    );

    $.Field({Static:true , Public:false}, "forceGuideVisible", $.Boolean); 
    $.Field({Static:true , Public:false}, "isVisible", $.Boolean); 
    $.Field({Static:true , Public:false}, "notificationPosition", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NotificationPosition"), function ($pi) {
        return $asm03.Microsoft.Xna.Framework.GamerServices.NotificationPosition.BottomCenter;
      }); 
    $.Field({Static:true , Public:false}, "isTrialMode", $.Boolean, true); 
    $.Field({Static:true , Public:false}, "simulateTrialMode", $.Boolean); 
    $.Property({Static:true , Public:true }, "IsScreenSaverEnabled", $.Boolean);

    $.Property({Static:true , Public:true }, "IsVisible", $.Boolean);

    $.Property({Static:true , Public:false}, "IsVisibleNoThrow", $.Boolean);

    $.Property({Static:true , Public:true }, "NotificationPosition", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NotificationPosition"));

    $.Property({Static:true , Public:true }, "IsTrialMode", $.Boolean);

    $.Property({Static:true , Public:true }, "SimulateTrialMode", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.KernelMethods */ 

(function KernelMethods$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.GamerServices.KernelMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "$lInitialize$gb__0", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")])
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "DispatchCommand", 
      new JSIL.MethodSignature($.UInt32, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer")])
    );

    $.ExternalMethod({Static:true , Public:true }, "get_CanMakeKernelCalls", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ProxyExecutablePath", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "HandleUnexpectedShutdown", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "Initialize", 
      new JSIL.MethodSignature($.UInt32, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer")])
    );

    $.Field({Static:true , Public:false}, "proxyExecutableName", $.String, "XnaLiveProxy.exe"); 
    $.Field({Static:true , Public:false}, "proxyExecutableDirectory", $.String, "Bin"); 
    $.Field({Static:true , Public:false}, "proxyProcess", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.KernelMethods+ProxyProcess")); 
    $.Field({Static:true , Public:false}, "unexpectedShutdownMessage", $.String); 
    $.Field({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate1", $asm06.TypeRef("System.EventHandler"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:true , Public:false}, "ProxyExecutablePath", $.String);

    $.Property({Static:true , Public:true }, "CanMakeKernelCalls", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.KernelMethods+ProxyProcess */ 

(function ProxyProcess$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.KernelMethods+ProxyProcess", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"))
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateEvents", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "DispatchCommand", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncHResult", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncManagedCallArgument", 
      JSIL.MethodSignature.Return($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_AsyncManagedCallType", 
      JSIL.MethodSignature.Return($asm01.TypeRef("Microsoft.Xna.Framework.ManagedCallType"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_ProxyProcessWantsToTalk", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_SharedAsyncDataSafeToWrite", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_VirtualTitleId", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Guid"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SafeCloseHandle", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "WaitForExit", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForRemoteProcess", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false}, "WaitForRemoteProcessToInitialize", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:false}, "triggerCallEvent", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "callDoneEvent", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "proxyProcessWantsToTalk", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "sharedAsyncDataSafeToWrite", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "aSyncHResultPtr", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "asyncManagedCallArgument", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "aSyncManagedCallTypePtr", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "parentExitEvent", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "serverProcess", $asm07.TypeRef("System.Diagnostics.Process")); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Field({Static:true , Public:false}, "virtualTitleId", $asm06.TypeRef("System.Nullable`1", [$asm06.TypeRef("System.Guid")])); 
    function ProxyProcess__cctor () {
      $thisType.virtualTitleId = null;
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ProxyProcess__cctor
    );

    $.Property({Static:false, Public:true , Virtual:true }, "ProxyProcessWantsToTalk", $asm06.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true , Virtual:true }, "SharedAsyncDataSafeToWrite", $asm06.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncHResult", $.UInt32);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncManagedCallArgument", $.UInt32);

    $.Property({Static:false, Public:true , Virtual:true }, "AsyncManagedCallType", $asm01.TypeRef("Microsoft.Xna.Framework.ManagedCallType"));

    $.Property({Static:true , Public:false}, "VirtualTitleId", $asm06.TypeRef("System.Guid"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable"), 
      /* 1 */ $asm01.TypeRef("Microsoft.Xna.Framework.IProxyProcessHandler")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.SharedMemoryRegion */ 

(function SharedMemoryRegion$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.SharedMemoryRegion", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_FileHandle", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MappedPointer", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false}, "size", $.Int32); 
    $.Field({Static:false, Public:false}, "fileHandle", $asm06.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "mappedPointer", $asm06.TypeRef("System.IntPtr")); 
    $.Property({Static:false, Public:true }, "Size", $.Int32);

    $.Property({Static:false, Public:true }, "FileHandle", $asm06.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true }, "MappedPointer", $asm06.TypeRef("System.IntPtr"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Xna.Framework.GamerServices.KernelCallType */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.KernelCallType", false, {
    RunUnitTest: 1, 
    TellKernelToCallManagedUnitTestFunction: 2, 
    DrawGuide: 3, 
    WindowsMessage: 4, 
    GamerServices_SetTitleName: 5, 
    GamerServices_Update: 6, 
    KernelAsyncDispatcher_CleanUpAsyncOperation: 7, 
    Gamer_IsFriend: 8, 
    Gamer_BeginGetProfile: 9, 
    Gamer_EndGetProfile: 10, 
    Gamer_BeginAwardAchievement: 11, 
    Gamer_BeginAwardPicture: 12, 
    Gamer_BeginGetAchievements: 13, 
    Gamer_EndGetAchievements: 14, 
    BeginCheckStrings: 15, 
    EndCheckStrings: 16, 
    FriendCollection_GetFriends: 17, 
    FriendCollection_Dispose: 18, 
    Guide_BeginShowMessageBox: 19, 
    Guide_EndShowMessageBox: 20, 
    Guide_BeginShowKeyboardInput: 21, 
    Guide_EndShowKeyboardInput: 22, 
    Guide_BeginShowStorageDeviceSelector: 23, 
    Guide_EndShowStorageDeviceSelector: 24, 
    Guide_ShowSignIn: 25, 
    Guide_ShowMessages: 26, 
    Guide_ShowFriends: 27, 
    Guide_ShowPlayers: 28, 
    Guide_ShowFriendRequest: 29, 
    Guide_ShowPlayerReview: 30, 
    Guide_ShowGamerCard: 31, 
    Guide_ShowComposeMessage: 32, 
    Guide_SetNotificationPosition: 33, 
    Guide_EnableScreenSaver: 34, 
    Guide_DelayNotifications: 35, 
    Guide_ShowAchievements: 36, 
    Guide_ShowGameInvite: 37, 
    Guide_ShowMarketplace: 38, 
    NetworkSession_BeginCreate: 39, 
    NetworkSession_EndCreate: 40, 
    NetworkSession_BeginJoinInvited: 41, 
    NetworkSession_EndJoinInvited: 42, 
    NetworkSession_Update: 43, 
    NetworkSession_Destroy: 44, 
    NetworkSession_AddLocalGamer: 45, 
    SessionFinder_BeginFindSessions: 46, 
    SessionFinder_EndFindSessions: 47, 
    SessionFinder_BeginJoin: 48, 
    SessionFinder_EndJoin: 49, 
    SessionFinder_Destroy: 50, 
    SessionFinder_GetQualityOfService: 51, 
    Leaderboard_Dispose: 52, 
    Leaderboard_BeginReadGamerList: 53, 
    Leaderboard_BeginReadPivotGamer: 54, 
    Leaderboard_BeginReadByRank: 55, 
    Leaderboard_EndRead: 56, 
    Leaderboard_BeginPage: 57, 
    Leaderboard_EndPage: 58, 
    Gamer_EndAwardPicture: 59, 
    Gamer_EndAwardAchievement: 60, 
    Guide_ShowParty: 61, 
    Guide_ShowPartySessions: 62, 
    Party_SendInvites: 63, 
    Storage_BeginOpenContent: 64, 
    Storage_EndOpenContent: 65, 
    Storage_BeginGetDownloadedContent: 66, 
    Storage_EndGetDownloadedContent: 67, 
    Storage_BeginGetProfileData: 68, 
    Storage_EndGetProfileData: 69, 
    Storage_BeginSetProfileData: 70, 
    Storage_EndSetProfileData: 71, 
    AvatarRenderer_Create: 72, 
    AvatarRenderer_ReleaseHandle: 73, 
    AvatarRenderer_IsLoaded: 74, 
    AvatarRenderer_Draw: 75, 
    AvatarRenderer_GetBindPose: 76, 
    AvatarDescription_BeginGetFromGamer: 77, 
    AvatarDescription_EndGetFromGamer: 78, 
    AvatarDescription_CreateRandom: 79, 
    AvatarDescription_GetHeight: 80, 
    AvatarDescription_GetBodyType: 81, 
    AvatarAnimation_Create: 82, 
    AvatarAnimation_ReleaseHandle: 83, 
    AvatarAnimation_Update: 84, 
    Guide_ShowDownloadableContentOffers: 85, 
    TitleServiceConnection_Create: 86, 
    TitleServiceConnection_Dispose: 87, 
    TitleServiceConnection_Connect: 88, 
    TitleServiceConnection_Disconnect: 89, 
    TitleServiceConnection_GetStatus: 90, 
    TitleServiceConnection_GetConnectionResults: 91, 
    TitleServiceConnection_Cancel: 92, 
    TitleServiceDirectory_Create: 93, 
    TitleServiceDirectory_Dispose: 94, 
    TitleServiceDirectory_FindService: 95, 
    TitleServiceDirectory_GetFindServiceResults: 96, 
    TitleServiceDirectory_Cancel: 97, 
    Gamer_GetXUID: 98
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.ProxyExitCode */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.ProxyExitCode", false, {
    ProxyOk: 0, 
    ProxyError: 1, 
    ProxyAlreadyRunning: 2, 
    NoCreatorsClub: 3
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.UpdateOutputCommand */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.UpdateOutputCommand", false, {
    NoMoreCommands: 0, 
    PlayerSigninStatusChanged: 1, 
    NotifyInviteAccepted: 2, 
    PartyMembersChanged: 3, 
    AvatarChanged: 4
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.PlayerSignInState */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.PlayerSignInState", false, {
    NotSignedIn: 0, 
    SignedInLocally: 1, 
    SignedInToLive: 2
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.GuideState */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GuideState", false, {
    IsGuideVisible: 1, 
    IsNetworkCableUnplugged: 2, 
    IsTrialMode: 4
  }, true
);

/* enum Microsoft.Xna.Framework.GamerServices.MessageBoxIcon */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.MessageBoxIcon", true, {
    None: 0, 
    Error: 1, 
    Warning: 2, 
    Alert: 3
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.GfServiceType */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GfServiceType", false, {
    Invalid: 0, 
    Rewards: 1, 
    GameData: 2, 
    Profile: 3, 
    Notifications: 4
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.GfRequestMethod */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GfRequestMethod", false, {
    Get: 0, 
    Post: 1, 
    Delete: 2, 
    Put: 3
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.NotificationPosition */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.NotificationPosition", true, {
    TopLeft: 0, 
    TopCenter: 1, 
    TopRight: 2, 
    CenterLeft: 3, 
    Center: 4, 
    CenterRight: 5, 
    BottomLeft: 6, 
    BottomCenter: 7, 
    BottomRight: 8
  }, false
);

/* class Microsoft.Xna.Framework.GamerServices.ParameterValidation */ 

(function ParameterValidation$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.GamerServices.ParameterValidation", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:true }, "MaxRecipientGamers", 100); 
    $.Constant({Static:true , Public:true }, "MaximumStringLength", 256); 
    $.Constant({Static:true , Public:true }, "MaximumStringCheckerStrings", 10); 
    $.Constant({Static:true , Public:true }, "MaxLeaderboardWrites", 5); 
    $.Constant({Static:true , Public:true }, "MaxLeaderboardColumnWrites", 93); 
    $.Constant({Static:true , Public:true }, "MaxLeaderboardRowReads", 100); 
    $.Constant({Static:true , Public:true }, "MaxLeaderboardGamerReads", 101); 
    $.Constant({Static:true , Public:true }, "MaxLeaderboardBlobSize", 10240); 
    $.Constant({Static:true , Public:true }, "MaxSessionIdStringLength", 65); 
    $.Constant({Static:true , Public:true }, "MaxGamertagStringLength", 16); 
    $.Constant({Static:true , Public:true }, "MaxPreviousGamers", 100); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions", false, {
    AllowNone: 0, 
    AllowOnlineSessions: 1, 
    AllowCommunication: 2, 
    AllowCommunicationFriendsOnly: 4, 
    AllowProfileViewing: 8, 
    AllowProfileViewingFriendsOnly: 16, 
    AllowUserCreatedContent: 32, 
    AllowUserCreatedContentFriendsOnly: 64, 
    AllowTradeContent: 128, 
    AllowPurchaseContent: 256, 
    AllowPremiumContent: 512
  }, true
);

/* enum Microsoft.Xna.Framework.GamerServices.ControllerSensitivity */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.ControllerSensitivity", true, {
    Low: 0, 
    Medium: 1, 
    High: 2
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.GameDifficulty */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GameDifficulty", true, {
    Easy: 0, 
    Normal: 1, 
    Hard: 2
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.RacingCameraAngle */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.RacingCameraAngle", true, {
    Back: 0, 
    Front: 1, 
    Inside: 2
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.GamerZone */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GamerZone", true, {
    Unknown: 0, 
    Recreation: 1, 
    Pro: 2, 
    Family: 3, 
    Underground: 4
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.FriendState */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.FriendState", false, {
    FriendIsOnline: 1, 
    FriendIsPlaying: 2, 
    FriendIsJoinable: 4, 
    FriendIsAway: 8, 
    FriendIsBusy: 16, 
    FriendHasVoice: 32, 
    FriendRequestReceivedFrom: 64, 
    FriendRequestSentTo: 128, 
    InviteReceivedFrom: 256, 
    InviteSentTo: 512, 
    InviteAccepted: 1024, 
    InviteRejected: 2048
  }, true
);

/* enum Microsoft.Xna.Framework.GamerServices.GamerPresenceMode */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GamerPresenceMode", true, {
    None: 0, 
    SinglePlayer: 1, 
    Multiplayer: 2, 
    LocalCoOp: 3, 
    LocalVersus: 4, 
    OnlineCoOp: 5, 
    OnlineVersus: 6, 
    VersusComputer: 7, 
    Stage: 8, 
    Level: 9, 
    CoOpStage: 10, 
    CoOpLevel: 11, 
    ArcadeMode: 12, 
    CampaignMode: 13, 
    ChallengeMode: 14, 
    ExplorationMode: 15, 
    PracticeMode: 16, 
    PuzzleMode: 17, 
    ScenarioMode: 18, 
    StoryMode: 19, 
    SurvivalMode: 20, 
    TutorialMode: 21, 
    DifficultyEasy: 22, 
    DifficultyMedium: 23, 
    DifficultyHard: 24, 
    DifficultyExtreme: 25, 
    Score: 26, 
    VersusScore: 27, 
    Winning: 28, 
    Losing: 29, 
    ScoreIsTied: 30, 
    Outnumbered: 31, 
    OnARoll: 32, 
    InCombat: 33, 
    BattlingBoss: 34, 
    TimeAttack: 35, 
    TryingForRecord: 36, 
    FreePlay: 37, 
    WastingTime: 38, 
    StuckOnAHardBit: 39, 
    NearlyFinished: 40, 
    LookingForGames: 41, 
    WaitingForPlayers: 42, 
    WaitingInLobby: 43, 
    SettingUpMatch: 44, 
    PlayingWithFriends: 45, 
    AtMenu: 46, 
    StartingGame: 47, 
    Paused: 48, 
    GameOver: 49, 
    WonTheGame: 50, 
    ConfiguringSettings: 51, 
    CustomizingPlayer: 52, 
    EditingLevel: 53, 
    InGameStore: 54, 
    WatchingCutscene: 55, 
    WatchingCredits: 56, 
    PlayingMinigame: 57, 
    FoundSecret: 58, 
    CornflowerBlue: 59
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.LeaderboardKey */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.LeaderboardKey", true, {
    BestScoreLifeTime: 0, 
    BestScoreRecent: 1, 
    BestTimeLifeTime: 2, 
    BestTimeRecent: 3
  }, false
);

/* enum Microsoft.Xna.Framework.GamerServices.LeaderboardOutcome */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.LeaderboardOutcome", true, {
    None: 0, 
    Win: 1, 
    Loss: 2, 
    Tie: 3
  }, false
);

/* class Microsoft.Xna.Framework.GamerServices.FriendCollection */ 

(function FriendCollection$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerCollection`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendGamer")]), 
      Name: "Microsoft.Xna.Framework.GamerServices.FriendCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.UInt32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Action($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Field({Static:false, Public:false}, "kernelHandle", $.UInt32); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.ImplementInterfaces(
      /* 9 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.NetworkException */ 

(function NetworkException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Exception"), 
      Name: "Microsoft.Xna.Framework.GamerServices.NetworkException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.NetworkNotAvailableException */ 

(function NetworkNotAvailableException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.NetworkException"), 
      Name: "Microsoft.Xna.Framework.GamerServices.NetworkNotAvailableException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GameDefaults */ 

(function GameDefaults$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GameDefaults", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AccelerateWithButtons", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AutoAim", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_AutoCenter", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_BrakeWithButtons", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ControllerSensitivity", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.ControllerSensitivity"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GameDifficulty", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDifficulty"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_InvertYAxis", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_ManualTransmission", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_MoveWithRightThumbStick", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PrimaryColor", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_RacingCameraAngle", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.RacingCameraAngle"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_SecondaryColor", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]))
    );

    $.Field({Static:false, Public:false}, "gameDifficulty", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDifficulty")); 
    $.Field({Static:false, Public:false}, "controllerSensitivity", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.ControllerSensitivity")); 
    $.Field({Static:false, Public:false}, "primaryColor", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")])); 
    $.Field({Static:false, Public:false}, "secondaryColor", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")])); 
    $.Field({Static:false, Public:false}, "autoAim", $.Boolean); 
    $.Field({Static:false, Public:false}, "autoCenter", $.Boolean); 
    $.Field({Static:false, Public:false}, "moveWithRightThumbStick", $.Boolean); 
    $.Field({Static:false, Public:false}, "invertYAxis", $.Boolean); 
    $.Field({Static:false, Public:false}, "manualTransmission", $.Boolean); 
    $.Field({Static:false, Public:false}, "racingCameraAngle", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.RacingCameraAngle")); 
    $.Field({Static:false, Public:false}, "accelerateWithButtons", $.Boolean); 
    $.Field({Static:false, Public:false}, "brakeWithButtons", $.Boolean); 
    $.Property({Static:false, Public:true }, "GameDifficulty", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDifficulty"));

    $.Property({Static:false, Public:true }, "ControllerSensitivity", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.ControllerSensitivity"));

    $.Property({Static:false, Public:true }, "PrimaryColor", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]));

    $.Property({Static:false, Public:true }, "SecondaryColor", $asm06.TypeRef("System.Nullable`1", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")]));

    $.Property({Static:false, Public:true }, "AutoAim", $.Boolean);

    $.Property({Static:false, Public:true }, "AutoCenter", $.Boolean);

    $.Property({Static:false, Public:true }, "MoveWithRightThumbStick", $.Boolean);

    $.Property({Static:false, Public:true }, "InvertYAxis", $.Boolean);

    $.Property({Static:false, Public:true }, "ManualTransmission", $.Boolean);

    $.Property({Static:false, Public:true }, "RacingCameraAngle", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.RacingCameraAngle"));

    $.Property({Static:false, Public:true }, "AccelerateWithButtons", $.Boolean);

    $.Property({Static:false, Public:true }, "BrakeWithButtons", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GamerPresence */ 

(function GamerPresence$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerPresence", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PresenceMode", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresenceMode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PresenceValue", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PresenceMode", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresenceMode"))
    );

    $.ExternalMethod({Static:false, Public:true }, "set_PresenceValue", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:false, Public:false}, "WriteChanges", 
      new JSIL.MethodSignature(null, [
          $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"), 
          $jsilcore.TypeRef("JSIL.Pointer", [$.Byte])
        ])
    );

    $.Field({Static:false, Public:false}, "presenceMode", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresenceMode")); 
    $.Field({Static:false, Public:false}, "presenceValue", $.Int32); 
    $.Field({Static:false, Public:false}, "presenceChanged", $.Boolean); 
    $.Property({Static:false, Public:true }, "PresenceMode", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresenceMode"));

    $.Property({Static:false, Public:true }, "PresenceValue", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GamerProfile */ 

(function GamerProfile$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerProfile", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GamerScore", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GamerZone", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerZone"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsDisposed", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Motto", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Region", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Globalization.RegionInfo"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Reputation", 
      JSIL.MethodSignature.Return($.Single)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TitlesPlayed", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_TotalAchievements", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetGamerPicture", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IO.Stream"))
    );

    $.Constant({Static:true , Public:false}, "pictureSize", 64); 
    $.Field({Static:false, Public:false}, "isDisposed", $.Boolean); 
    $.Field({Static:false, Public:false}, "motto", $.String); 
    $.Field({Static:false, Public:false}, "reputation", $.Single); 
    $.Field({Static:false, Public:false}, "gamerZone", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerZone")); 
    $.Field({Static:false, Public:false}, "region", $asm06.TypeRef("System.Globalization.RegionInfo")); 
    $.Field({Static:false, Public:false}, "gamerScore", $.Int32); 
    $.Field({Static:false, Public:false}, "titlesPlayed", $.Int32); 
    $.Field({Static:false, Public:false}, "totalAchievements", $.Int32); 
    $.Field({Static:false, Public:false}, "pictureData", $jsilcore.TypeRef("System.Array", [$asm01.TypeRef("Microsoft.Xna.Framework.Color")])); 
    $.Property({Static:false, Public:true }, "IsDisposed", $.Boolean);

    $.Property({Static:false, Public:true }, "Motto", $.String);

    $.Property({Static:false, Public:true }, "Reputation", $.Single);

    $.Property({Static:false, Public:true }, "GamerZone", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerZone"));

    $.Property({Static:false, Public:true }, "Region", $asm06.TypeRef("System.Globalization.RegionInfo"));

    $.Property({Static:false, Public:true }, "GamerScore", $.Int32);

    $.Property({Static:false, Public:true }, "TitlesPlayed", $.Int32);

    $.Property({Static:false, Public:true }, "TotalAchievements", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GamerServicesDispatcher */ 

(function GamerServicesDispatcher$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("Microsoft.Xna.Framework.GamerServices.GamerServicesDispatcher", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:true }, "add_InstallingTitleUpdate", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "add_InviteAccepted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "CleanupAsyncCall", 
      JSIL.MethodSignature.Action($.UInt32)
    );

    $.ExternalMethod({Static:true , Public:true }, "get_IsInitialized", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_PacketBuffer", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_WindowHandle", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandleTitleUpdate", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:true , Public:true }, "Initialize", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IServiceProvider"))
    );

    $.ExternalMethod({Static:true , Public:false}, "OnInviteAccepted", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs"))
    );

    $.ExternalMethod({Static:true , Public:false}, "PlatformInitialize", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "PlatformUpdate", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadAvatarChanged", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadPartyMembersChanged", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])]))
    );

    $.ExternalMethod({Static:true , Public:false}, "ReadPlayerSigninStatusChanged", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])]), $jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    );

    $.ExternalMethod({Static:true , Public:true }, "remove_InstallingTitleUpdate", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "remove_InviteAccepted", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "set_WindowHandle", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IntPtr"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetTitleName", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:true }, "Update", 
      JSIL.MethodSignature.Void
    );

    $.Constant({Static:true , Public:false}, "PacketBufferSize", 17420); 
    $.Field({Static:true , Public:false}, "serviceProvider", $asm06.TypeRef("System.IServiceProvider")); 
    $.Field({Static:true , Public:false}, "packetBuffer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer")); 
    $.Field({Static:true , Public:false}, "playerStates", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PlayerState")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.GamerServices.PlayerState, 4);
      }); 
    $.Field({Static:true , Public:false}, "changedPlayerIndices", $jsilcore.TypeRef("System.Array", [$.Int32]), function ($pi) {
        return JSIL.Array.New($asm06.System.Int32, 4);
      }); 
    $.Field({Static:true , Public:false}, "inviteAccepted", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")])); 
    $.Field({Static:true , Public:false}, "pendingInviteAccepted", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")); 
    $.Field({Static:true , Public:false}, "InstallingTitleUpdate", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")])); 
    $.Field({Static:true , Public:false}, "guideMessageHooker", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GuideMessageHooker")); 
    $.Field({Static:true , Public:false}, "pendingWindowHandle", $asm06.TypeRef("System.IntPtr")); 
    $.Property({Static:true , Public:false}, "PacketBuffer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"));

    $.Property({Static:true , Public:true }, "IsInitialized", $.Boolean);

    $.Property({Static:true , Public:true }, "WindowHandle", $asm06.TypeRef("System.IntPtr"));

    $.Event({Static:true , Public:false}, "InviteAccepted", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.InviteAcceptedEventArgs")]));

    $.Event({Static:true , Public:true }, "InstallingTitleUpdate", $asm06.TypeRef("System.EventHandler`1", [$asm06.TypeRef("System.EventArgs")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Microsoft.Xna.Framework.GamerServices.GamerServicesDispatcher+PlayerBitMasks */ 

JSIL.MakeEnum(
  "Microsoft.Xna.Framework.GamerServices.GamerServicesDispatcher+PlayerBitMasks", false, {
    One: 1, 
    Two: 2, 
    Three: 4, 
    Four: 8
  }, true
);

/* class Microsoft.Xna.Framework.GamerServices.GamerPrivilegeException */ 

(function GamerPrivilegeException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Exception"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GamerPrivilegeException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GameUpdateRequiredException */ 

(function GameUpdateRequiredException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Exception"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GameUpdateRequiredException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GuideAlreadyVisibleException */ 

(function GuideAlreadyVisibleException$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Exception"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GuideAlreadyVisibleException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")])
    );

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Runtime.Serialization.SerializationInfo"), $asm06.TypeRef("System.Runtime.Serialization.StreamingContext")])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.SignedInGamer */ 

(function SignedInGamer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer"), 
      Name: "Microsoft.Xna.Framework.GamerServices.SignedInGamer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.String, 
          $.Boolean, $.Boolean, 
          $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDefaults"), $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivilegeOptions"), 
          $.Int32
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "add_signedIn", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "add_SignedIn", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "add_SignedOut", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:true }, "AwardAchievement", 
      JSIL.MethodSignature.Action($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginAwardAchievement", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [
          $.String, $asm06.TypeRef("System.AsyncCallback"), 
          $.Object
        ])
    );

    $.ExternalMethod({Static:false, Public:true }, "BeginGetAchievements", 
      new JSIL.MethodSignature($asm06.TypeRef("System.IAsyncResult"), [$asm06.TypeRef("System.AsyncCallback"), $.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "EndAwardAchievement", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IAsyncResult"))
    );

    $.ExternalMethod({Static:false, Public:true }, "EndGetAchievements", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.AchievementCollection"), [$asm06.TypeRef("System.IAsyncResult")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GameDefaults", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDefaults"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsGuest", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsSignedInToLive", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PartySize", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_PlayerIndex", 
      JSIL.MethodSignature.Return($asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Presence", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresence"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Privileges", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivileges"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetAchievements", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.AchievementCollection"))
    );

    $.ExternalMethod({Static:false, Public:true }, "GetFriends", 
      JSIL.MethodSignature.Return($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.FriendCollection"))
    );

    $.ExternalMethod({Static:true , Public:false}, "HandlePlayerSignInChanged", 
      JSIL.MethodSignature.Action($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PlayerState"))
    );

    $.ExternalMethod({Static:false, Public:true }, "IsFriend", 
      new JSIL.MethodSignature($.Boolean, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.Gamer")])
    );

    $.ExternalMethod({Static:false, Public:true }, "IsHeadset", 
      new JSIL.MethodSignature($.Boolean, [$asm01.TypeRef("Microsoft.Xna.Framework.Audio.Microphone")])
    );

    $.ExternalMethod({Static:true , Public:false}, "remove_signedIn", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "remove_SignedIn", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]))
    );

    $.ExternalMethod({Static:true , Public:true }, "remove_SignedOut", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "set_PartySize", 
      JSIL.MethodSignature.Action($.Int32)
    );

    $.ExternalMethod({Static:true , Public:false}, "WritePresenceChanges", 
      new JSIL.MethodSignature(null, [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer"), $jsilcore.TypeRef("JSIL.Pointer", [$.Byte])])
    );

    $.Field({Static:false, Public:false}, "playerIndex", $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex")); 
    $.Field({Static:false, Public:false}, "isSignedInToLive", $.Boolean); 
    $.Field({Static:false, Public:false}, "isGuest", $.Boolean); 
    $.Field({Static:false, Public:false}, "gameDefaults", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDefaults")); 
    $.Field({Static:false, Public:false}, "privileges", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivileges")); 
    $.Field({Static:false, Public:false}, "partySize", $.Int32); 
    $.Field({Static:true , Public:false}, "signedIn", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")])); 
    $.Field({Static:true , Public:false}, "SignedOut", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs")])); 
    $.Field({Static:true , Public:false}, "cachedPlayerStates", $jsilcore.TypeRef("System.Array", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.PlayerState")]), function ($pi) {
        return JSIL.Array.New($asm03.Microsoft.Xna.Framework.GamerServices.PlayerState, 4);
      }); 
    $.Field({Static:false, Public:false}, "presence", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresence")); 
    $.Property({Static:false, Public:true }, "PlayerIndex", $asm01.TypeRef("Microsoft.Xna.Framework.PlayerIndex"));

    $.Property({Static:false, Public:true }, "IsSignedInToLive", $.Boolean);

    $.Property({Static:false, Public:true }, "IsGuest", $.Boolean);

    $.Property({Static:false, Public:true }, "GameDefaults", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GameDefaults"));

    $.Property({Static:false, Public:true }, "Privileges", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPrivileges"));

    $.Property({Static:false, Public:true }, "PartySize", $.Int32);

    $.Property({Static:false, Public:true }, "Presence", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.GamerPresence"));

    $.Event({Static:true , Public:true }, "SignedIn", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]));

    $.Event({Static:true , Public:false}, "signedIn", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedInEventArgs")]));

    $.Event({Static:true , Public:true }, "SignedOut", $asm06.TypeRef("System.EventHandler`1", [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.SignedOutEventArgs")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.Achievement */ 

(function Achievement$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.Achievement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("JSIL.Pointer", [$.Byte])]))
    );

    $.ExternalMethod({Static:false, Public:false}, "Dispose", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DisplayBeforeEarned", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EarnedDateTime", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.DateTime"))
    );

    $.ExternalMethod({Static:false, Public:true }, "get_EarnedOnline", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_GamerScore", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_HowToEarn", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsEarned", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Key", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:true }, "GetPicture", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IO.Stream"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "Id", $.Int32); 
    $.Property({Static:false, Public:true }, "Key", $.String);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "Description", $.String);

    $.Property({Static:false, Public:true }, "HowToEarn", $.String);

    $.Property({Static:false, Public:true }, "GamerScore", $.Int32);

    $.Property({Static:false, Public:true }, "IsEarned", $.Boolean);

    $.Property({Static:false, Public:true }, "EarnedOnline", $.Boolean);

    $.Property({Static:false, Public:true }, "DisplayBeforeEarned", $.Boolean);

    $.Property({Static:false, Public:true }, "EarnedDateTime", $asm06.TypeRef("System.DateTime"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.LeaderboardWriter */ 

(function LeaderboardWriter$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.LeaderboardWriter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "GetLeaderboard", 
      new JSIL.MethodSignature($asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardEntry"), [$asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.LeaderboardIdentity")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GuideRendererProxySource */ 

(function GuideRendererProxySource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.IServiceProvider)) ();
  };

  function GuideRendererProxySource_get_ServiceProvider () {
    return this.GuideRendererProxySource$ServiceProvider$value;
  };

  function GuideRendererProxySource_set_ServiceProvider (value) {
    this.GuideRendererProxySource$ServiceProvider$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GuideRendererProxySource", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IServiceProvider"))
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_ServiceProvider", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.IServiceProvider")), 
      GuideRendererProxySource_get_ServiceProvider
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetDrawingCommandsFromProxy", 
      new JSIL.MethodSignature($.Boolean, [
          $.Int32, $.Int32, 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.IntPtr")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.Method({Static:false, Public:false}, "set_ServiceProvider", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.IServiceProvider")), 
      GuideRendererProxySource_set_ServiceProvider
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Constant({Static:true , Public:false}, "initialDrawBufferSize", 1024); 
    $.Field({Static:false, Public:false}, "drawCommandBuffer", $asm03.TypeRef("Microsoft.Xna.Framework.GamerServices.UserPacketBuffer")); 
    $.Field({Static:false, Public:false}, "GuideRendererProxySource$ServiceProvider$value", $asm06.TypeRef("System.IServiceProvider"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true , Virtual:true }, "ServiceProvider", $asm06.TypeRef("System.IServiceProvider"));

    $.ImplementInterfaces(
      /* 0 */ $asm01.TypeRef("Microsoft.Xna.Framework.GamerServices.IGuideRendererProxySource")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Microsoft.Xna.Framework.GamerServices.GuideMessageHooker */ 

(function GuideMessageHooker$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm01.TypeRef("Microsoft.Xna.Framework.Input.WindowMessageHooker"), 
      Name: "Microsoft.Xna.Framework.GamerServices.GuideMessageHooker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "SendMessageToProxy", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Nullable`1", [$asm06.TypeRef("System.IntPtr")]), [
          $.UInt32, $asm06.TypeRef("System.IntPtr"), 
          $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "WndProc", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Nullable`1", [$asm06.TypeRef("System.IntPtr")]), [
          $asm06.TypeRef("System.IntPtr"), $.UInt32, 
          $asm06.TypeRef("System.IntPtr"), $asm06.TypeRef("System.IntPtr")
        ])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

